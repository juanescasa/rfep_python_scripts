<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='oTotalCost (Copy of outputRFEP_v3 Analysis 2)' inline='true' name='federated.1e2jrqf1718m4c1am3voi0ldfls4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of outputRFEP_v3 Analysis 2' name='excel-direct.0fcynss190g4i91ad2rp10uvb9x9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/OneDrive - Deakin University/OD/calle test/Disun Applications/Gurobi Applications/output/Copy of outputRFEP_v3 Analysis 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0fcynss190g4i91ad2rp10uvb9x9' name='oTotalCost' table='[oTotalCost$]' type='table'>
          <columns gridOrigin='A1:H124:no:A1:H124:0' header='yes' outcome='6'>
            <column datatype='string' name='Scenario' ordinal='0' />
            <column datatype='real' name='TotalRefuellingCost' ordinal='1' />
            <column datatype='real' name='TotalLocationCost' ordinal='2' />
            <column datatype='real' name='TotalDiscount' ordinal='3' />
            <column datatype='real' name='TotalCost' ordinal='4' />
            <column datatype='string' name='input file' ordinal='5' />
            <column datatype='string' name='Solution Methodology' ordinal='6' />
            <column datatype='integer' name='Path length' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRefuellingCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalRefuellingCost]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>TotalRefuellingCost</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalLocationCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalLocationCost]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>TotalLocationCost</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDiscount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalDiscount]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>TotalDiscount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalCost]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>TotalCost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input file</remote-name>
            <remote-type>130</remote-type>
            <local-name>[input file]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>input file</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solution Methodology</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Solution Methodology]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>Solution Methodology</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path length]</local-name>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias>Path length</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[oTotalCost]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H124:no:A1:H124:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Path length]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Solution Methodology]' role='dimension' type='nominal' />
      <column caption='Total Cost' datatype='real' name='[TotalCost]' role='measure' type='quantitative' />
      <column caption='Total Discount' datatype='real' name='[TotalDiscount]' role='measure' type='quantitative' />
      <column caption='Total Location Cost' datatype='real' name='[TotalLocationCost]' role='measure' type='quantitative' />
      <column caption='Total Refuelling Cost' datatype='real' name='[TotalRefuellingCost]' role='measure' type='quantitative' />
      <column caption='Input File' datatype='string' name='[input file]' role='dimension' type='nominal' />
      <column-instance column='[Solution Methodology]' derivation='None' name='[none:Solution Methodology:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.45925' measure-ordering='alphabetic' measure-percentage='0.54075' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Solution Methodology:nk]' type='palette'>
            <map to='#5c6068'>
              <bucket>&quot;DRx3-RFEP&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;RFEP&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' inline='true' name='federated.17wfpcd1y3eun912fy4830w34dg2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outputRFEP_v3 Analysis' name='excel-direct.1snlyyl1mbbhzf11v6jyx0n83bey'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/OneDrive - Deakin University/OD/calle test/Disun Applications/Gurobi Applications/output/Copy of outputRFEP_v3 Analysis 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1snlyyl1mbbhzf11v6jyx0n83bey' name='oScenarioStats' table='[oScenarioStats$]' type='table'>
          <columns gridOrigin='A1:CR205:no:A1:CR205:0' header='yes' outcome='2'>
            <column datatype='string' name='input file' ordinal='0' />
            <column datatype='string' name='Scenario' ordinal='1' />
            <column datatype='integer' name='number type vehicles' ordinal='2' />
            <column datatype='integer' name='number paths' ordinal='3' />
            <column datatype='real' name='average stations per path' ordinal='4' />
            <column datatype='integer' name='number candidate locations' ordinal='5' />
            <column datatype='string' name='time read data (s)' ordinal='6' />
            <column datatype='string' name='time calculate parameters (s)' ordinal='7' />
            <column datatype='string' name='time generate model (s)' ordinal='8' />
            <column datatype='string' name='time optimise model (s)' ordinal='9' />
            <column datatype='string' name='time export results (s)' ordinal='10' />
            <column datatype='real' name='time Gurobi run (s)' ordinal='11' />
            <column datatype='integer' name='number constraints' ordinal='12' />
            <column datatype='integer' name='number variables' ordinal='13' />
            <column datatype='integer' name='number integer variables' ordinal='14' />
            <column datatype='integer' name='number binary variables' ordinal='15' />
            <column datatype='integer' name='model fingerprint' ordinal='16' />
            <column datatype='real' name='MIP gap' ordinal='17' />
            <column datatype='real' name='total time' ordinal='18' />
            <column datatype='integer' name='node count' ordinal='19' />
            <column datatype='real' name='initial gap' ordinal='20' />
            <column datatype='real' name='time first incumbent' ordinal='21' />
            <column datatype='integer' name='status' ordinal='22' />
            <column datatype='real' name='time_read_df_vehicles' ordinal='23' />
            <column datatype='real' name='time_assignment_df_vehicles' ordinal='24' />
            <column datatype='real' name='time_read_df_suppliers' ordinal='25' />
            <column datatype='real' name='time_assigment_df_suppliers' ordinal='26' />
            <column datatype='real' name='time_read_df_ranges' ordinal='27' />
            <column datatype='real' name='time_assignment_df_ranges' ordinal='28' />
            <column datatype='real' name='time_read_df_NodesNodes' ordinal='29' />
            <column datatype='real' name='time_assignment_df_NodesNodes' ordinal='30' />
            <column datatype='real' name='time_read_df_SubStations' ordinal='31' />
            <column datatype='real' name='time_assignment_df_SubStations' ordinal='32' />
            <column datatype='real' name='time_read_df_VehiclesPaths' ordinal='33' />
            <column datatype='real' name='time_assignment_df_VehiclesPaths' ordinal='34' />
            <column datatype='real' name='time_read_df_NodesPaths' ordinal='35' />
            <column datatype='real' name='time_assignment_df_NodesPaths' ordinal='36' />
            <column datatype='real' name='time_read_df_SuppliersRange' ordinal='37' />
            <column datatype='real' name='time_assignment_df_SuppliersRange' ordinal='38' />
            <column datatype='real' name='time_read_df_NodesNodesPaths' ordinal='39' />
            <column datatype='real' name='time_assignment_df_NodesNodesPaths' ordinal='40' />
            <column datatype='real' name='time_calculate_sStations' ordinal='41' />
            <column datatype='real' name='time_calculate_sStationsPaths' ordinal='42' />
            <column datatype='real' name='time_calculate_sNodesVehiclesPaths' ordinal='43' />
            <column datatype='real' name='time_calculate_sStationsVehiclesPaths' ordinal='44' />
            <column datatype='real' name='time_calculate_sDestinationVehiclesPaths' ordinal='45' />
            <column datatype='real' name='time_calculate_sOriginVehiclesPaths' ordinal='46' />
            <column datatype='real' name='time_calculate_sFirstStationVehiclesPaths' ordinal='47' />
            <column datatype='real' name='time_calculate_sAuxNotFirstStationVehiclesPaths' ordinal='48' />
            <column datatype='real' name='time_calculate_sNotFirstStationVehiclesPaths' ordinal='49' />
            <column datatype='real' name='time_calculate_sNodesPotentialNodesOriginalVehiclesPaths' ordinal='50' />
            <column datatype='real' name='time_calculate_sSequenceNodesNodesVehiclesPaths' ordinal='51' />
            <column datatype='real' name='time_calculate_sStationsSuppliers' ordinal='52' />
            <column datatype='real' name='time_calculate_pPrice' ordinal='53' />
            <column datatype='real' name='time_calculate_pConsumptionOOP' ordinal='54' />
            <column datatype='real' name='time_calculate_pConsumptionMainRoute' ordinal='55' />
            <column datatype='real' name='time_calculate_pQuantityVehicles' ordinal='56' />
            <column datatype='real' name='time_calculate_pStartInventory' ordinal='57' />
            <column datatype='real' name='time_end_process' ordinal='58' />
            <column datatype='real' name='duration_read_df_vehicles' ordinal='59' />
            <column datatype='real' name='duration_assignment_df_vehicles' ordinal='60' />
            <column datatype='real' name='duration_read_df_suppliers' ordinal='61' />
            <column datatype='real' name='duration_assigment_df_suppliers' ordinal='62' />
            <column datatype='real' name='duration_read_df_ranges' ordinal='63' />
            <column datatype='real' name='duration_assignment_df_ranges' ordinal='64' />
            <column datatype='real' name='duration_read_df_NodesNodes' ordinal='65' />
            <column datatype='real' name='duration_assignment_df_NodesNodes' ordinal='66' />
            <column datatype='real' name='duration_read_df_SubStations' ordinal='67' />
            <column datatype='real' name='duration_assignment_df_SubStations' ordinal='68' />
            <column datatype='real' name='duration_read_df_VehiclesPaths' ordinal='69' />
            <column datatype='real' name='duration_assignment_df_VehiclesPaths' ordinal='70' />
            <column datatype='real' name='duration_read_df_NodesPaths' ordinal='71' />
            <column datatype='real' name='duration_assignment_df_NodesPaths' ordinal='72' />
            <column datatype='real' name='duration_read_df_SuppliersRange' ordinal='73' />
            <column datatype='real' name='duration_assignment_df_SuppliersRange' ordinal='74' />
            <column datatype='real' name='duration_read_df_NodesNodesPaths' ordinal='75' />
            <column datatype='real' name='duration_assignment_df_NodesNodesPaths' ordinal='76' />
            <column datatype='real' name='duration_calculate_sStations' ordinal='77' />
            <column datatype='real' name='duration_calculate_sStationsPaths' ordinal='78' />
            <column datatype='real' name='duration_calculate_sNodesVehiclesPaths' ordinal='79' />
            <column datatype='real' name='duration_calculate_sStationsVehiclesPaths' ordinal='80' />
            <column datatype='real' name='duration_calculate_sDestinationVehiclesPaths' ordinal='81' />
            <column datatype='real' name='duration_calculate_sOriginVehiclesPaths' ordinal='82' />
            <column datatype='real' name='duration_calculate_sFirstStationVehiclesPaths' ordinal='83' />
            <column datatype='real' name='duration_calculate_sAuxNotFirstStationVehiclesPaths' ordinal='84' />
            <column datatype='real' name='duration_calculate_sNotFirstStationVehiclesPaths' ordinal='85' />
            <column datatype='real' name='duration_calculate_sNodesPotentialNodesOriginalVehiclesPaths' ordinal='86' />
            <column datatype='real' name='duration_calculate_sSequenceNodesNodesVehiclesPaths' ordinal='87' />
            <column datatype='real' name='duration_calculate_sStationsSuppliers' ordinal='88' />
            <column datatype='real' name='duration_calculate_pPrice' ordinal='89' />
            <column datatype='real' name='duration_calculate_pConsumptionOOP' ordinal='90' />
            <column datatype='real' name='duration_calculate_pConsumptionMainRoute' ordinal='91' />
            <column datatype='real' name='duration_calculate_pQuantityVehicles' ordinal='92' />
            <column datatype='real' name='duration_calculate_pStartInventory' ordinal='93' />
            <column datatype='string' name='Solution Procedure' ordinal='94' />
            <column datatype='integer' name='Path Length' ordinal='95' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>input file</remote-name>
            <remote-type>130</remote-type>
            <local-name>[input file]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>input file</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number type vehicles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number type vehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number type vehicles</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number paths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number paths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number paths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average stations per path</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average stations per path]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>average stations per path</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number candidate locations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number candidate locations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number candidate locations</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time read data (s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time read data (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time read data (s)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time calculate parameters (s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time calculate parameters (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time calculate parameters (s)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time generate model (s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time generate model (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time generate model (s)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time optimise model (s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time optimise model (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time optimise model (s)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time export results (s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time export results (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time export results (s)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time Gurobi run (s)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time Gurobi run (s)]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time Gurobi run (s)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number constraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number constraints]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number constraints</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number variables]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number variables</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number integer variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number integer variables]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number integer variables</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number binary variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number binary variables]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>number binary variables</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model fingerprint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[model fingerprint]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>model fingerprint</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIP gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MIP gap]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>MIP gap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total time]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>total time</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>node count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[node count]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>node count</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>initial gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[initial gap]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>initial gap</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time first incumbent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time first incumbent]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time first incumbent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_vehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_vehicles</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_vehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_vehicles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_suppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_suppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_suppliers</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assigment_df_suppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assigment_df_suppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assigment_df_suppliers</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_ranges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_ranges]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_ranges</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_ranges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_ranges]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_ranges</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_NodesNodes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_NodesNodes]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_NodesNodes</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_NodesNodes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_NodesNodes]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_NodesNodes</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_SubStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_SubStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_SubStations</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_SubStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_SubStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_SubStations</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_VehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_VehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_VehiclesPaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_VehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_VehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_VehiclesPaths</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_NodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_NodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_NodesPaths</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_NodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_NodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_NodesPaths</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_SuppliersRange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_SuppliersRange]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_SuppliersRange</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_SuppliersRange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_SuppliersRange]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_SuppliersRange</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_read_df_NodesNodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_read_df_NodesNodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_read_df_NodesNodesPaths</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_assignment_df_NodesNodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_assignment_df_NodesNodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_assignment_df_NodesNodesPaths</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sStations</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sStationsPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sStationsPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sStationsPaths</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sNodesVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sNodesVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sNodesVehiclesPaths</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sStationsVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sStationsVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sStationsVehiclesPaths</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sDestinationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sDestinationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sDestinationVehiclesPaths</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sOriginVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sOriginVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sOriginVehiclesPaths</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sFirstStationVehiclesPaths</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sAuxNotFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sAuxNotFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sAuxNotFirstStationVehiclesPaths</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sNotFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sNotFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sNotFirstStationVehiclesPaths</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sNodesPotentialNodesOriginalVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sNodesPotentialNodesOriginalVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sNodesPotentialNodesOriginalVehiclesPaths</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sSequenceNodesNodesVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sSequenceNodesNodesVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sSequenceNodesNodesVehiclesPaths</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_sStationsSuppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_sStationsSuppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_sStationsSuppliers</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_pPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_pPrice]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_pPrice</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_pConsumptionOOP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_pConsumptionOOP]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_pConsumptionOOP</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_pConsumptionMainRoute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_pConsumptionMainRoute]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_pConsumptionMainRoute</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_pQuantityVehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_pQuantityVehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_pQuantityVehicles</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_calculate_pStartInventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_calculate_pStartInventory]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_calculate_pStartInventory</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_end_process</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time_end_process]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>time_end_process</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_vehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_vehicles</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_vehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_vehicles</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_suppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_suppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_suppliers</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assigment_df_suppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assigment_df_suppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assigment_df_suppliers</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_ranges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_ranges]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_ranges</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_ranges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_ranges]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_ranges</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_NodesNodes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_NodesNodes]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_NodesNodes</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_NodesNodes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_NodesNodes]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_NodesNodes</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_SubStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_SubStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_SubStations</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_SubStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_SubStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_SubStations</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_VehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_VehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_VehiclesPaths</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_VehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_VehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_VehiclesPaths</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_NodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_NodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_NodesPaths</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_NodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_NodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_NodesPaths</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_SuppliersRange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_SuppliersRange]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_SuppliersRange</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_SuppliersRange</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_SuppliersRange]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_SuppliersRange</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_read_df_NodesNodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_read_df_NodesNodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_read_df_NodesNodesPaths</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_assignment_df_NodesNodesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_assignment_df_NodesNodesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_assignment_df_NodesNodesPaths</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sStations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sStations]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sStations</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sStationsPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sStationsPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sStationsPaths</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sNodesVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sNodesVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sNodesVehiclesPaths</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sStationsVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sStationsVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sStationsVehiclesPaths</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sDestinationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sDestinationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sDestinationVehiclesPaths</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sOriginVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sOriginVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sOriginVehiclesPaths</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sFirstStationVehiclesPaths</remote-alias>
            <ordinal>83</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sAuxNotFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sAuxNotFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sAuxNotFirstStationVehiclesPaths</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sNotFirstStationVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sNotFirstStationVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sNotFirstStationVehiclesPaths</remote-alias>
            <ordinal>85</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sNodesPotentialNodesOriginalVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sNodesPotentialNodesOriginalVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sNodesPotentialNodesOriginalVehiclesPaths</remote-alias>
            <ordinal>86</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sSequenceNodesNodesVehiclesPaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sSequenceNodesNodesVehiclesPaths]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sSequenceNodesNodesVehiclesPaths</remote-alias>
            <ordinal>87</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_sStationsSuppliers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_sStationsSuppliers]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_sStationsSuppliers</remote-alias>
            <ordinal>88</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_pPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_pPrice]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_pPrice</remote-alias>
            <ordinal>89</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_pConsumptionOOP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_pConsumptionOOP]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_pConsumptionOOP</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_pConsumptionMainRoute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_pConsumptionMainRoute]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_pConsumptionMainRoute</remote-alias>
            <ordinal>91</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_pQuantityVehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_pQuantityVehicles]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_pQuantityVehicles</remote-alias>
            <ordinal>92</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_calculate_pStartInventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration_calculate_pStartInventory]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>duration_calculate_pStartInventory</remote-alias>
            <ordinal>93</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solution Procedure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Solution Procedure]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>Solution Procedure</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path Length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path Length]</local-name>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias>Path Length</remote-alias>
            <ordinal>95</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[oScenarioStats]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:CR205:no:A1:CR205:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='real' name='[Average Stations Per Path (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[average stations per path]' />
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([total time])) - LOOKUP(ZN(AVG([total time])), -1)) / ABS(LOOKUP(ZN(AVG([total time])), -1))'>
          <table-calc ordering-field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([total time])) - LOOKUP(ZN(AVG([total time])), -1)) / ABS(LOOKUP(ZN(AVG([total time])), -1))'>
          <table-calc ordering-field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([total time])) - LOOKUP(ZN(AVG([total time])), -1)) / ABS(LOOKUP(ZN(AVG([total time])), -1))'>
          <table-calc ordering-field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Time per Subproblem' datatype='real' name='[Calculation_1099441276070809600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total time]/([number paths]*[number type vehicles])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
      <column caption='tv' datatype='string' name='[Scenario - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 1 ) )' />
      </column>
      <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
      </column>
      <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
      </column>
      <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
      </column>
      <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='string' name='[Solution Procedure]' role='dimension' type='nominal' />
      <column caption='Average Stations Per Path' datatype='real' name='[average stations per path]' role='measure' type='quantitative' />
      <column caption='Duration Assigment Df Suppliers' datatype='real' name='[duration_assigment_df_suppliers]' role='measure' type='quantitative' />
      <column caption='duration assignment df NodesNodesPaths' datatype='real' name='[duration_assignment_df_NodesNodesPaths]' role='measure' type='quantitative' />
      <column caption='duration assignment df NodesNodes' datatype='real' name='[duration_assignment_df_NodesNodes]' role='measure' type='quantitative' />
      <column caption='duration assignment df NodesPaths' datatype='real' name='[duration_assignment_df_NodesPaths]' role='measure' type='quantitative' />
      <column caption='duration assignment df SubStations' datatype='real' name='[duration_assignment_df_SubStations]' role='measure' type='quantitative' />
      <column caption='duration assignment df SuppliersRange' datatype='real' name='[duration_assignment_df_SuppliersRange]' role='measure' type='quantitative' />
      <column caption='duration assignment df VehiclesPaths' datatype='real' name='[duration_assignment_df_VehiclesPaths]' role='measure' type='quantitative' />
      <column caption='Duration Assignment Df Ranges' datatype='real' name='[duration_assignment_df_ranges]' role='measure' type='quantitative' />
      <column caption='Duration Assignment Df Vehicles' datatype='real' name='[duration_assignment_df_vehicles]' role='measure' type='quantitative' />
      <column caption='duration calculate pConsumptionMainRoute' datatype='real' name='[duration_calculate_pConsumptionMainRoute]' role='measure' type='quantitative' />
      <column caption='duration calculate pConsumptionOOP' datatype='real' name='[duration_calculate_pConsumptionOOP]' role='measure' type='quantitative' />
      <column caption='duration calculate pPrice' datatype='real' name='[duration_calculate_pPrice]' role='measure' type='quantitative' />
      <column caption='duration calculate pQuantityVehicles' datatype='real' name='[duration_calculate_pQuantityVehicles]' role='measure' type='quantitative' />
      <column caption='duration calculate pStartInventory' datatype='real' name='[duration_calculate_pStartInventory]' role='measure' type='quantitative' />
      <column caption='duration calculate sAuxNotFirstStationVehiclesPaths' datatype='real' name='[duration_calculate_sAuxNotFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sDestinationVehiclesPaths' datatype='real' name='[duration_calculate_sDestinationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sFirstStationVehiclesPaths' datatype='real' name='[duration_calculate_sFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sNodesPotentialNodesOriginalVehiclesPaths' datatype='real' name='[duration_calculate_sNodesPotentialNodesOriginalVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sNodesVehiclesPaths' datatype='real' name='[duration_calculate_sNodesVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sNotFirstStationVehiclesPaths' datatype='real' name='[duration_calculate_sNotFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sOriginVehiclesPaths' datatype='real' name='[duration_calculate_sOriginVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sSequenceNodesNodesVehiclesPaths' datatype='real' name='[duration_calculate_sSequenceNodesNodesVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sStationsPaths' datatype='real' name='[duration_calculate_sStationsPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sStationsSuppliers' datatype='real' name='[duration_calculate_sStationsSuppliers]' role='measure' type='quantitative' />
      <column caption='duration calculate sStationsVehiclesPaths' datatype='real' name='[duration_calculate_sStationsVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='duration calculate sStations' datatype='real' name='[duration_calculate_sStations]' role='measure' type='quantitative' />
      <column caption='duration read df NodesNodesPaths' datatype='real' name='[duration_read_df_NodesNodesPaths]' role='measure' type='quantitative' />
      <column caption='duration read df NodesNodes' datatype='real' name='[duration_read_df_NodesNodes]' role='measure' type='quantitative' />
      <column caption='duration read df NodesPaths' datatype='real' name='[duration_read_df_NodesPaths]' role='measure' type='quantitative' />
      <column caption='duration read df SubStations' datatype='real' name='[duration_read_df_SubStations]' role='measure' type='quantitative' />
      <column caption='duration read df SuppliersRange' datatype='real' name='[duration_read_df_SuppliersRange]' role='measure' type='quantitative' />
      <column caption='duration read df VehiclesPaths' datatype='real' name='[duration_read_df_VehiclesPaths]' role='measure' type='quantitative' />
      <column caption='Duration Read Df Ranges' datatype='real' name='[duration_read_df_ranges]' role='measure' type='quantitative' />
      <column caption='Duration Read Df Suppliers' datatype='real' name='[duration_read_df_suppliers]' role='measure' type='quantitative' />
      <column caption='Duration Read Df Vehicles' datatype='real' name='[duration_read_df_vehicles]' role='measure' type='quantitative' />
      <column caption='Initial Gap' datatype='real' name='[initial gap]' role='measure' type='quantitative' />
      <column caption='Input File' datatype='string' name='[input file]' role='dimension' type='nominal' />
      <column caption='Model Fingerprint' datatype='integer' name='[model fingerprint]' role='measure' type='quantitative' />
      <column caption='Node Count' datatype='integer' name='[node count]' role='measure' type='quantitative' />
      <column caption='Number Binary Variables' datatype='integer' name='[number binary variables]' role='measure' type='quantitative' />
      <column caption='Number Candidate Locations' datatype='integer' name='[number candidate locations]' role='measure' type='quantitative' />
      <column caption='Number Constraints' datatype='integer' name='[number constraints]' role='measure' type='quantitative' />
      <column caption='Number Integer Variables' datatype='integer' name='[number integer variables]' role='measure' type='quantitative' />
      <column caption='Number Paths' datatype='integer' name='[number paths]' role='measure' type='quantitative' />
      <column caption='Number Type Vehicles' datatype='integer' name='[number type vehicles]' role='measure' type='quantitative' />
      <column caption='Number Variables' datatype='integer' name='[number variables]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='%null%' value='I did not retrieve status' />
          <alias key='0' value='Incumbent no found in time limit' />
          <alias key='2' value='Optimal' />
          <alias key='9' value='Time limit' />
        </aliases>
      </column>
      <column caption='Time Calculate Parameters (S)' datatype='string' name='[time calculate parameters (s)]' role='dimension' type='nominal' />
      <column caption='Time Export Results (S)' datatype='string' name='[time export results (s)]' role='dimension' type='nominal' />
      <column caption='Time First Incumbent' datatype='real' name='[time first incumbent]' role='measure' type='quantitative' />
      <column caption='Time Generate Model (S)' datatype='string' name='[time generate model (s)]' role='dimension' type='nominal' />
      <column caption='Time Optimise Model (S)' datatype='string' name='[time optimise model (s)]' role='dimension' type='nominal' />
      <column caption='Time Read Data (S)' datatype='string' name='[time read data (s)]' role='dimension' type='nominal' />
      <column caption='Time Assigment Df Suppliers' datatype='real' name='[time_assigment_df_suppliers]' role='measure' type='quantitative' />
      <column caption='time assignment df NodesNodesPaths' datatype='real' name='[time_assignment_df_NodesNodesPaths]' role='measure' type='quantitative' />
      <column caption='time assignment df NodesNodes' datatype='real' name='[time_assignment_df_NodesNodes]' role='measure' type='quantitative' />
      <column caption='time assignment df NodesPaths' datatype='real' name='[time_assignment_df_NodesPaths]' role='measure' type='quantitative' />
      <column caption='time assignment df SubStations' datatype='real' name='[time_assignment_df_SubStations]' role='measure' type='quantitative' />
      <column caption='time assignment df SuppliersRange' datatype='real' name='[time_assignment_df_SuppliersRange]' role='measure' type='quantitative' />
      <column caption='time assignment df VehiclesPaths' datatype='real' name='[time_assignment_df_VehiclesPaths]' role='measure' type='quantitative' />
      <column caption='Time Assignment Df Ranges' datatype='real' name='[time_assignment_df_ranges]' role='measure' type='quantitative' />
      <column caption='Time Assignment Df Vehicles' datatype='real' name='[time_assignment_df_vehicles]' role='measure' type='quantitative' />
      <column caption='time calculate pConsumptionMainRoute' datatype='real' name='[time_calculate_pConsumptionMainRoute]' role='measure' type='quantitative' />
      <column caption='time calculate pConsumptionOOP' datatype='real' name='[time_calculate_pConsumptionOOP]' role='measure' type='quantitative' />
      <column caption='time calculate pPrice' datatype='real' name='[time_calculate_pPrice]' role='measure' type='quantitative' />
      <column caption='time calculate pQuantityVehicles' datatype='real' name='[time_calculate_pQuantityVehicles]' role='measure' type='quantitative' />
      <column caption='time calculate pStartInventory' datatype='real' name='[time_calculate_pStartInventory]' role='measure' type='quantitative' />
      <column caption='time calculate sAuxNotFirstStationVehiclesPaths' datatype='real' name='[time_calculate_sAuxNotFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sDestinationVehiclesPaths' datatype='real' name='[time_calculate_sDestinationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sFirstStationVehiclesPaths' datatype='real' name='[time_calculate_sFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sNodesPotentialNodesOriginalVehiclesPaths' datatype='real' name='[time_calculate_sNodesPotentialNodesOriginalVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sNodesVehiclesPaths' datatype='real' name='[time_calculate_sNodesVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sNotFirstStationVehiclesPaths' datatype='real' name='[time_calculate_sNotFirstStationVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sOriginVehiclesPaths' datatype='real' name='[time_calculate_sOriginVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sSequenceNodesNodesVehiclesPaths' datatype='real' name='[time_calculate_sSequenceNodesNodesVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sStationsPaths' datatype='real' name='[time_calculate_sStationsPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sStationsSuppliers' datatype='real' name='[time_calculate_sStationsSuppliers]' role='measure' type='quantitative' />
      <column caption='time calculate sStationsVehiclesPaths' datatype='real' name='[time_calculate_sStationsVehiclesPaths]' role='measure' type='quantitative' />
      <column caption='time calculate sStations' datatype='real' name='[time_calculate_sStations]' role='measure' type='quantitative' />
      <column caption='Time End Process' datatype='real' name='[time_end_process]' role='measure' type='quantitative' />
      <column caption='time read df NodesNodesPaths' datatype='real' name='[time_read_df_NodesNodesPaths]' role='measure' type='quantitative' />
      <column caption='time read df NodesNodes' datatype='real' name='[time_read_df_NodesNodes]' role='measure' type='quantitative' />
      <column caption='time read df NodesPaths' datatype='real' name='[time_read_df_NodesPaths]' role='measure' type='quantitative' />
      <column caption='time read df SubStations' datatype='real' name='[time_read_df_SubStations]' role='measure' type='quantitative' />
      <column caption='time read df SuppliersRange' datatype='real' name='[time_read_df_SuppliersRange]' role='measure' type='quantitative' />
      <column caption='time read df VehiclesPaths' datatype='real' name='[time_read_df_VehiclesPaths]' role='measure' type='quantitative' />
      <column caption='Time Read Df Ranges' datatype='real' name='[time_read_df_ranges]' role='measure' type='quantitative' />
      <column caption='Time Read Df Suppliers' datatype='real' name='[time_read_df_suppliers]' role='measure' type='quantitative' />
      <column caption='Time Read Df Vehicles' datatype='real' name='[time_read_df_vehicles]' role='measure' type='quantitative' />
      <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
      <column-instance column='[Average Stations Per Path (copy)]' derivation='None' name='[none:Average Stations Per Path (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[Solution Procedure]' derivation='None' name='[none:Solution Procedure:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Path Length,Status,su)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Stations Per Path (copy):ok]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
          <groupfilter function='level-members' level='[none:Path Length:ok]' />
          <groupfilter function='level-members' level='[none:status:ok]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Status,su)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Stations Per Path (copy):ok]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
          <groupfilter function='level-members' level='[none:status:ok]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Path Length,Scenario,Status)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Path Length:ok]' />
          <groupfilter function='level-members' level='[none:Scenario:nk]' />
          <groupfilter function='level-members' level='[none:status:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (cl,ow,pa,Path Length,su)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
          <groupfilter function='level-members' level='[none:Path Length:ok]' />
          <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.416559' measure-ordering='alphabetic' measure-percentage='0.583441' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:status:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>9</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:ok]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>9</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>2</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Gap per scenario'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column datatype='real' name='[MIP gap]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column-instance column='[MIP gap]' derivation='Sum' name='[sum:MIP gap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='149' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:MIP gap:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:MIP gap:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Impact Path Length'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Average Stations Per Path' datatype='real' name='[average stations per path]' role='measure' type='quantitative' />
            <column-instance column='[average stations per path]' derivation='Avg' name='[avg:average stations per path:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:average stations per path:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Impact Path Length (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of Stations per Path'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='real' name='[Average Stations Per Path (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[average stations per path]' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
            </column>
            <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
            </column>
            <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Average Stations Per Path' datatype='real' name='[average stations per path]' role='measure' type='quantitative' />
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average Stations Per Path (copy)]' derivation='None' name='[none:Average Stations Per Path (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Path Length,Status,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Average Stations Per Path (copy):ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:status:ok]' member='%null%' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='156.24000000000001' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:status:ok]' member='9' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='149.38' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                              <groupfilter function='union'>
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                    <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                  </groupfilter>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='155.22' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Average Stations Per Path (copy):ok]' />
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:status:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Status,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Average Stations Per Path (copy):ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='149.38' />
                              <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='286.89999999999998' />
                            </groupfilter>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='286.89999999999998' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                </groupfilter>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='288.39999999999998' />
                          <groupfilter function='union'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Average Stations Per Path (copy):ok]' />
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:status:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Average Stations Per Path (copy):ok]' />
              <groupfilter function='member' level='[none:Average Stations Per Path (copy):ok]' member='282.56' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Status,su)]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Average Stations Per Path (copy),cl,ow,pa,Path Length,Status,su)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='61' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
              <size column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of candidate locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
            </column>
            <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
            </column>
            <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of own stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
            </column>
            <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
            </column>
            <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of paths'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
            </column>
            <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
            </column>
            <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column-instance column='[time Gurobi run (s)]' derivation='Sum' name='[sum:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                </groupfilter>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='61' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of suppliers'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column caption='ow' datatype='string' name='[Scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 3 ) )' />
            </column>
            <column caption='cl' datatype='string' name='[Scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 4 ) )' />
            </column>
            <column caption='su' datatype='string' name='[Scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 5 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 3]' derivation='None' name='[none:Scenario - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 4]' derivation='None' name='[none:Scenario - Split 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario - Split 5]' derivation='None' name='[none:Scenario - Split 5:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Scenario - Split 4:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 3:nk]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 2:nk]' />
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario - Split 5:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su1&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow0&quot;' />
                            <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl0&quot;' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su2&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Scenario - Split 5:nk]' member='&quot;su3&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa10&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa100&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                </groupfilter>
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa200&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow20&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                              </groupfilter>
                              <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:Scenario - Split 2:nk]' member='&quot;pa50&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow10&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl1&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow30&quot;' />
                                <groupfilter function='union'>
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl10&quot;' />
                                  <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl20&quot;' />
                                </groupfilter>
                              </groupfilter>
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:Scenario - Split 3:nk]' member='&quot;ow5&quot;' />
                                <groupfilter function='member' level='[none:Scenario - Split 4:nk]' member='&quot;cl5&quot;' />
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Scenario - Split 4:nk]' />
                  <hierarchy name='[none:Scenario - Split 3:nk]' />
                  <hierarchy name='[none:Scenario - Split 2:nk]' />
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario - Split 5:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (cl,ow,pa,Path Length,su)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Initial gap'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Initial Gap' datatype='real' name='[initial gap]' role='measure' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column-instance column='[initial gap]' derivation='Sum' name='[sum:initial gap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:initial gap:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:initial gap:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='oTotalCost (Copy of outputRFEP_v3 Analysis 2)' name='federated.1e2jrqf1718m4c1am3voi0ldfls4' />
          </datasources>
          <datasource-dependencies datasource='federated.1e2jrqf1718m4c1am3voi0ldfls4'>
            <column caption='-(ZN(AVG([Total Cost])) - LOOKUP(ZN(AVG([Total Cost])), -1)) ...' datatype='real' name='[Calculation_2415899744555667457]' role='measure' type='quantitative' user:unnamed='Sheet 16'>
              <calculation class='tableau' formula='-(ZN(AVG([TotalCost])) - LOOKUP(ZN(AVG([TotalCost])), -1)) / ABS(LOOKUP(ZN(AVG([TotalCost])), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Path length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Solution Methodology]' role='dimension' type='nominal' />
            <column caption='Total Cost' datatype='real' name='[TotalCost]' role='measure' type='quantitative' />
            <column-instance column='[TotalCost]' derivation='Avg' name='[avg:TotalCost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path length]' derivation='None' name='[none:Path length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Solution Methodology]' derivation='None' name='[none:Solution Methodology:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2415899744555667457]' derivation='User' name='[usr:Calculation_2415899744555667457:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Path length:ok]'>
            <groupfilter function='member' level='[none:Path length:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Solution Methodology:nk]' member='&quot;DRx3-RFEP&quot;' />
              <groupfilter function='member' level='[none:Solution Methodology:nk]' member='&quot;RFEP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]</column>
            <column>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Path length:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[usr:Calculation_2415899744555667457:qk:1]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' value='20' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Scenario:nk]' value='-90' />
            <format attr='text-format' field='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[usr:Calculation_2415899744555667457:qk:1]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[avg:TotalCost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' />
              <color column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[usr:Calculation_2415899744555667457:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1e2jrqf1718m4c1am3voi0ldfls4].[avg:TotalCost:qk] + [federated.1e2jrqf1718m4c1am3voi0ldfls4].[usr:Calculation_2415899744555667457:qk:1])</rows>
        <cols>([federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Scenario:nk] / [federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Stations per Path'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column caption='Average Stations Per Path' datatype='real' name='[average stations per path]' role='measure' type='quantitative' />
            <column-instance column='[average stations per path]' derivation='Avg' name='[avg:average stations per path:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:average stations per path:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time first incumbent'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column-instance column='[time first incumbent]' derivation='Sum' name='[sum:time first incumbent:qk]' pivot='key' type='quantitative' />
            <column caption='Time First Incumbent' datatype='real' name='[time first incumbent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:time first incumbent:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time per scenario'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Path Length:ok]' />
                <groupfilter function='level-members' level='[none:Scenario:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='2000' />
                      <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path Length:ok]' member='5000' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
                        <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Path Length:ok]' />
                  <hierarchy name='[none:Scenario:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[Exclusions (Path Length,Scenario,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='179' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time per scenario Independent Subproblems'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column caption='Time per Subproblem' datatype='real' name='[Calculation_1099441276070809600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total time]/([number paths]*[number type vehicles])' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='Number Paths' datatype='integer' name='[number paths]' role='measure' type='quantitative' />
            <column caption='Number Type Vehicles' datatype='integer' name='[number type vehicles]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1099441276070809600]' derivation='Sum' name='[sum:Calculation_1099441276070809600:qk]' pivot='key' type='quantitative' />
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3-xFRVRP&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3-xFRVRP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:Calculation_1099441276070809600:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time per scenario RFEP vs DRx3-FREP'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Solution Procedure]' role='dimension' type='nominal' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Solution Procedure]' derivation='None' name='[none:Solution Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]'>
            <groupfilter function='member' level='[none:Path Length:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;tv2-pa10-ow10-cl10-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv2-pa200-ow20-cl20-su2-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-domain_reduction&quot;' />
              <groupfilter from='&quot;tv2-pa200-ow30-cl20-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv5-pa10-ow30-cl5-su2-domain_reduction&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;DRx3-RFEP&quot;' />
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;RFEP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='179' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Time per scenario RFEP vs DRx3-FREP (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Solution Procedure]' role='dimension' type='nominal' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Solution Procedure]' derivation='None' name='[none:Solution Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]'>
            <groupfilter function='member' level='[none:Path Length:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;tv2-pa10-ow10-cl10-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv2-pa200-ow20-cl20-su2-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-domain_reduction&quot;' />
              <groupfilter from='&quot;tv2-pa200-ow30-cl20-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv5-pa10-ow30-cl5-su2-domain_reduction&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;DRx3-RFEP&quot;' />
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;RFEP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='179' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time per scenario RFEP vs DRx3-FREP (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Solution Procedure]' role='dimension' type='nominal' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Solution Procedure]' derivation='None' name='[none:Solution Procedure:nk]' pivot='key' type='nominal' />
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]'>
            <groupfilter function='member' level='[none:Path Length:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;tv2-pa10-ow10-cl10-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv2-pa200-ow20-cl20-su2-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-domain_reduction&quot;' />
              <groupfilter from='&quot;tv2-pa200-ow30-cl20-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv5-pa10-ow30-cl5-su2-domain_reduction&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;DRx3-RFEP&quot;' />
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;RFEP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' value='36' />
            <format attr='width' value='167' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='0' />
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Time per scenario RFEP vs DRx3-RFEP'>
      <table>
        <view>
          <datasources>
            <datasource caption='oScenarioStats (outputRFEP_v3 Analysis)' name='federated.17wfpcd1y3eun912fy4830w34dg2' />
          </datasources>
          <datasource-dependencies datasource='federated.17wfpcd1y3eun912fy4830w34dg2'>
            <column aggregation='Sum' datatype='integer' name='[Path Length]' role='dimension' type='ordinal' />
            <column caption='pa' datatype='string' name='[Scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.17wfpcd1y3eun912fy4830w34dg2].[Scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Scenario], &quot;-&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Solution Procedure]' role='dimension' type='nominal' />
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Path Length]' derivation='None' name='[none:Path Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario - Split 2]' derivation='None' name='[none:Scenario - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Solution Procedure]' derivation='None' name='[none:Solution Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total time]' derivation='Avg' name='[pcdf:avg:total time:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='I did not retrieve status' />
                <alias key='0' value='Incumbent no found in time limit' />
                <alias key='2' value='Optimal' />
                <alias key='9' value='Time limit' />
              </aliases>
            </column>
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]'>
            <groupfilter function='member' level='[none:Path Length:ok]' member='2000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;tv2-pa10-ow10-cl10-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv2-pa200-ow20-cl20-su2-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-domain_reduction&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-domain_reduction&quot;' />
              <groupfilter from='&quot;tv2-pa200-ow30-cl20-su3&quot;' function='range' level='[none:Scenario:nk]' to='&quot;tv5-pa10-ow30-cl5-su2-domain_reduction&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;DRx3-RFEP&quot;' />
              <groupfilter function='member' level='[none:Solution Procedure:nk]' member='&quot;RFEP&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</column>
            <column>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='179' />
            <encoding attr='space' class='0' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[pcdf:avg:total time:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17wfpcd1y3eun912fy4830w34dg2].[pcdf:avg:total time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' />
              <color column='[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk] + [federated.17wfpcd1y3eun912fy4830w34dg2].[pcdf:avg:total time:qk])</rows>
        <cols>([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk] / ([federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk] / [federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Initial Incumbent Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98476' id='5' param='horz' type='layout-flow' w='99166' x='417' y='762'>
            <zone h='98476' id='3' type='layout-basic' w='91666' x='417' y='762'>
              <zone h='49238' id='1' name='Time first incumbent' w='91666' x='417' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49238' id='7' name='Initial gap' w='91666' x='417' y='762'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='144' h='98476' id='4' is-fixed='true' param='vert' type='layout-flow' w='7500' x='92083' y='762'>
              <zone h='10095' id='6' name='Time first incumbent' pane-specification-id='0' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' w='7500' x='92083' y='762'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Time and Gap per sc'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='89030' id='5' param='horz' type='layout-flow' w='99166' x='417' y='762'>
            <zone h='89030' id='3' type='layout-basic' w='99166' x='417' y='762'>
              <zone h='46079' id='1' name='Time per scenario' w='99166' x='417' y='43713'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42951' id='7' name='Gap per scenario' w='99166' x='417' y='762'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9446' id='8' type='layout-flow' w='99166' x='417' y='89792'>
            <zone h='9446' id='6' name='Time per scenario' pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' w='99166' x='417' y='89792'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Stations per Path'>
      <cards>
        <edge name='left'>
          <strip size='139'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2312B459-C793-4691-9415-6DD565DE70D5}' />
    </window>
    <window class='worksheet' name='Time per scenario'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3958.5520114898682</value>
                <value>5000</value>
                <value>&quot;tv2-pa50-ow0-cl0-su1&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9968162-4E89-45B1-9E56-4DFB80FD50AC}' />
    </window>
    <window class='worksheet' name='Time per scenario RFEP vs DRx3-FREP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]&#10;[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F2EA2B2-0AD4-4DBA-A201-6A4DFCFB96F4}' />
    </window>
    <window class='worksheet' maximized='true' name='Time per scenario RFEP vs DRx3-RFEP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]&#10;[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38730008-81A5-4F2C-AD0B-F93B4327B919}' />
    </window>
    <window class='worksheet' name='Time per scenario RFEP vs DRx3-FREP (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1F2BF4D-7E0A-48D2-899F-0FD3854378E4}' />
    </window>
    <window class='worksheet' name='Time per scenario RFEP vs DRx3-FREP (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Solution Procedure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32FFAE85-707D-4B0F-B7F0-025AFF9F2D6C}' />
    </window>
    <window class='worksheet' name='Impact Path Length'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:average stations per path:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:average stations per path:qk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B100F7D1-60B2-444A-84E6-2D53E3F96FCB}' />
    </window>
    <window class='worksheet' name='Impact Path Length (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3C6E30C-3B56-4881-B447-9C44F42A304F}' />
    </window>
    <window class='worksheet' name='Gap per scenario'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F121F657-6B1A-4B81-BE84-8A530DFEC3C6}' />
    </window>
    <window class='worksheet' name='Time first incumbent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B926F2CB-97E2-4931-8C0B-F99C173B04B7}' />
    </window>
    <window class='worksheet' name='Initial gap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D00D73C6-4F2B-4D4E-A9C8-263F4638D897}' />
    </window>
    <window class='dashboard' name='Time and Gap per sc'>
      <viewpoints>
        <viewpoint name='Gap per scenario'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Time per scenario'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{F3423C01-B193-448F-81FB-308E6931AC9E}' />
    </window>
    <window class='dashboard' name='Initial Incumbent Analysis'>
      <viewpoints>
        <viewpoint name='Initial gap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Time first incumbent'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                      <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:time first incumbent:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:initial gap:qk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[sum:time first incumbent:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5000</value>
                  <value>&quot;tv2-pa200-ow20-cl20-su2&quot;</value>
                  <value>9</value>
                  <value>0.075175433441480685</value>
                  <value>1982.5921053886409</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{EE8539CA-2368-42A3-80FC-F158F2DB9DD9}' />
    </window>
    <window class='worksheet' name='Impact of Stations per Path'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3600.945268630981</value>
                <value>149.38</value>
                <value>2000</value>
                <value>&quot;pa100&quot;</value>
                <value>&quot;ow30&quot;</value>
                <value>&quot;cl10&quot;</value>
                <value>&quot;su3&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>859.98027420043945</value>
                <value>156.24000000000001</value>
                <value>2000</value>
                <value>&quot;pa50&quot;</value>
                <value>&quot;ow30&quot;</value>
                <value>&quot;cl20&quot;</value>
                <value>&quot;su3&quot;</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3601.45435333252</value>
                <value>155.22</value>
                <value>2000</value>
                <value>&quot;pa200&quot;</value>
                <value>&quot;ow30&quot;</value>
                <value>&quot;cl20&quot;</value>
                <value>&quot;su3&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Average Stations Per Path (copy):ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70197B78-B567-4E43-A52A-E21A83DC23C0}' />
    </window>
    <window class='worksheet' name='Impact of paths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15C157D1-8252-4C37-B02C-C2FA1DB24D32}' />
    </window>
    <window class='worksheet' name='Impact of suppliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.2477812767028809</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow5&quot;</value>
                <value>&quot;cl5&quot;</value>
                <value>&quot;su2&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.9633347988128662</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow10&quot;</value>
                <value>&quot;cl10&quot;</value>
                <value>&quot;su3&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.0834956169128418</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl1&quot;</value>
                <value>&quot;su3&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.3705854415893546</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl1&quot;</value>
                <value>&quot;su2&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.9425210952758789</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl5&quot;</value>
                <value>&quot;su3&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.4613430500030518</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl5&quot;</value>
                <value>&quot;su2&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.2268116474151611</value>
                <value>2000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl10&quot;</value>
                <value>&quot;su2&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62CBCC93-2992-4DFF-8DC1-2300575A724E}' />
    </window>
    <window class='worksheet' name='Impact of own stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:time Gurobi run (s):qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>32.042819976806641</value>
                <value>5000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow20&quot;</value>
                <value>&quot;cl10&quot;</value>
                <value>&quot;su2&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C41883A-75DC-4A36-82FA-CCA9F17C68D0}' />
    </window>
    <window class='worksheet' name='Impact of candidate locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[avg:total time:qk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
                  <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>45.924933671951287</value>
                <value>5000</value>
                <value>&quot;pa10&quot;</value>
                <value>&quot;ow10&quot;</value>
                <value>&quot;cl10&quot;</value>
                <value>&quot;su3&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 2:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 3:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 4:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario - Split 5:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AEDE9C8-3330-41E4-8287-49F2E945C772}' />
    </window>
    <window class='worksheet' name='Time per scenario Independent Subproblems'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[:Measure Names]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Path Length:ok]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:Scenario:nk]</field>
            <field>[federated.17wfpcd1y3eun912fy4830w34dg2].[none:status:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC009C9D-9951-4D99-8356-B9F1F94422BE}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]&#10;[federated.1e2jrqf1718m4c1am3voi0ldfls4].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[:Measure Names]</field>
            <field>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Path length:ok]</field>
            <field>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Scenario:nk]</field>
            <field>[federated.1e2jrqf1718m4c1am3voi0ldfls4].[none:Solution Methodology:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EAF66F2-6726-4BE0-9190-2E1364010026}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Gap per scenario' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impact Path Length' width='192'>
      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
      D1m8qIIQhwTDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impact Path Length (2)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Impact of Stations per Path' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVYklEQVR4nO2da28c13nHfzN7v18p3kRSJmVbjnyB4aBOGrRvir4o0KBA+gX6Kfpl+qb9
      BEGDNECQpEhtx0mcOLEs26REURLJXe5y7/ed3bn1BSlZEndnVzKvO89PgADu/uecZ2bnP3PO
      mXOeUWzbthEEl6JedACCcJGIAQRXIwZwAQ+2t3Fq6G5vb/Pk62I+z9CyT3w+chvbpnWY55tH
      ualjefxgi83tR7SazeNPbFrNJvVGfaTeNg1+/8n/8Th/+NznD+9/zWef3zmKz7Zottrs5fYB
      MAYdHjjEdH9rC/N4x7xTRy5cCT769S+YX1zEEwgTzt5gKeGh3dFQFPjT7z9G8XrpdQxUxeSN
      7/8tc0GdjmajAH/45Ld0+zYfzi/is7p0NFCA3/7ml8QzC2z96VN+9JN/Yy0TpNPpoCgKX+/s
      MTQMvurUsQYNfveHO6zcus3t9ev8+pe/4r0Pf0SlWiWk10jf/BC7VUcJxfmfn33M27ffZCtf
      w2hUeP3d9/Dt3KNn+tBaFfxBP6WWwo//8QfsFw5oNZv84r8PeP3297j1xlvkcnu02jaf9ku0
      ujaVeo9MQiVXqHA9ZKAmFvno0z/jVzQUb5BWvUwwECQUThCLqDwqdbk5H5E7wKyRTacolCo8
      2tnBtqG8u0N2bePp94o/zkDvMTBNMmEfj7cf8Nrr334fjcXwKPDw3gM23jz6vF6vYw9aJBaW
      0IYGncIO0YWbYNvYRo9Ob4BitvGHs2x87z2yyQSZECwsL9Pt6zSbDRLpeRazSeKxOM1mj/X1
      NRrdIXPpNOvrq8/tw9ziCsFgBLNdZYjK7Xc/4Ecfvs+td94nmYizsjhHZmGFf/6XfwJLJZ1K
      sbY4x/LaBvGIn0AowEAbflugZVBvtsgurbGbzxHxQDBwdO1XZBRotjksFJhbWEBVlJHfFwoF
      FhYWefHrZz9vNlskEvEXvltAGVPmszQrRSo9i43Vpe+0Hy+DbRkUSzUWF649/bvV1Qh5TJpD
      D8Nuk+XlZeAUDdBut4nFYqemE64mV+33PfMmULNWptpon3U1l5rSQY7dXOGiwxBGcPqdYNvi
      T3/8A+nFNRIBL8m5NOVqA7g6V4XvjDng0z9+wfW1VYIelVgyybDZveiohBGcwSiQQioRpd9t
      06wOsVST4mGTxWtzp1/VZUXxEA956XY71DWder1MMJa56KiEEUgfQDhVrtrve+WHQdvt6foX
      0+rcxkUcF8uy6HQ6517vKM7cALZlcH/zG3pD86W3tUyde5vf0BvoL7mdwePdPYxhj62te+jm
      5RrpNYca97c2qdVqbN1/gGldrvhGMex32NrcpF6vs/XgMS/bcGh2umc6ENCqV6jUWxwe7HNw
      WJl6u1PvA1RLBQqlOum5DN12m4iiEVtYp16tEF6cd9y2cnjAYaVJKpui2+4QDfnoazrWhBOk
      VS2xVywTS6YZ9rokk0kCfh+tSo25xWs0W10CF/jMu14qkK80SKWS9Lo9kokEqUSMWq1BNhWn
      OxgSDwUuLsARlAs5ivUu89k4zVaPZCKOMuhRqLXJBrwMAaeIc7sP6QwhFVFp922UgAfFPK3r
      rc3D7XtYqhcvKrYK15auozdamJaCbfanLunM7gCWoeFRVDzxa1T2HxCOxidvdIypH2/rjxAK
      +RkMp7sDKMYQn0dhiMJh4YABkN/LEw6HXnEvThdT6+NTYaAPyZUaRMIBDg4rBH2+iw5tLFq7
      jddjYyoe8PsJehQKrQ7+aTZWFNrtAaqtk4rGGAwGpxqbxxdkYBrousGwVaF4WMYc9tHt6U/r
      K98Jls73d+Mifg/Lsuj1ekSj0VOr91W5tJ3gWem0nnYn/aKOy0XUa5om3e7ZPj85OwPYFvVG
      gwf3vqGjOTRhbJN6vc7j3b0J5R3p7m1t0ukPx+ssg1q9zu7e/qvFfaI8nWqtzu5+/pTKG1Kv
      Vvlm8x6aPm5gwKRerfJ4L4fe77B572U6yia1cpn794462Zv3d7Be5iZv9qlXKny1uc1w7OCB
      Sa1UYuu4I7+5/XBscZbRo1KpkyuUHKttNBq06pVTmTXQbTSoN6uUa03KhRy5Ynms9ky6htXD
      Azq6jd6tEE2tU69ViS4tnNBVinl6ho1lKQQC49vB5WKOvgH6YIimaWN/0FIhx8C0MW0fAf93
      37XDgz10Gww7RMD33a8VxdwulgLtts7Q0EfuR+UwT9ewQVcIBLzUGw3mkzFagyGpCR3lciFH
      3wZ7qJJKRKlUGyzEwrSGBkmH4/uE/N5DvF6o1kwM1Ri5FuDwYA9d9WBqKulEhFK1xWLYR9uC
      2AuHaP/xDj4/DD3z+BRtZJ22ZbF9bxNdDXD79RsUyjVeedaAbbGzfR9LV7h+e4NGoY5pgm2P
      rhvO6g5wPEkwHM9SLT4iHBmzQ4oCKPh9Kof5A+qt0bc75fhfKBQkFAyO7RQfFafi99oU8wc0
      2tOPBoytV1HxqSbF/AHN7vgDOV2BCigewtEIIY/CYMQdQOH4mHihWMijW7B/WCEyRUdZURQU
      VFSjw/5hk2gkwF6lTsTrmTZAUL1EEjGCtsFAt8bEp6IMG+TKHeJhL7u1DuERZ5KiKCiqD0Xv
      UTisjq0SRSEYDFKrlCiUxuheAn8gQLtaoXhYwjQGDM3xs1YvbSf4onSnzWXfj4uIb9pOsGma
      aJpGJBKZWO+rcmk7wRfFZe+MTstlj+80MQyDXq83la7ff75VIAYQXI0YQHA1YgDB1YgBBFcj
      aVFOiU6zTrPTJRpPk4iFLzqcE7TqVdq9PrFklngkeNHhXAps2zq7O0C/0yKXz1NrtCbomsc6
      51GLXvtIV29O0jWOdc7zzbutBvl8nsaYZw9P6DzRtZ11uVwOFIX9feckUe1mnXw+R7PjPGrR
      btSOdc7PMlrHulbXWZfL5VAU5ShOB5r1Kvl8jnbP+ZlHs1Y51jlPcGsc6zr98Trbtjks5Mnl
      8hgOT7yf1ZkOo/e2bVEs5MnlDhx1htY5OwPk80cHfNIJMe0Pk8+dfnkoTCwvn9sHBXITdOl0
      GtMwSGfSE8tTFGVieVPvx/6T8pynaqTTaQzDIJ12ji83ZXnTxWeT28+hALncwXiVqXFQqGJo
      DYqV8Rcuy+hRKNbQ+w0Oq+MvSOawR7FUZ9CtUa6Pv9B4fMGzawIl09cwhj2SqZSjbvXGOv2+
      hh5zXjCz+tp0unR2gaF2tCbAibX1dXr9AcaIp53PkplbZKB1JpanaRp4fGh95yvnjfUN+pqO
      YTg/f3xtY1rdTfoDHWPCeiNN0/D4AkdxOrB+8ybawMCcUN60uo2bN9GGOqblcIdSFFZWVqiW
      86Qi46d7qN4Q6+ur6HoPc2zSRkBRWVleplw6IBIaP3HbsoyzuwMMtR61loZqGY66armM4vVi
      Gs66ylOd8xHX+h1aPR1M5zUElXIFj9eLOeEX7PfadPomtuEwAQ8IR8J4vV66Hecm2lG9non7
      UX6imxBfuVw+Ls/5+IUjETxeL90JD8ie1GtMFZ86Ob5KBe/E/bCplPIEAmE0h4mTtmVQrTdQ
      FTBNpwuXTamYJxgMMxiMPy6K6jk7AyytrKA3qlQmtGGXVq7z6Ku7tCcselleuc7Du3fp6M66
      66ur9Kol6hPasMsr19n+8i5d3fnEWVlbpV0u0nRowwJ4/SEWl5ZYOs5GNj6+62x98SX9CSfO
      yuoym198iTbhRFxZu843f73DwPGEAH8wzOLSEgvXso661bVlvvrLHXTLubzVtWXufn5nwnJT
      hZWVJb78yx10h7a96gmxPJ8lX9jHcsg2p3r8ZCJ+vv5mG9U/fm6U1x9haT7Nfm4f2yF5nXqW
      BgBIzaWIhCfN41BIZVNEQqesm1gvpLLJ6eLLTC4vmYzwq5/9nJ2J614VUtkk0fCkkSKVVCZJ
      dOI8GIVkJjWxvGQyzC9++nP2Dg4ddaCSzCSJRibHl8ykJusUlWQ6RTTivCrP4/OTzs4R9Dqf
      kl6/n3Q2Q2CSzhcgk83g94zXKar3bA3Q0Qz03qQ5KTbdgclwCl1vYDLoTtJZR7oJTRGw6Q8t
      tI7zKBXYaLpFf2J5XtbfWCObnpT/x2Kg23QmztUxGRo2ndak+CwMw6Y9Uedj4/XrZLLOdwAw
      scyjfKATddYUOtvAtqE5YfSu36rj8fvo9Jybmr1mA4/fR7fv3BLoNY/K6zmtReGMH4Rls2li
      0TD9oVMzQyGbSRGLhtEm6DLZFLFoCM2x2aKSzaSIRkMjpxs/V97xlW7g2MxQyKSTRCMhho46
      g0ZzQHF/l6Fjc0Qlk04QDQfRHXUe0qkEkXBwQnPEQzp9pHMaQoQhrbZB7tFDDMcJwB5SqTiR
      UNBxCBE8pJJxwqEAjo00xUcyESeRcL6TxbLzBL0BfKrzCRvLzhPyBfEozkaJz80T8gdRbWed
      TIcW3ZWfDm0YBsPhkPCEZqBhGOi6Tij0bXNMpkIIrkYMILgaMYDgasQAgqsRAwiu5tTmAhmG
      MdU61GnWboputnW2baNp2sQEu5ZlMRgMsCY8lTZNE13XJ07LME0TwzAwnpk2cmoG8Hq9U2cr
      EJ27dZZloarqVMOgXq9XhkEF4awQAwiuRgwguBoxgOBqpuoE27bFRx//jps3linWe6TCXnqG
      gmpoBGJpNm6snHWcgnAmTGWAWmGPgWnT7Jmk4xFQFSIeEyWcBNvEsqynQ0yTEJ3obNueSjft
      eWWa5ivrpjJAZukGf59ewKfalBo9kiEPPcuLqnfxR9OoqorH48HrPVlcrtlgYB5VqKKQ9flH
      6l5kXHmiu/o6y7Km0pmmeerxWZb1nG7q5wDB4FEumcVrR2OoR/9PfsXNT7++S67VAMDv8fDv
      P/i7aasUhDNHOsGCqxEDCK5GDCC4GjGA4GrEAIKrEQMIrkYMILgaMYDgasQAgqsRAwiuRgwg
      uBoxgOBqxACCqxEDCK5mZl+T+unuI7r6UWrsgMfL+1nnN7dM4uPHD9GMo9TdIa+P9zJzAOSb
      DVRVZTEWB+CjRztP1z+EfX7eTU/Kx3+2PK7XiPr9ZCNHU9d/s3Mf6zgfTyIY4q2E8zvczpNK
      t8tfC9++dG8jlWE+6PxiDSdKnTZ3it++nG8jmWbx+Dj8Ob/P95dXZtgAe48od4/eJBgLBL6z
      AT55/JCGdvS6p3Qo/K0BWk28Hs9TA3z8eIfW4Oh1StlI5MINsFuvMR+LPTXA/+5sYxwnmlpN
      pi6XAXpdfv3g/tO/PTffZH5x+ZXLK3U6z5Xnf/3WUwN8fmwAaQIJrkYMILiaqZpAw16br766
      iz9xjaDfj2r0JCuEMBNMZQDF6yMejWB5fVTKFebn01NnhbBfeKHxeWUheC7vqn0a9T5f4BOd
      ZVlYivJ0G/uFTS46O4NlW1imNeYYTZed4bTjG1evZZkv6L5bVogXk+raz5yntm1jGMaUnWDb
      QgklWZ1PEwmHSUd9U2eFUHj+Ra3nlYXgudfNKqdR7/MFPtGpqoqqqk+3UV7Y5KKzM6iKiupR
      xxwj5VJlhVBVzwvxjT+vpqlXVZ9v4SvPnKeKouD1eqczgC8QZuO1NQCWw0eZf6fNCiEIlxnp
      BAuuRgwguBoxgOBqxACCqxEDCK5GDCC4GjGA4GrEAIKrEQMIrkYMILgaMYDgasQAgqsRAwiu
      RgwguBoxgOBqxACCqxEDCK5GDCC4mpfKChFMztPv90mFvZIVQpgJXiorRFu3SccjoCqSFUKy
      Qryy7spmhXh7+RqVRo9kyCNZISQrxCvrrnRWiMVrR/kgJCuEMAtIJ1hwNWIAwdWIAQRXIwYQ
      XI0YQHA1YgDB1YgBBFcjBhBcjRhAcDViAMHViAEEVyMGEFyNGEBwNWIAwdWIAQRXIwYQXI0Y
      QHA1YgDB1UyXFaLf4f7WJlYwSTgYQDV6khVCmAmmywph2yQWbxBShjzYPWR+Pi1ZISQrxCvr
      LnVWCMsY8MUXdzBt2Lj1DulYCMu26bXqxK5dY2VlhXTUJ1khJCvEK+sudVaIarXG7fc+wDKG
      1OsNiIUIROK8+UYcgGTySCdZIYRZ4EQneG5+kTt//Jj//I//IrW0eBExCcK5ccIApfwuti/I
      ux+8w8N7Dy8iJkE4N040ga4trzG3tIpt2yfaUIIwa4w8wzfvfM5nn/0V/byjEYRzZqQBQuHQ
      ecchCBfCSANEojGKu3tyBxBmnpEGOCwWWXvrFnIfEGadkQZIxSK0Oz0mP/cThKvNCQPY9oBG
      W0cxpQEkzD4nDKAoAWIxP4Zty1RRYeY58Ryg16zy5dYOPjWIAXhGbCQIs8KJi3w4keGN11ZQ
      VPWFaWyCMHuMbOUoCoTiMbn6CzPPSAOYAw0UD9aoLwVhhhhpgMzCElqr8cJSFkGYPcYO9ISj
      UekDCDPPiVGgg6//QsmOUCqV0QHfBQQlCOfFiTvAwhtv0akdsrhynfDxZ7Zlsvt4D33Yp1Cq
      0m83qDba1CuHdDV5YCZcXU7cAVRfiJuvLXJQMTGOBcZwSNBr8M1OgXhQodhXwDRRPF7o5Amt
      rsqieFkUP7XuUi+KB2i3atz58y5vv38LgEGnzsNik2vJGLXWgFTYQ99QUYwOgVhGFsXLoviX
      0l3qRfFHAfq5eWv16Y8ZzS7xw+zSxCAE4aoxchSo2+0RiUZkFEiYeUbMBjXxqAqHxbI8CBNm
      nhFNIBsLH/GghXnyS0GYKUY0gSxy+/uY/gCB849HEM6VE3cARfHz43/9CUNNk6kQwswzshNc
      Luzxu48/odzsnnc8gnCujDRAbi9Hrz9kZ/veeccjCOfKyOcAi4vzNDT4mw/eP+94BOFcGXkH
      sGzwez0vPE4VhNnjhAFq+R0+u3uPR49ysihemHlONIFSS+u80+7zKFfDQhbFC7PNiGFQhY1b
      b7Nx6yLCEYTzRVo5gqsRAwiuRgwguBoxgOBqxACCqxEDCK5mqjfF27ZFo9km7FPYLzVYzsbp
      mR5Uo4c/miYSlOQpwtVkKgOYwwHNdofGoEMwkqJUa2BJVgjJCvGKukufFeJFLMukkNvjxtoa
      e7kc2WQYTbJCSFaIV9Rd+qwQL+IPRfnhD38IwOKSZIcQZgfpBAuuRgwguBoxgOBqxACCqxED
      CK5GDCC4GjGA4GrEAIKrEQMIrkYMILgaMYDgasQAgqsRAwiuRgwguBoxgOBqxACCqxEDCK5G
      DCC4mpfKChEP+yk1eiRDHskKIcwEL5UVot00MC2LYl+BGc8K0ewOAEhEnrwrU7JCuD4rRDaT
      odXXSYU99Gc8K8SdnX1s2+YfPlj/tpBnCpSsEK+uu9JZIQRhlpBOsOBqxACCqxEDCK5GDCC4
      GjGA4GrEAIKrEQMIrkYMILgaMYDgav4fTeAwXxL5W/MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impact of candidate locations' width='192'>
      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
      RxMWHrcFEysAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impact of own stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of paths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of suppliers' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Initial Incumbent Analysis' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Initial gap' width='192'>
      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
      jMgp+nVOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      hwMKuTzdkc18Yw7HcdNguNc4GO6m8p76TXVlnU+/mSejPn0Ali/X+cT3/enERlOkeF3w1B4g
      WyphKDJmv4fpJk8xKVK8zrh0btj42pfYPjgmW1/l059Mk+GmeP/i0nOA+nyDTLHK+sr8dfcn
      RYprxaUGIMkKx/v7VOfmrrs/KVJcK54yACEEYeAzt7CEqqQHYSne33hqDzBq7fF//Pbvsrz+
      IfLac92ZT5HiWnHUM7HOOWrW54so8tOLmm/vdjnomtOfP/mBRYpZDbjEAEpzq/zNv/nvs/HW
      21h++NRhWIoUrwp+98u7bBwOpj//3L/13WRPvogY7M1Iyz/IW/smf/ywNS36U7fr5Pb+KdHe
      Fy7xAkkSkqTwwQ9/+KV2PkWKl4Fo9/NEe5+fFTQ+filPjI8RzbfSzHApbjZSA0hxo/Fcu9zA
      s3nn22+h50uMLZNCLo/peCw0KrheyJ31tZfVzxTvAY56FmE0uRMiSxLLtTxisI8IvVOGBGqd
      r263GVre9O9+8DuWkMbHCN+eVabUeGuvR2s4K/u++/PonW8h+ufW7I2P8/BIXNi0ftedBgXz
      EaL9YMa79UMv5BmfywBkRSGby2J7ActLc5y0TBrFPL1eh1xxLk2N+D6LBv2ffwNZX0oAABum
      SURBVP8d+ubkxc4bKj/7b36M6LO/DGebTFkj+tFf5bNvH7PbHk//9pNvzsEf/xqcfGNW37/8
      y3xpa8y3dnvTsu9cqVB+/FnE4z+YloWfWudbxy6f22hOy1brObLHX0G8/X/P6lv45FN5jsIw
      JBIXL3FFUYQQF935URgiosnfPl9y3DBCKAb3bi/TbHX5wN0lOkOHe0uLBEGQRoO+z6JBL1yI
      kkBVVXyk2T0R6ZT3hFgURSWSpAv3SSY86QmegiTLl/DkZ+A9rQ9FUZAlmegC7+n+yYqCJE/6
      91wGoOoZ3njjHgC3V28BcCtXfJ4qUqR4pZBuglPcaKQGkOJG431jAKZlYZpmMjFFinN4XwT7
      DIZD/vbP/SJRFPELP/e30C65zZYixWV4X8wAtu0wGo0Yj00sy3qvu5PiNcJLmQGCIHgmV9uL
      wuLCPP/5z/wUURSxcmv5RqZo8YKI//NzW9Ofl6o5fuBDl3+z7bc+/2ia9a+SN/iRj65cSx9f
      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
      0fj/AdUz5eWkX3E+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Stations per Path' width='192'>
      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
      STZt5tHbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time and Gap per sc' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time first incumbent' width='192'>
      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
      9QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time per scenario' width='192'>
      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
      P3zp5O0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time per scenario Independent Subproblems' width='192'>
      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
      1h3g/yi2+KQkhQWpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time per scenario RFEP vs DRx3-FREP' width='192'>
      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
      bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time per scenario RFEP vs DRx3-FREP (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time per scenario RFEP vs DRx3-FREP (3)' width='192'>
      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
      Fk7+l7+mXFjjp++0oNXJqX/hbbbnGu9wJiDioq21HbdzGSn3GG8/s/2Ouy6OXGdk2U1WYSW1
      FQVM3rzKoiNMTsl2aspzt2Yawh4rXTcGELSp7Ntfh14pg8A6LR39xGVqdh+oR+2d5+qtOQzJ
      6dQWptI7NAaCgt0HnmK6vw1PREn5jj0UZ5kTRfK+BkmSWFpaYnJykoaGBhQKBYuLi8zMzHD0
      6FGuXr2K0+nkhRdeAO5WJG+yh/fffx9nWIZRkqg/WsO1zhmeaniB0o1FfvFeK/E4IIeB9ibG
      VjeIKbN4/fkdXDx9Ho/CzAsvv0DjyUampjqQxAh9K0H+/N//Cefe+RlXunQcfOl1kmc+pXvC
      xas7kwk6VzjfdImgMo3nDhZyc1lNTngcV1otRs8cmdsP8cbrpXz6s3/Ea58iat7LHz2Tzc8v
      jnGsrhi5FKX7wmdMb8TZt6sIgLxt+zhQPY4AWEavU9T4FnuUI3SPzLE9dycxn4VTH19ASCnh
      WF061lAqhtAyisxy9u3byUCfl4Dm7i2UKGp56sRe1gdvMGdPIaZO5rkT1Yxcv8Z6dgomlZJ4
      NIRMrudgw9NYp3pZsYeoyNZB2Etm1UGq0+NcHxhje7aM2sMnKTTBxvQ0NUcayNXpEIM+jLnl
      7C/MoLd3irys3Yk6YXdAEARUKtVWvYSbN28il8tZXV1Fp9ORl5fH2NgYcJdp0MzyPeys28mr
      xw+BZ56+rhu4VXp8i/28e7qT599+E8fwFT4+1878kpWahhdJXR9hcm0Dmy/E5MgNFm2+O1i4
      mSJQYLN4Xmh9mnfe/zXtnV0k1zzNjqR1Bp0qFgavMWNxYp/vZ3zOjVra4MNffUDmU29QkyoH
      QdjsxsS8tHzyIdd6O+lZ0fNHb71Kuv6rYQaSJG3OEAgQcq3y8fvvMT2/yJoPjHo1fq8DmzOI
      y27FE4wSi4QRVAaiIc+977pMTnFBOnZXiJB7ndHRMdxxNWrRy9jwIDNL6yi0esZvXGTaJpGq
      F5kam8AdirK2MMX4xBRaYwqxkJ/uy0203xgiEg9w40orzf9/e2cW3OZ15fnfhw8rNxAACYD7
      Jq6iVkqiaFqyZNmO5MSO7XbsJO109VLdU6lMzcO8T1Xy1G+p6pmp7kpXV7o76diO5diy7Miy
      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
      309hYSEA/w9Mk/OM6Bf6IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time per scenario RFEP vs DRx3-RFEP' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
