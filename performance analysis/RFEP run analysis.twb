<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='o_scenario_stats2' inline='true' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='o_scenario_stats' name='textscan.0zrlt210e3wwvm1fzbze10utpssa'>
            <connection class='textscan' directory='C:/OneDrive - Deakin University/OD/calle test/Disun Applications/Gurobi Applications/output' filename='o_scenario_stats.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0zrlt210e3wwvm1fzbze10utpssa' name='o_scenario_stats.csv' table='[o_scenario_stats#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='datetime' name='current time' ordinal='0' />
            <column datatype='string' name='scenario' ordinal='1' />
            <column datatype='integer' name='number type vehicles' ordinal='2' />
            <column datatype='integer' name='number paths' ordinal='3' />
            <column datatype='real' name='average stations per path' ordinal='4' />
            <column datatype='integer' name='number candidate locations' ordinal='5' />
            <column datatype='real' name='total time' ordinal='6' />
            <column datatype='real' name='time Gurobi run (s)' ordinal='7' />
            <column datatype='integer' name='number constraints' ordinal='8' />
            <column datatype='integer' name='number variables' ordinal='9' />
            <column datatype='integer' name='number integer variables' ordinal='10' />
            <column datatype='integer' name='number binary variables' ordinal='11' />
            <column datatype='real' name='MIP gap' ordinal='12' />
            <column datatype='integer' name='node count' ordinal='13' />
            <column datatype='real' name='initial gap' ordinal='14' />
            <column datatype='real' name='time first incumbent' ordinal='15' />
            <column datatype='integer' name='status' ordinal='16' />
            <column datatype='string' name='machine' ordinal='17' />
            <column datatype='string' name='solution algorithm' ordinal='18' />
            <column datatype='real' name='total refuelling cost' ordinal='19' />
            <column datatype='real' name='total location cost' ordinal='20' />
            <column datatype='real' name='total discount' ordinal='21' />
            <column datatype='real' name='total cost' ordinal='22' />
            <column datatype='integer' name='fingerprint' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[current time]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>current time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scenario]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>scenario</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number type vehicles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number type vehicles]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number type vehicles</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number paths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number paths]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number paths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average stations per path</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average stations per path]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>average stations per path</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number candidate locations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number candidate locations]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number candidate locations</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total time]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>total time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time Gurobi run (s)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time Gurobi run (s)]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>time Gurobi run (s)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number constraints</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number constraints]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number constraints</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number variables]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number variables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number integer variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number integer variables]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number integer variables</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number binary variables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number binary variables]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>number binary variables</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MIP gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MIP gap]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>MIP gap</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>node count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[node count]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>node count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>initial gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[initial gap]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>initial gap</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time first incumbent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time first incumbent]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>time first incumbent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>machine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[machine]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>machine</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>solution algorithm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[solution algorithm]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>solution algorithm</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total refuelling cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total refuelling cost]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>total refuelling cost</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total location cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total location cost]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>total location cost</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total discount]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>total discount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total cost]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>total cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fingerprint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fingerprint]</local-name>
            <parent-name>[o_scenario_stats.csv]</parent-name>
            <remote-alias>fingerprint</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Average Stations Per Path' datatype='real' name='[average stations per path]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Current Time' datatype='datetime' name='[current time]' role='dimension' type='ordinal' />
      <column caption='Fingerprint' datatype='integer' name='[fingerprint]' role='measure' type='quantitative' />
      <column caption='Initial Gap' datatype='real' name='[initial gap]' role='measure' type='quantitative' />
      <column caption='Machine' datatype='string' name='[machine]' role='dimension' type='nominal' />
      <column caption='Node Count' datatype='integer' name='[node count]' role='measure' type='quantitative' />
      <column caption='Number Binary Variables' datatype='integer' name='[number binary variables]' role='measure' type='quantitative' />
      <column caption='Number Candidate Locations' datatype='integer' name='[number candidate locations]' role='measure' type='quantitative' />
      <column caption='Number Constraints' datatype='integer' name='[number constraints]' role='measure' type='quantitative' />
      <column caption='Number Integer Variables' datatype='integer' name='[number integer variables]' role='measure' type='quantitative' />
      <column caption='Number Paths' datatype='integer' name='[number paths]' role='measure' type='quantitative' />
      <column caption='Number Type Vehicles' datatype='integer' name='[number type vehicles]' role='measure' type='quantitative' />
      <column caption='Number Variables' datatype='integer' name='[number variables]' role='measure' type='quantitative' />
      <column caption='tv' datatype='string' name='[scenario - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 1 ) )' />
      </column>
      <column caption='pa' datatype='string' name='[scenario - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 2 ) )' />
      </column>
      <column caption='ow' datatype='string' name='[scenario - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 3 ) )' />
      </column>
      <column caption='cl' datatype='string' name='[scenario - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 4 ) )' />
      </column>
      <column caption='su' datatype='string' name='[scenario - Split 5]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 5 ) )' />
      </column>
      <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
      </column>
      <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
      <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
      <column caption='Time First Incumbent' datatype='real' name='[time first incumbent]' role='measure' type='quantitative' />
      <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
      <column caption='Total Discount' datatype='real' name='[total discount]' role='measure' type='quantitative' />
      <column caption='Total Location Cost' datatype='real' name='[total location cost]' role='measure' type='quantitative' />
      <column caption='Total Refuelling Cost' datatype='real' name='[total refuelling cost]' role='measure' type='quantitative' />
      <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
      <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total cost]' derivation='Avg' name='[pcdf:avg:total cost:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[solution algorithm]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <group hidden='true' name='[Exclusions (Scenario,Solution Algorithm)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:scenario:nk]' />
          <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Scenario,Solution Algorithm,Status)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:scenario:nk]' />
          <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
          <groupfilter function='level-members' level='[none:status:ok]' />
        </groupfilter>
      </group>
      <group name='[scenario with 3 runs]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow10-cl10-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl1-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl1-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl10-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl20-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl20-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl5-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow20-cl5-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow30-cl10-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow30-cl20-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow30-cl5-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow5-cl1-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow5-cl1-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa10-ow5-cl5-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa50-ow10-cl1-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa50-ow10-cl10-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa50-ow20-cl1-su2-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa50-ow30-cl10-su3-lenPath2000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa50-ow30-cl20-su3-lenPath2000&quot;' />
        </groupfilter>
      </group>
      <group name='[unsolvable scenarios]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa200-ow30-cl20-su2-lenPath5000&quot;' />
          <groupfilter function='member' level='[scenario]' member='&quot;tv2-pa200-ow30-cl20-su3-lenPath5000&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.355932' group-percentage='0.0547588' measure-ordering='alphabetic' measure-percentage='0.589309' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:solution algorithm:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;drx3-mipstart0-RFEP&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RFEP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;drx3-RFEP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;drx3-mipstart-RFEP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>9</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Gap-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column datatype='real' name='[MIP gap]' role='measure' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column-instance column='[MIP gap]' derivation='Sum' name='[sum:MIP gap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
            <format attr='text-format' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Gap-sce uns-sce1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gap after running 3600 seconds&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column datatype='real' name='[MIP gap]' role='measure' type='quantitative' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column-instance column='[MIP gap]' derivation='Sum' name='[sum:MIP gap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;drx3-RFEP&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:status:ok]' member='2' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-lenPath5000&quot;' />
                      <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su3-lenPath5000&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:scenario:nk]' />
                  <hierarchy name='[none:solution algorithm:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]' />
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='160' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</rows>
        <cols>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GurobiRun-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[time Gurobi run (s)]' derivation='Avg' name='[avg:time Gurobi run (s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column datatype='real' name='[time Gurobi run (s)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time Gurobi run (s):qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='InitialGap-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[initial gap]' derivation='Avg' name='[avg:initial gap:qk]' pivot='key' type='quantitative' />
            <column caption='Initial Gap' datatype='real' name='[initial gap]' role='measure' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:initial gap:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='OF-sce mipstart1'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
                <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;drx3-mipstart-RFEP&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]' />
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm)]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='229' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Time1Incumbent-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[time first incumbent]' derivation='Avg' name='[avg:time first incumbent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Time First Incumbent' datatype='real' name='[time first incumbent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='TotalCost-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='TotalCost-sce unsSce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total cost]' derivation='Avg' name='[pcdf:avg:total cost:qk:14]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[solution algorithm]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='9' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:scenario:nk]' />
                  <hierarchy name='[none:solution algorithm:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='155' />
            <encoding attr='space' class='0' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]' value='64' />
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='64' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='75' />
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='33' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='0' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
            <format attr='break-on-special' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk] + [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14])</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='TotalCost-sce unsSce (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total cost]' derivation='Avg' name='[pcdf:avg:total cost:qk:14]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[solution algorithm]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='9' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:scenario:nk]' />
                  <hierarchy name='[none:solution algorithm:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='264' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names])</rows>
        <cols>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalCost-sce unsSce (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total cost]' derivation='Avg' name='[avg:total cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total cost]' derivation='Avg' name='[pcdf:avg:total cost:qk:14]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[solution algorithm]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Total Cost' datatype='real' name='[total cost]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl10-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow20-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow5-cl5-su2-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:status:ok]' member='9' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow10-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa100-ow5-cl5-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow0-cl0-su1-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl10-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow30-cl20-su3-lenPath5000&quot;' />
                        <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow5-cl5-su3-lenPath5000&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:scenario:nk]' />
                  <hierarchy name='[none:solution algorithm:nk]' />
                  <hierarchy name='[none:status:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
            <format attr='break-on-special' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[pcdf:avg:total cost:qk:14]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='TotalTime-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column-instance column='[total time]' derivation='Sum' name='[sum:total time:qk]' pivot='key' type='quantitative' />
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;RFEP&quot;' />
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:total time:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='TotalTime-unsSce1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total time of the algorithm.&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[scenario - Split 6]' derivation='None' name='[none:scenario - Split 6:nk]' pivot='key' type='nominal' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='lengthPath' datatype='string' name='[scenario - Split 6]' role='dimension' type='nominal' user:SplitFieldIndex='6' user:SplitFieldOrigin='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [scenario], &quot;-&quot;, 6 ) )' />
            </column>
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column-instance column='[total time]' derivation='Sum' name='[sum:total time:qk]' pivot='key' type='quantitative' />
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
                <groupfilter function='level-members' level='[none:status:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa200-ow30-cl20-su2-lenPath5000&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;drx3-mipstart0-RFEP&quot;' />
                  <groupfilter function='member' level='[none:status:ok]' member='9' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]'>
            <groupfilter function='member' level='[none:scenario - Split 6:nk]' member='&quot;lenPath5000&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]' />
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</rows>
        <cols>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:total time:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='cnt sln-sce'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[solution algorithm]' derivation='CountD' name='[ctd:solution algorithm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' direction='DESC' using='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[ctd:solution algorithm:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[ctd:solution algorithm:qk]</rows>
        <cols>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='totalTime-sce mipstart1'>
      <table>
        <view>
          <datasources>
            <datasource caption='o_scenario_stats2' name='federated.1hximtz0r6r0hc1aumc6j0rt3tg7' />
          </datasources>
          <datasource-dependencies datasource='federated.1hximtz0r6r0hc1aumc6j0rt3tg7'>
            <column-instance column='[total time]' derivation='Avg' name='[avg:total time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scenario]' derivation='None' name='[none:scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[solution algorithm]' derivation='None' name='[none:solution algorithm:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:ok]' pivot='key' type='ordinal' />
            <column caption='Scenario' datatype='string' name='[scenario]' role='dimension' type='nominal' />
            <column caption='Solution Algorithm' datatype='string' name='[solution algorithm]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Status' datatype='integer' name='[status]' role='dimension' type='ordinal' />
            <column caption='Total Time' datatype='real' name='[total time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:scenario:nk]' />
                <groupfilter function='level-members' level='[none:solution algorithm:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:solution algorithm:nk]' member='&quot;drx3-mipstart-RFEP&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
                    <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl1-su3-lenPath2000&quot;' />
                    <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow10-cl10-su3-lenPath2000&quot;' />
                    <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa50-ow20-cl1-su2-lenPath2000&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:scenario:nk]' />
                  <hierarchy name='[none:solution algorithm:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:scenario:nk]' />
              <groupfilter function='member' level='[none:scenario:nk]' member='&quot;tv2-pa10-ow30-cl5-su2-lenPath2000&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]' />
          <slices>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[Exclusions (Scenario,Solution Algorithm)]</column>
            <column>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='227' />
            <format attr='height' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='141' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' />
              <text column='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='508' />
                <format attr='maxheight' value='508' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</rows>
        <cols>([federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk] / [federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='5' param='horz' type='layout-flow' w='99030' x='485' y='885'>
            <zone h='98230' id='3' type='layout-basic' w='86734' x='485' y='885'>
              <zone h='21047' id='1' name='Gap-sce uns-sce1' w='86734' x='485' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='56133' id='7' name='TotalCost-sce unsSce' w='86734' x='485' y='42982'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21050' id='10' name='TotalTime-unsSce1' w='86734' x='485' y='21932'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='203' h='98230' id='4' is-fixed='true' param='vert' type='layout-flow' w='12296' x='87219' y='885'>
              <zone h='5089' id='6' name='Gap-sce uns-sce1' pane-specification-id='4' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' w='12296' x='87219' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7301' id='8' name='TotalCost-sce unsSce' pane-specification-id='7' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]&#10;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' type='color' w='12296' x='87219' y='5974'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5089' id='9' name='TotalCost-sce unsSce' pane-specification-id='8' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' type='color' w='12296' x='87219' y='13275'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='34735' id='11' type='text' w='12296' x='87219' y='18364'>
                <formatted-text>
                  <run>Both instances solve with the domain reduction heuristic were unsolvable by the complete model.&#10;&#10;The domain reduction procedure found a feasible solution after 500 seconds. In both scenarios, both solutions were 4% far from the solution found by the mipstart procedure of the associated solution after 3600 seconds of run.&#10;&#10;The mipstart  find an improved solution from the initial heuristic which ihas a gap below 1.2% in both scenarios</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='test 1 mip start' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='test 1 mip start'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98476' id='5' param='horz' type='layout-flow' w='99166' x='417' y='762'>
            <zone h='98476' id='3' type='layout-basic' w='84687' x='417' y='762'>
              <zone h='57021' id='1' name='OF-sce mipstart1' w='84687' x='417' y='762'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41455' id='7' name='totalTime-sce mipstart1' w='84687' x='417' y='57783'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='278' h='98476' id='4' is-fixed='true' param='vert' type='layout-flow' w='14479' x='85104' y='762'>
              <zone h='10095' id='6' name='OF-sce mipstart1' pane-specification-id='2' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' type='color' w='14479' x='85104' y='762'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='53' forceUpdate='true' h='5810' id='8' is-fixed='true' type='text' w='14479' x='85104' y='10857'>
                <formatted-text>
                  <run>The objective function is the same for drx3 mip start and rfep. drx3 is slightly higher</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='117' forceUpdate='true' h='11905' id='9' is-fixed='true' type='text' w='14479' x='85104' y='16667'>
                <formatted-text>
                  <run>In only one scenario the mipstart beat the RFEP. It usually took more time to solve up to optimality  when I passed the mipstart</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Time1Incumbent-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1982.5921049999999</value>
                <value>&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;</value>
                <value>&quot;RFEP&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6A26703-AC72-46E9-882D-2AE290E66771}' />
    </window>
    <window class='worksheet' name='TotalTime-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1982.5921049999999</value>
                <value>&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;</value>
                <value>&quot;RFEP&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44E21EB5-4E69-4321-B7B0-7B823FA715EC}' />
    </window>
    <window class='worksheet' name='TotalTime-unsSce1'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:total time:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;tv2-pa200-ow30-cl20-su3-lenPath5000&quot;</value>
                <value>&quot;drx3-mipstart0-RFEP&quot;</value>
                <value>9</value>
                <value>4833.859739780426</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3C92DE5-5D95-4A8D-AB32-1E4DC7125C85}' />
    </window>
    <window class='worksheet' name='GurobiRun-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:time first incumbent:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1982.5921049999999</value>
                <value>&quot;tv2-pa200-ow20-cl20-su2-lenPath5000&quot;</value>
                <value>&quot;RFEP&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{483095D1-C20E-4CE9-9D8B-C75036A2927B}' />
    </window>
    <window class='worksheet' name='Gap-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D8BD78C-B6B0-4A2F-9A3A-6697396EBDC8}' />
    </window>
    <window class='worksheet' name='InitialGap-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:initial gap:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:initial gap:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1.6435246644632946e+94</value>
                <value>&quot;tv2-pa200-ow30-cl20-su3-lenPath5000&quot;</value>
                <value>&quot;drx3-mipstart0-RFEP&quot;</value>
                <value>9</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{937F941C-D1AB-44B2-9622-B8D573FBF7C6}' />
    </window>
    <window class='worksheet' name='TotalCost-sce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65607ACF-DD47-4880-A208-2DEF43D6FCB8}' />
    </window>
    <window class='worksheet' name='Gap-sce uns-sce1'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[sum:MIP gap:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;tv2-pa200-ow30-cl20-su2-lenPath5000&quot;</value>
                <value>&quot;drx3-RFEP&quot;</value>
                <value>2</value>
                <value>5.2429403306492053e-05</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[unsolvable scenarios]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{318032C0-44E2-49EC-893A-CD035FEF8A69}' />
    </window>
    <window class='worksheet' name='TotalCost-sce unsSce'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]&#10;[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' type='color' />
            <card pane-specification-id='8' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario - Split 6:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60A0D76D-BEE1-4DA9-BA35-0D8697DBC811}' />
    </window>
    <window class='worksheet' name='TotalCost-sce unsSce (3)'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1313665B-4ACC-400C-909A-0E4A868CA189}' />
    </window>
    <window class='worksheet' name='TotalCost-sce unsSce (2)'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{895DFB2D-1DA2-4217-A36F-5C1F9736E7B3}' />
    </window>
    <window class='worksheet' name='totalTime-sce mipstart1'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4757.9358359999997</value>
                <value>&quot;tv2-pa50-ow10-cl1-su3-lenPath2000&quot;</value>
                <value>&quot;drx3-mipstart-RFEP&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3826.486042</value>
                <value>&quot;tv2-pa50-ow10-cl10-su3-lenPath2000&quot;</value>
                <value>&quot;drx3-mipstart-RFEP&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[avg:total time:qk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
                  <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1542.7209499999999</value>
                <value>&quot;tv2-pa50-ow20-cl1-su2-lenPath2000&quot;</value>
                <value>&quot;drx3-mipstart-RFEP&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52EEF116-984B-4D03-980E-70F4C7766A04}' />
    </window>
    <window class='worksheet' name='OF-sce mipstart1'>
      <cards>
        <edge name='left'>
          <strip size='281'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[scenario with 3 runs]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B16F18D-2F19-4241-A53E-F44A63ECB7D4}' />
    </window>
    <window class='worksheet' name='cnt sln-sce'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:scenario:nk]</field>
            <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1687DF9B-63F2-4818-BA95-4A989004AB22}' />
    </window>
    <window class='dashboard' name='test 1 mip start'>
      <viewpoints>
        <viewpoint name='OF-sce mipstart1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:solution algorithm:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='totalTime-sce mipstart1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3B713331-8AED-4A87-B383-2C56DEF341E3}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{15A9CDB5-52A1-40F1-A04D-1970BCCD8123}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Gap-sce uns-sce1'>
          <highlight>
            <color-one-way>
              <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TotalCost-sce unsSce'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[:Measure Names]</field>
              <field>[federated.1hximtz0r6r0hc1aumc6j0rt3tg7].[none:status:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TotalTime-unsSce1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{AC7932CF-1C71-4D15-8CF6-ED808BBBB27B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dSYwcWX7f8W8sGZH7Vllb1sLiUiSbbLKXmW7NeGZgjS3ZhixB8HbSTVcb
      PhjyfXwz4IMvhgHDkiHNHOyjDQmGIVjyaOmebnazuRfJKrK23Pc9M/bwodhsFreq4lZF5vsc
      iEDyn5mvIuKXES+2J/m+7yMIY0o+7AYIwmESARDGmgiAMNZEAISxJgIgjLVdAfDsEV9/9RWX
      Ll3B2ecHePaAX/6/v6LVbjGyvFfSKMfo0+wOn/et3L15jUtffkmjO6JW3Oarr76i2RuRW1/l
      y0tfY9juzvRXO9Mva/XmCtZLf4pw1EiPHgb97K9+ySc//rsEZPCxufb1NaRwnBOTQW5tNQiH
      I3xw/gzOqMuVW6tEkxlCg21+uTZiOdGnoczz00/Pc/fWLZLT82iqh9nvkD1+Fr9fYas6ID0R
      Ay+IZLYJp5PcvLGGommcPznNjbUimh7kwqksLUOlvLmC5ficOPchndI6ze6AhRNnmU5H8X2o
      5tbIdTx69Ro//elPwDX55WdX+OGHJ7h8t4hlGPzwg+Ncvtfk73x8ljs3rzFyA5w/d4IbV6+T
      mJxnNqlxc3WDE6fOUNpaw1UjnDk2xfWV+yhakI8vnuXa1ats3i/y6//ox9y7u8H80kmyU+nD
      XG7CK7JrC2D5Er7R4b//4S/oej6u73Ht+jV6tTxzpz/CbFQZAZ7v4Xs+N65eZ3Y2y8kz51k+
      foxzFz5k/eqXdD2ZS19+wea9O6RmjhPRVXr1PD0ipCNQLrepbG/S7XUIpeYJmQa1do3UwmmM
      URdr0KbS7DE0XS6cW2Jz7S6F1oj3Ts5QKXUAiVatxHquQkjxqdSqXPrib/jy6xuowRBaKII/
      6qPq4Z1pywI8atU6kqywevlXNA249OUXXL15h+9/8il0iwQyx8kETFY3tklMLRG0Bty6dY2p
      ExdYmp+h26wxsmwUNXAoC0t49XYF4PhsikvX7hCOxzBrW5Q6DmpABXxWrn9D03LRgeL9+wx9
      GVX57u3BSJy71y8Ty8yi4nHh4kWUYJRMMgKAJMtMTWaQlSD5rTvc28rvvC5JOx8ggfzt9AM7
      /ychKxqjZoXrN27jAr7rkCsUCQRUbD/A8WwGJAU1FINBjc8+/4LZU2dhUOVvP/+S7OI8+JDO
      TFDaWkVLzaLLPu9fvEg6HuKrr7/GQCd/9zpr+TqpWGjnuyWIJ5KsXP2K7WKVYCRJJKhy+87t
      17U8hDdM2s+Z4MKtz3Dnf8Ri4k006Sl8l5UbN2g06xx771MWp+OH1BDhXbOvAAjCu0ocBhXG
      mgiAMNZEAISxJgIgjDURAGGsiQAIY039dsL3ffr9/mG2RRDeOHEe4BUxDAP3yi9QsfdV73ke
      sry/DfC7XAs+vu8jSfupP0jt/tqhPv6CM+xh6zFCCgx6LTY2ipy+eB7t0WY4BnfvbaDrQbq9
      ERPpCP2Ry9nlE098QaNaotIaEFJcpGCcpflZACqVMrgWXcPDN/tEJ7K7LzDzPbY315H0GAvZ
      6V2f2W800CYmHrTJp7C9iYnGicW5hzWWMUTWwqgP/n7HMrF9iZD+3V/S6/XotRv0LDhzconV
      2zdRwymcYZNoPE2z1SEVj9DoDVhePk1Ie2J27WJ988d4Vue5NcLR8sQSbVcLVIigG30i6Wni
      6RStYoFWt4PlSAwbeSKzy6QjYUYOnJyOsTGQSAYlCvkczWYdNRDAMl0kSWJh6RiO0yIQSeI6
      Q7a312m2RkRiYaaSMSTVww6HMNpV8qMWN9dKnFleQPYhEg4TCMd2ta9aylHIVdEaFeJ6hPbI
      Zj4Tod8akt/apFSp4MsSyXAMJ6BiDkx8swVaDD0co1VcI5SeQ1d0hsM2k1OzhDWPQrGEMeyj
      63Fsy8L3PVzXw7EseHBNkvDueSIA6dl5+rUBWjyBhklvOGT21Cm63TbJVJp4WCUQgGZ3xOzU
      BLlWj/l0hM7IY2FuBs+x0KJpXNtAApxRj3AkhoJFIJpmKh3DNteJJZK02zUkPQ5mj+TMAnFd
      YmRJ6KrEyPJptNokJA1V9lBUnaAeIBIOE4rFmZ6dQZd8gqZDr9siGoszm0kST02A5GEbJo1O
      Gz2VJKLGkANhRsaI8OIJAqE4kxMZquUcmq5gugHmsjPEY1Esy0KbTBEMyPR6A6KpSeYnkiiH
      sHCE10/0AV4RwzDwKzcI7HPX1/NcZHl/sXqXa8F/sK++n3ofz/MP0BfZux3P36kVDsS+/Mf4
      7vPuZPvOTmduf7tV73LtTseWfdYfpHZ/7XgiAM3COnVXZ3FmmlG3wf31PBc//R6jZg3TD+AZ
      XaKJFLmtDSxPxbNMwokohunywfmzNKolAqEoqiyDJNHtdsgVq8R0GTkY5/SJRYqFPCPbIaor
      VFt9cExi6RkWsxlyhSrTUxPge5QL25hSmDMnFx+2z3VMVq6usHBuGXtgEo1FaFYKtIYe58+c
      IJ/PI8kKsUgIT1IYmQ66ZDMcGQwdmZgG8cwUw26HYqlMJBTEcCUunDvDzWuXUUIp3FGLRCpD
      s9UjGdFpDIYsL79HLKw9Prt2cUtXkUQn+K3yxC6Q2SjQDc9QX71KcnYJRZbwrREj18c1DSyj
      h41GPJ4iINkovkvdUogoLlogwMi08F2LXn+nD7C0NE+uXCcejuA6BqoqgxLHcwZEQhqhSJxm
      q4U17BMKh6i1DGKJEL5lEwlpGL666+hOYWsDCZWOY7I4meJevslsKkSrZxDRVRxfwpc87P4Q
      P5ogYJv42EiyRiKZopxfZ+jIzM0ex/f6OLaL6zvoephGaZNAIos7qJOamKLe6JCM6PQ9idMn
      TxJQnv1rYhgGoz/6+6giAG+VJwLgezblaptIOIjs2xQrTY6fOkVp6x6R1DT2sEMoEqFcrjKb
      naPXH5BJhOkaHpPpBI1qCS2aBnfnFnLXGjFyFcKqhxyMEwtpFAt5YqkM/VYVWwoSVj2i6SkC
      OOTLDZKRAKanYg87xNJTKNJ3nWDHGlEoNZiamUTyd44Ld5p19FiaZDSIZTuAj+u4O0ekgjEU
      d0Qwlqbf64JnE4klCYfCtJpVgsEgpquQScUwTRPXdVEUBVWGjY0tpmbnicbCe54yFwF4Oz0M
      gDgT/HJs20aWZRRlf52/b4M27rX+gx+x/XRsD1K733aIo0CviOd5SJK07w7aUVj5jkKt7+8c
      BdpPvQiAILxiys9+9rOfHXYj3nWebXBn7T6JZJphp0Gu0sAadOgMRlTKZdSAiqZpSJKEa4+4
      u7pOMp1m2GvRHZgM2jU6gxGlUoVAQCXwoBZ8NtbuIOkxZM+iVG3i20MKlSb9VhVXUpFVDVXe
      2SqVC1v0DI9YSOXe2j08Hza28uCZDC0bz/HR9Z1HvpTyWwxMj2hIZW11DQmPe1tFPMfAtF1c
      F3Rtp7bdqFKqt0nFY+S21hlaPpX8Jpbr0+r2kfHRdR0Ae9Tj7v0cE5k0jUqRSrNLv11jZNoU
      yzW0gPqw1hp2WV3PM5FJ47sWuUKZfrvO0LQpVWpoAeVhre863Fu7SyiWIqBIbG5tYZsDGu0+
      jWoZSQmgahqyJOG5Nmurq4TjKXE59JvQ7rSYn0pR64xoDwxiAWj1Bri2yXA0Ire9TbO90/9q
      tdosTiepdk1iiTSONcLyJFyjy3A4JLe9TavzoK9mdwnE5ui1amjBMIrkMewPcD0P2zbZ3spR
      q9UftsPxFRxzAJJKOp2kVm+wPBsl1xhRyW+Tr9T4dn/ARcE2vq1NYXS7uL6LZdmU81sUKrWH
      n9sfWaiSB5JEOBSk1yoQTi1SKxfotGpsbm5jP3hoYLXR4cRUkHrfIxwO0x8MGPYHONaIfr9P
      bnuLTn+0U9vsciyj0xx6VEplLHuIr4YZdWv0+n22t7boDgwAjGGLZHqWZqtFp1mlOzR25oVr
      Y5ojtre3aTTbAIwGLSYyMzRaHRGANyESjrCZLxNUXTQZGj2TZCyC6UgcW5gjEYtgWTtHzaKR
      MPdzFUKKQ7NepVSt45gjbDnC0uIc8Vj4YS1qhF59i4Cm0+m0KRaLEAhimyaz2QUyEwlM67sH
      OjrmEBeFYb/J+laRRDTC7a0G55YXmM5M7K41BriSyrDfYH2riByOEvRt0lOzTGUmMMzvalXJ
      Y2DYDIdD+oMhajBOq3yf2WOnmJ2eQfVNrAdPp0xEdFYLbTTJoNfrocoy4UgUB42lhSyRYODB
      kTxIhHXuFTsEfAPf82h3h5iDFmp0kqX5WSJB9WGtFoxSKW2jBxQM28MY9FH1EKblsrCwQCoR
      ezjf9GCUUjGHHpBFH0AYb2ILIIw1EQBhrIkACGNNBEAYayIAwlgTARDGmgiAMNZEAISxJgIg
      jDURAGGsiQAIY00EQBhrIgDCWBMBEMaaCIAw1kQAhLEmAiCMNREAYay9cAA63Zd/Aprve6ze
      uf3whmkAc9jFePSFV/j9r6LNwrvlYQB83+f2jSv84ud/wsrqxq6imyu3nnjjzZUVAJxBjbvr
      NXzPoV5vHejLy2uXcaNZVAnK6zdpjqCeu0ul5+z53pWVm3vWuLZBo9Xl1oPa/bxHGC8Pnw4t
      SRLvXfiQTn/IueUlPvvlXxAIhQgEY1y/fgVVjxJXHfKlEsHkdw+rLeU2uHyjyUTyB9zfvM+1
      ryokUjE2il0UGX7w4Snu5lvgS/z0Jz/g3q0rVHs2pu0S6G3RjSicyn7E/bu3GJZtTsRs1m5e
      49qgxfvHpih1TZA1fvTpRzQqBTa287hyBIBOdYtLN7fod3v88JMzrNyv4pom2STkBiE+PjPH
      dq3D2s3LuJKO0W/zzeWv6Zk+bq9CLBZlszokJHn8xm//NkExCsbYecYukI+rBPnkk08Y9Iec
      PHWKsycX2djYQJJVGs3vngkzPZtl+cx5UrEgAOH4BB9+dJHp6VkWpjPk8kVULYCq7qxdtVaP
      T3/tUwKSQ3ZujnPvv09AlsjOzfP+hQ8JagHee/8DJlMR8qUSAVXdedQ6sLWxAZJE88H3Nysl
      zn38Q+amJ2hUapz/+FNmEiqGr/H9T3+NRCSIpGgcO36Si+8tE4wm+fh730eTLcLxFB9dfJ+p
      7DxLMxPsY69LeAc99clw8UQS1be4s7bBuQ8+IuiblFoD4uEAjqcyPTtDKhEjEU8gayFKW3cJ
      JyYIBXXisRiJRBxJVkkkYpw4fYp6pUo8mWYqk2YqHefK1RvMLBwnFY8SiiYJBmTCkRh3b98i
      Mz1LOBonGJBYPnmCaq1JMp0hk07gOiZDy2VycprMRIr5pRPcvfENG/kKP/r1n3DvxhW05Azz
      UynC0SQBBWRFYyKqcz9fZ3oyTSKeACARTxBPJJCUAMlYBE312C61SSdjj88O4R32Vj8XyOi3
      uXnnHsFoivfPnjzs5ghvobc6AILwssR5AGGsiQAIY00EQBhrIgDCWBMBEMaaCIAw1h5eCiFG
      iTwYx3G4m2vg+fsYFM/3QYIH/7x0bSYRYnYidqCB+V5X7esa5fFN1e66FigW230W1HNMcqUG
      xxayT3xIfnuL6WyWWq1FJhmmM3KZmkg+8YW9Vp2+IxNW3J1xgsM7YzoZhoFt9DF9DawB0dQk
      Qe3Rget96pUSemzi4XseZZsmiq4/3IRVS3m0aJpkRGdjc5OZ7DzlwjbxZIpmq0M6GcNwJOZm
      JvecSfthGAb/6X9eoWe4r+TzDuJ3f3yG3/+tLK7rIsvyvlbUg9Q6joOiKPsOgOu6qKq6r9qD
      jAj5Omo9z8P3/Ye1T7S6vnmHKhHm0klMwwJzhAW0CtuMPBXNN9GjCfSgzsrKKjOpMGtFg4ji
      QTpBbmsdNRhCkQJIko8vy9SqFeKRCH53QHRxnvv31/GVANmpCTrlCqqm0y8VmZtOsVFsMZWO
      g++j6UGajSax8OyuNo56Le7cXiezOIPkSgTDEcCnWquRDE6iRxMUt9ZpDy0UHyxkRpaLMxxg
      M0lgz9kkjIsnAhBPJqh1ZDZXb5OazNDoj1ALBbrdHi4qzeI6wUQG0/KZm05TrncJxSP0hg6F
      Qp52t4tmQ79XBiQWZicxTBMNBykQJJffZjC0CccCrK/eIZrJ0m3VCIZjVGsN1tc2sBcymKaP
      bfSZX1ykXK0Ri4RQA0F0TaXT6SJJMpYL0xGdjWKZREhhNDAplX22ckXmFhbITsQJjFr0TJdR
      r0MkKVZ+Ybd9XwrR6/We2EUaZ4Zh8B/+x68w7L1nn/9gv17aRx/A932kPfoAP7qwwG/9YFns
      Ar1A7eO7QA8DIDrBB2NZFpIkEQjsvU05Cp3V1xWW17lSv4lOsLgY7gUZhsHwj36DgNU+7KYI
      L+GJ7VazsE7d1VmcmWbUbXB/Pc/FT7/HqFnD9AN4RpdoIkVuawPLU/Esk3AiimG6fHD+LI1q
      iUAounMTiyTR7XbIFavEdBk5GOf0iUWKhTwj2yGqK1RbfXBMYukZFrMZcoUq01MT4HuUC9uY
      UpgzJxd3tdF1TFaurrBwbhl7YBGNhWlWCrRGHudPnyCfzyPJCrFICE9SGJkOumQzHBkMHZmY
      BvHMFMNOh2K5TCSkY7gyF86d4ea1yyihFO6oRSKVodnqkYzoNAZDlpffIxbW3tjCEV6/JwIQ
      jYSodGTuXv+G1GQGWdOpFQp0u+2ndoK79s7gwxI+hXyOZrOOForT73X4thPss7OR8V2L7dwG
      rdaIcCxMtVwmmsnSb9WwjQGlosnt2xv0+xkM0ycV1bCM3hOd4Fq5jOtDo9VhOhLk3voWiZCC
      a1sUcjlkVQfZoVoqY6kBHNMBs40azaDIEnfvrKInZzl3+hxa4Nu723wKxRKuY6EqChNTWRIR
      jWarB0A8NUk0JFb+d8073wnu9XvEoq++3YZhYP7vPyDgDvas/XYW73efeq9O8FGqBX/n3N0+
      /rajUPv4shB9gBdkGAayLKNpe28VXNdFkqR9ddJeV2dVHAXaseeJMGH/fv/f/683eib4RDbF
      f/xX//CNfd84eCsD8LxO8Psn57h84y6pRJRWd8BEJMxAVtBcm8HQ4v2PLr6df7TwWryVV4OW
      C0UmJjOUSmXCus/qeo6AphOQJUrlKuaoj6qFAQlZ/m4zHk0mEY/+ER71Vv4YTs/OUCg3WZpf
      QPJ9Th8P02nWmJqZJRUNkp6Zx7UMpmemwRpilmrMHTtOOPjkRXXCeBNngl+QbdtIkrSvzp84
      E/xd7VG7HFocBXpBnrfzKLn9zPS3baUWl0IIwph4K/sAR0WrVqZr+hybn33q/9fKBQa2hOqN
      0GNp2tUys0uniAafvIDOsw1ylTay0ycUz9CslJg7sUxEf3IRNaolTD+AM2wRSU5SLxVZOHWG
      sPbkL2u5sI0t6fhGl2h6kmqhwLHT7xEK7P617DTruLKO0aujhJL0m0Umpucp5EucOXcG9ZGt
      gTHo0upb6LJDa2ATVl2kYIJhq8xE9gSJyHd9rVG/S3toM5NJsJ0rEZCdB59fZnL+BPHwo7Ud
      OkOHoOLQsyRku08gkqLXKDO1cJLYI2fih70OXcNFcYYMXAXVHaJF03TrZWYWTxENfTePe+06
      xVqXVEzH9ANgdgnGMrTr5bfzKNBRMTAdFN/hWZvQRCKJqvighGkXtknNzdKqN59aW6pUse0B
      khqlmdtgYnGOZu0ZtaUSljVEDsSob95j8vgCjerTa/u9Hv1+G1mLU72/yvSpJeqVJ2sT6QzW
      qI8rBbC6OfTEEmu3b3P6eJpyw9pVG4zEkTybeDyBqiq4BDAHJYLhGbqt+q7aUDSO5FpUikUs
      18KTdYa9IuHYDJ1W87HaBLgWxVIZyxjiK2F67QLR+DTtx2rDsQQ4Jr1ej0G3BYEonUaORGqa
      Vmv3Y/ojsQQhTWXk+GB1kbQEzdoW6fSkCMDLUHyHgeU+84KB7a0tbFfCGLTQk2kqm9uEY/Gn
      1vquQ7c7YtRvEEpPUFrfIBJ/eu1EOo1leQx7dSKZKQpr60QST69VVBVF0Rl2q0SnZ8jdvUc0
      +WRto1qiUm9hj/r4eppu5R6z2SwrayVSid1nu4e9NoVikXsbWziOi230QEnQaebQw9FdtYNu
      i2KphOl6tDt9rGEXWU3QqucIPlbb7zQplsrEE2ks28EctFC1JI1antBjtb12g2K5gi+rKKqG
      0Wugh9JUy3nCkciu2lJ+m5HtgGNiegGMbo1QZIJyqSD6AMJ4E1sAYayJAAhjTQRAGGsiAMJY
      EwEQxpoIgDDWRACEsSYCIIw1EQBhrIkACGNNBEAYayIAwlgTARDG2sMA+L7P7RtXuHz5Miur
      G3u+cTufA6BW2ubOva1nXhP/OlSL26ysruOJC1mFl/QwAJIk8d6FD7Etg3Onj2MMOty4dRfH
      7PMnv/g5d+5v0W1WuXp9BdfzyeXz1LfusNF0mZ9K4Xkut29epz+yMAYdrl6/Sbdd5xc//znr
      20UA/Ac19XYfxxxw/cZNLMfl/t0V2n0DgH6niwu0Wm06nQ6b9+5Qb/cZ9lpcu7HCsFfn9maN
      xakkI9OhXs5xf6uANepz6/ZdEQrhQJ6+C+T7fP7FZU4uTPDltfucWl7m7MljGIbBqFPgry/d
      AGB1s8LF88eJxuNc+eIzZpeWufTF51z6/HPiyRSBUJzl5VMszU9y/co3bK1eJdf20BT428++
      4PTpU6xd/Qo1Pce1y5cAWL+5wgj45purXL1yifjUPCs3r3Lp818RTyaQtRgR2eCbm3ewBjXu
      bLXJTqX4/ItLLEzF+Pra2puad8I74Jl9gEd/R23LxvVcrt28w9mz55H9nV/r5cUprt/aoN/t
      4j1Sf/7jT/C6eW6u5rFsG1C4+NHHTGZP8uHpaf76sy8ePnzVsYbcuHYNX925N1SSXIzhiHa3
      jxqMko5HUVSF97/3CUZtnVv3tlk4cY6TUyE28q2HTy5o1YqsrG0RecqAeoLwLI/dEebT7XSJ
      JxIYgw5rWxXOv3eaYadOsTViMqLQHPlMpmL4+CTicarFbVojOH18njsrt1g4+R6S3ePeVonz
      58/Rq5foWApL89N4rs3tlRWyS6eJaR4rq5u8995ZNu/dJpLOkp1K41ojVlY3mJ6ZQdcUEvEE
      nW4HxbNZz9c4f+4shc01TCnEqeMLNMo5upbCfCbGytoGZ947R0gT9/oL+yNuiRTGmjgMKow1
      EQBhrIkACGNNBEA4NNXiNl9fW9mzrtXe/aCr/PoaQ8entL3O1Vt3AfAck1ypAoAx7NLutBlZ
      jw1e4nt8+eVXtGqFhwObiMMlwqHpddtYlseVr3+FjMRnX9/k4oX3cVwf1axhh1I4I4XpaZ2b
      V9tMzJ3i3PIitU6feVViu9PCcgJ89fnfQECnN+hi9Hvcv30VPZ4mGEliDA30gIOnRPjemSxb
      6+t4voErVxk0mmILIByeSCTGsNvBBSQkLnz0EdFIjKlUFE8OocuwdPz4rpXUMfuo2s6gh9Fo
      nF63gwdIskIiFmVzY4PssVMEH/lpjyQyJKMhGtU60/NZhgMD2XPotDviMKjwdhm0qzh6mkTo
      5XZeeq0q5bb16gLgeR7D4ZBoNLp3sSC8JgcdzlfsAgljTQRAGGviKNAe7ty6TnpqgWQiTLNW
      o9ruc/H8GYq5HLH0BI16g3Qiwv31bfSQDnIAzAFaPMOpY1ny+QKpzCS+66AGAlQLm3T6Jq7n
      MDV3kplUkEKliWcPcSyLoeniWiaLZy8Q9Ib0TJdENIpjjsht3ie9dB63VyYaS2K6Ep7RJRSQ
      WMl3mEpFUZQAZq+JrwXRVR3FNzElHXfYBi2M1e+g6zp902Ju8TTT6cjeM+EdJvoAeygUCiQj
      GhvlLlOpEMFwnF6/g297tFp1ev0h88dOEAyHGPY6+J6DJAWwzSEyPoFQkHprhOJbhBJJYgGZ
      TqtFdHKSXrOP7zksnjpFo5IDAoSDCp7t0jQ9gpKHKzsojo5tWwTjMWJBmVqrQ7/TQY8miYU0
      FKtFrhdgNh1mY7vA8cVFgrqCa3k4ske50iAzkULyHSRJY9QsE19YxLN1FrKpw57Fr9RB+wAi
      AHsYdFs4so7seQz7LUaeytL8FLdv3uHYyRPU6w2iIY16u89MJokr6/hmn2A8TVhTyOcLTE9P
      YdkOHjLdRoXYxAyDToOpmSySZ1GoNJlMRckXSqQmZzAGfbLZWQbdFkNHxhn1CEciVKs1sovH
      CcgejmnQGTlMJGPg2RAIo7gGhWqbyWSYvgWpaBjLHtEZ2EQ1QIti9ZtE09M0q2VmslnkfQyE
      9zYRARDGmjgKJAgH8LAT/LIDZXueh2maiPNqwmEaDocHqn8YAEmSDrTpeNy3AyCLXSDhsB1k
      Pd73YdBKMYekxxi0KiQzM5QLBabmFtAkGz2aQn23+lLCY5rdETfWKwxNh4WpOOeOTSLLb/9C
      318AfI9SqUx6BvRwitLaHWYvnOf+9TWCsQjnz6ZwHBfP83Ac5zU3WQD469sVXO/17276vs/G
      dpU//+oejvvd9x2bTvAPfngGXdee8+5XJxPTubC49yFb13UPtA7uLwCSRDqdwrZ9hoMyidlZ
      cqvrZLJzRAMOpuujKQqyLKOq4tzam/CXNwpYjrd34Uuq11o0Gp0nXt+qdPhvf/o1S8ezb2SZ
      n1tI8dGJyT3rFEXZV3v8bhF/1NrvLpDE4vFTD6YXAZibX9xV4Xn7XxjOpf+C3yvtu/5tJ0Um
      UX/wLw+7GQfmOM5TV/5vua5Hs9Flajr9Blv1arh3/gzv/v89nEsh/OY6fmvvxy++K/z43GE3
      4YUMh8aeNYPB6A205PUR5wGEZ/LcvfsYB9nyH0UiAMIzaXpg7xpt75qjTARAeKZQSN8zBMnk
      i587OgpEAIRnkiSJbHYSRXn6apJMxYjF3+7LqcUxS+G5dF1jaSlLo9lh0B/heT6aHiCVfPtX
      fhABEPZBDahMT0/A9GG35NUTu0DCWBMBEMaaCIAw1kQAhLEmAiCMNREAYaztOwC+a9HpDqiW
      i5iOSyFfwDQtHHOEtY9rRgThKHrsPIDP6pUreIkgemCG4wvph68X83kGno8uBypb28AAAAU8
      SURBVKhd/Zrk4jFu3LxLKBLk3JlTB7ohZhzvGxY3Cr0c3/f3NQ/3e0PMt+vgkyfCPIvcdofv
      fbK8q7jX79E1fYKSSygSpVIsE4wkievugW+IsSXpjY4sfxSIG4VejiRJ+5qH+70hxnmwDj5W
      KZFOp9nobVAttUmfmnzw5TJnz3/w3A982y+LFcbTE30AVVNRfIWgGHBaGAO7AuD7Pr6ioHge
      geCbudlZEA7T7i2Ab3D7foOPzy3SaLz4Q7IE4W2xKwCSHGRpPsFGQ+LCcuaw2iQIb8xju0A2
      W1sFus0Kjc7BHjEnCG+j3VsASePsyQVq1TK9kThuLbz7njgKFNBDzC3Mob0Dj70ThL08FgCf
      K5//ivZowHBkH06LBOENeuJE2NLSIvZkBtsQJ7aEd99jnWCT4OQi9VyVYwsTh9UmQXhjHjsP
      MOSXf/E5nufu67F4gvC2270LJMX5nX/+WwSDb/fTvgRhvx47DKoQDAbwfZNGvXdYbRKEN+aJ
      60Zr9+9wo5in3dX5p//4Jw9e9Slub+I/GGZTjBAjvCueCEAgpNDrOBw/cWLX64lUis5g8EpG
      iBE3xAgH9cZuiAnFM7TKf8kH3//hI9WwtblJYjJLr/XyI8SIG2KEg3ojN8T4vk+tWmUqu0gk
      +Mh/SRLnLny4Mz0zBbzcCDGCcFQ8FhWDy5dX6Bsjgvt4NrwgvO12BUCSQvzuv/gn+J6L7Yzb
      Toowjp66syTJCpq4IUwYA+LBWMJYEwEQxpoIgDDWRACEsSYCIIw1EQBhrIkACGPtnb9AZeCq
      /Gl9mUudLF1HZ0ob8Oupbf5eehNVEif7xt07HYCWHeTfbfyYghl/+FpnFGRtNMGV3jT/ZvES
      AVlcwzTO3tldIN+HPyx+uGvlf9TXvSx/Vj/1hlslHDUvFADf94/8CDF1O8Tl3sxza/6itYTj
      izt5xtkL7QIN60XQlCdGiDFNE1mWkWX54eXRT5t2Q7NInozrukiShCzJuN7zpyVJwvO8fU3L
      kkyuE8H1n5/vlhOiGTxJQt9pn+d5yLL87GkfPH//077v4/s+SmQadzTC9/1dr7/I9LfzMpvQ
      MG0H3wdF2Xl9Z1rB89wDTbuuC7yaaUkCWT7otIzres+ZlkiFZIbD4Z7L3zRNVFVFkiR8339m
      raelcaJLSP4L3J5ldmrc2iigBZMkdJfJheNoMgyHQ6LR6EE/7rVYyzf5g//858+tiYY0/uu/
      /R3C4iEA74xer0csFtt3/QttAfTEJB9/OLnrtaN2Q8ziVJxMIkz9OQ/5PbM4IVb+MffOdoJ1
      TeX3fvMCz9rDD2oKv/ebF95om4Sj550+DPrTj5awbJc/+T9XGZrf3Sg9mQzzr//Zr3Eym37O
      u4Vx8EJ9gKfxPO9I9QEe1R9ZXL9foTMwmE5Fef/EFJqqHHazhNfgoH2AsQiAMD5euBPs+z79
      /ouPC+Z5HqZpjuUzf4SjYzg82MhGDwMgSdKBkvM4z/NQFOVIbwG+PS58VD16vPqoOurzEDjQ
      evzOHgV6XL1SJF+qHHYznutIr1i+T6mwTaXWPOyWvFLv9FGgR5WrNUamTSwaJRk/mlupIx0A
      oFqrYzlVotEI0XDwsJvzSoxNACanZwEwjSEc0QAcdTPZeQAG/a4IwNtm0OswMm2C4SjTh92Y
      t1S31cByPKKJ1GE35ZUZmwAE9BBaMMz83NxhN+WtFYzECEky83PZw27KKzM2neCADJZl0Wh1
      Drspby3Jd7Esk05vcNhNeWXGJgCdTptWs4knTlO8sHarRavRwJfendXm/wMxOflScHfT8AAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gap-sce' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9yY8lW57n9bHZ7M6zz0MML/K9V1ldXVR1t6obdasRAhYINghaQkJizwZY
      tFjxB7CHfwAEYsMGiRYtoLsmiqrMysqqzIzwGDw83MPd7zzfa9fGw8Ij4sW1Yx7PKyo8Ml65
      fTfvuf3Czu/c37HfGX7TUYQQggwZ7ijUX3cHMmT4dSJTgAx3GpkC3FWImF/8xU85u+x98J/5
      7oK563/3moh49uwFIg752U/+lHZvDED77Iwgvvo3k8mE0WgktTVon/Ds5SVnp2cyo8ij3+8z
      X604Ozv/+N/114T+2Thl+LIgYkbDMbrl8PvHx/jTNovIxDYEjc0dfvZnP+Wrrx/RKOSYriKW
      qyX/8B/9Y4LROUquAnHAaDTBcs75xc9/gohUNpZLcgT87C+P+PrRfX7x87/AMGA0cfnNf/BP
      uHh5ztyPyOkqr46fE8cBYaygmBbbjQqvXp0QlLYILl5w/rLFxWCBaVj843/n36Jk3s6nminA
      HUapWmI8ngAahXKdvVqdII4Z9Nps7myhOSV2NirMTrsoKKDA2eWAr35zDxF5VKoFxuMJCgqF
      Uhl/PmYeaTy8vw+KgoKCosDBwT5xFON7K6JQI1+r0L+8ZL6ckS9W0CyHg91tlgEsI6h++2Pc
      wQV7OzsYukV0izJQPrUVSAiBoiipz4FraWnPP5b2Q+b1pff98rLN5ubGR/F6//mLo1/R2n9I
      0TF/rXL65GeA+Xy+9ncYhgBEUYTruqm05DsIQRhGqbTAXxGE8Qd5eZ5HEAQ35BUTRuntRWH4
      TtBJ2nK5BGCxWJCcQ97Sku+I0GPppf+ut/0TQrBYLG7c96W7Su974OEFH+YVBAGe592YVxhF
      bG1tyryikPh75JR8/uDR1zhvtjVJ2mrlEsd/fblf13cRR9eO8a0fgn3f/+vTRIz/5sfcOq84
      wg/TF9kgDPhcXpKP6vvn5CVi/CBdTlEYvvtgb4wPyP1jcf0YhwRRev9uVQHGwz7D8VQmCEG3
      fcl8uZJIUehxcXGZKuz22Qv+8E/+DD8hbCEEo/GYeWLmhKtZdzRbptLmsym+v2LhJgT3pr3l
      YkGUogE/+dM/5unLU/l3BQv+1R/8ERedgUQadC/54z/8AxZvTSVS3+fSO0LEjCaT1L6H7pR/
      /Qd/RHcwkWjd81f84R//v6xCue+jQY/hZCb3XcR0Li9YuJ5Echcz3JXH3E2M15u+r9yF/IFF
      K/7gD/+I1ylWpvls8kbugUS7OH7MH/zpX5L2vf7k//tjnr2ULUgiWDJa+LKc3vRPBC5zT/6e
      Xj39+e0pwHI+5VdPnqXuxUb9S56fvEbVtESHY149e0JnvETX12lCCCynxO7WBlqizShYcXJy
      wsqXV43FdMTJyStQ5fN+r33Oq/MutmUk+hFx+uoVk9kSNcFLCMFGc4NyuSS1JxSV7c0tioWc
      RNN1i539PUwtIY845OTkhMVS/vC85YyTlydEsUQCVWN7a5t8zpb6Z9p5dne20dV1XsvZhMdH
      z1PHZNi94MXpBaqqSbRB95KT15fYppn4wTGvT18xGM8xtPVPSaCytblJsZCX2uu2L3h13sWx
      1sdECIFdqrG7USPR9Su5t9LlPhv1OTl5hapbEq19fsbp5ZB8Cq98pXl7CuDkC+zu7RKF8rJU
      rtTY3dvDTc56ikpjY5OdzTrT2bo2L0YdztsdzGID21jvtm46rCY9jo7l2aFQLHL26oTLy45E
      KxYLvDj6Bb3xcp2g6hQ0n5/+4ogwsdocPz+iP12yt7Ultferx0f4YchGs75O8CY8P2sTqjnK
      zvpAKJpBTsz5s18cS+3ZuQKX52ecX7bXCXHIr46eE8SCZq28zmre59V5B9Upk7fWP2anULwa
      k0BWtkr1akyWC3l1KBWLHD97TGeYWM1VjYIh+PkvHuMmVuwnT56w9AK2Nhpye4UruXcn63Lv
      t1/T7XQoNbbREhrwVu6725tye+USJy9f0m4nxlhRKObzPH/8F/QX69/hxdlLhv3e7SmAiELG
      gy6DxI+Eq73a5dkxIfJsE/g+z54+xbbXZzbDylEqlwlXi3cHmreYjQcUa1v85tcPpfa6/SH3
      7x1yeLCX7CDT6Zx7j37Mdr243j93zgqH3/27P8ZIzNjlcoVKKc9wLG89KtUajqkxXawf9lEN
      apUSShzgJbZAq/mEwKjwe7/9jdTeoN9jf/+Qe4eH6wRFpVatYukK88TKoRkOlUqJ2F8RJOQk
      opBRv8Nolugf4PsBF69eECnJ1TBmOJ7x4OHX7Laqa6TQW+JGOr/1d36TnLk+lpVKlbxjMpkl
      tyURk2vk7uQLFEtlVovJu0P1W7yV+2gky/2yN+bR/X0O9nbXWYmQ5WLJwde/zWZpfXXIF8sU
      ipXbUwBVN1Fjj95IPgPYtsVk5rKYyzTT0Fl5HuPp+kxk5UsEixmWZQLrH+Vlp4uuRri+vM/r
      9oesVktILvvenJGvMZuOgXVh93td8rZGfyp/KI3WJtPxCDW5RgM7rTKDyQqJYuTQgwWa5SS7
      znm7Q9VR6M/l/XC312fle9J2AEWlWXWYLiPpZxl2gXg1x7Dl7YCqmxCuGIzkWd62LabzFYtZ
      4gMLXEZuxDxlrMbDHoZpMJjKZ5StjRqjsfwcb8Y4eCP3xEdeKFWZzWY4yS0pH5Z7bzDCdReS
      bFkOmZJjMh5KvCrVOqPJ5PYUYNC5wMhV+b2/99sS7fTsNfuHh3z76Kt1Qhxy0Z/w4MFX3Ntp
      Se/lbY0Xxy/xwvWZ7dGPvrnSaFve5//422+oVmtyB+0yP9qr09qQl9Tt/fs4+RI7iRnqLVbu
      kk43JYRANZlPh/QHQ4lUKOY5e/6E6WpdSR88fIRil9iqyB/sN998S6NWlZ4DaLrFeNBmkDIj
      FnIWJ8+fs/TX5dRvn2MVG/z93/0t6Z1XZ685ODzkm0eJVdTM8/W9LRrNDemdxtYB5VKRnUZF
      7qBiMJ+NGCRlYVeulTtATo95enxKnHLucZfpcv87v/E15Updeq7kWzzYyLO1vZPKy1aC21MA
      L4zIWTqdnmwRiWJBFHhM5/LyiKqzmE9wPXlGVDT9SslTfBwr133nO1hHjLt0iSKZFgUBK8+X
      llsAb+XiB0FycQBA0+Wt21X/YzRdQ1FkscZoGJoizdgAnusSXGP2dZfL9N8lQNM0FFXmJVQN
      VVWkw64XRjimSrcvK2gsIAxW8pgAcRjgrrxUU6e/WuGH8lhBjKbp8soLRL5/rdx1w+A6i6qm
      a6ntQcxy6ab2L/Q8PD9I5WUY+u0pwPbOHl4YU0yZle8dHly51pPQLPZaZXRLthyE/opAsbh/
      uI+VtKQAK3fBeCabEkFh6q5YzuQlXNE0ltMBk4V8KNSFT3swIUwIbjYZsrm9T7Muryq94ZQH
      B3tUq+sHU6IAN4jYPXxI0ZRFrkUu54MU0yQwmi3wXNlROJjMuX+4T6VUWCPFgYcfaxweHOLo
      63La2d0nCGMKVsqYHOxxnVVcUTXc+YTJXD7PaUpIbzCSVuXBcMK9gz2qVXl1UDQddzpgkjiY
      +qslsVHk0cE2Sb2ejYds7ezTqKWs5gIWXsBsIgfgqbrBctRm4q5PIqvlDDVXv10/gGNbV7No
      EoqKZWips55h2ihxSJTQZt2w2NmoIzQLPWFyi6KQXC5HnLJuBlFMTge0pAlPoCgqYRhLe844
      jtBNByWOJJNroVRF01SqFXlgG61NUFVKeWedoBns7OwgAMtYXz3iKMKwc2hCnuXDMKKYswhF
      YpgUhdbGFkJRKDjrWydVN9nZbCE0Az1lorh2TFQdy1AJkyulEAgU4jjCttZlKOIY3bCvfkNi
      TGqNFkJRqBQTk5kQKKpKEMY49rrcTcthp1FEmHnJ/FwoV9E0RZ5cgCC+2s5o5rrchYjRNA03
      EOQTE7HlFNiq2rerAP2LE56eyuZHRMST41NGA3k/53tLzl6f0R2sa/Ni0uPnv3zKsHsuOTV8
      b4VhOdSq8n55uXQplMqUS8mBiPGCmEqtjpP4KKMwAE2nVq9JK+6r4xf4oeDstewIe/rkl2i6
      xcmrV4kfNeNnf/6XjPsd2tP1WS8MPFTdpJ4ys63cJU6+SCVp+44jHv/yrxiPhpxedNdI3mLI
      L5+eYMYu3am8snXOT3jxuis9Jw45Oj5j2E/SBCs/pFKtkUtMFFEUIBSNWq0uHdSfHz1mNBpx
      fJIwTa/Jff3zG3Qv+KujV/TbZ5IF69XLF/R6A14cv5S6vli4lCoVSkn/i4jxY6jW6iQX3s75
      Kb96cXF70aDuYopdrFMJZRaj0YTtRhndXl++ETHThUfeNqVBN6wc+4eHhKulNLPFYYiqW6kz
      XhgECBETJpZoFAXf96mWi3hBiPVeuK0iYqI4xvfkFaVcreHYFmdtWXkbrS0MVRBGiRVANzk4
      2INohZYwFxJHxIqOqctyCsM3fU/OyorC5tYOuq6ySiyiupVne9tgOe5SSij2cj4lV2qASKyG
      wGg8YbtexHBkR5Pv+1TKJfwgXHMaKkIQRRG+H0rnsnprE9M0mCdNwoqC7/nUykU8P8Iyvvvd
      jpNn714JbzGXVoBypUajtcksGaMEBIFPoVR543N6z3yuKPh+SOStSGpoPl/EqTRu0xFW4t7+
      LvcfPJBo1XqT7d197u8lnEmKytbOPvfuP6BeWtdm0ylgEHF2esIqYd3o9vpYps7zY9mZNBxP
      0XWDfi/hTApd5quQ+aDNxXBdqP1ul/kqQsOTXPzVWo3xaMBwKO8365USg9GE0Wi8TlAtcrZO
      /+IV48X69qPX6aBZNi9fPpfa6w3G6LrBaJCYlRWVSilPr9uhP1y3AmmGjaVGDPs93ETfc4US
      B/s7PLh/X+JVrbfY3jvg3m7C2hP5zJY+y3GX897675qM+szcAF0JWCYmi1qlxKDfo93tr7cX
      usy9kOngUpJ7rlRBCVccn7yStsDVWo3ZZMjp+aXU99F0QbyacfI6QfMmzKYzDEPlcry+8har
      NSJ3fnsKMOq1uRwtWExki8PF2SuGoyGvLxLbozjk+PlzdF2j3Zc/sNXKJVYNcgkP5737DxBh
      QLUk7w+/enAPlRjNSMzKRp7D7Tq+0GmW17dHm3uHtKpFvFUgeSQBlvMJuYLMCxEyHI6oNZoS
      yXNdZqFKI+GQ2Tl8gB6H6X1/+ABTA5F0TgFxFDAcz6inHMZX7gofnbKz/p7vrVgFgvaF7DE/
      Pz1hOBpynvSY6zb3djfwY416Zd0sXNvYZbNZwVsFmIkDNyJiPBpRqSU8wUaeg+06gTBoVuSQ
      kZW7wjBNtJTV3J2ly/2r+wd4QUS1sr4FVuwah/tbeCufck5eYV3XvT0FiKKYWrVCty+bQYWq
      02w2iUJ5j2rmCkSrGa4nH5B9f4VlGJI3FeUqWUPaKnz3DxAiLaAGVEV8ICpRSCG3ALOZi5Vi
      3SIOCRQbEcjWEi8IKDkGs2XiAPq9fSe1DyIOQbcJvBSvbuDhmAbLhAznkyGxlv5xoRk0m03C
      lDCJq1wYQXCNnBQF2QQpYrxIQxHpEZoqAj+5LQWCYImqmqkmzencxUqxYCmAQCGK0k3Jhqak
      Blf6/uL2FKCxuY2/nBGnDOzO9harxVxy46PqbNbLTOduasDW9uYW1Y1dirZshx8PesxTIhmJ
      PNqdIUGKhWg2mzKfz6XlFmAynzGbzuRwaCFobe9wL+F2BxBGge1Whd0d2fHS2trBqbTYKsv7
      79l8yiQtapaYfrvNKiUaTncqbDSr7G7JDqrNzS1KjS1q+fUVoNbaRqxmTCbyPnpnaxN3PpMj
      Y7mKBh1P50QpMpxMpyxmM8l2LzSbzY06+ymymE2nzBdzopTftbuxQWv3QLIqXcl9m/spcidc
      ctGbEsfytzYcTfA9eYyFEOxvbd5+PkC5nLJV+B6aohkUC+tbluV0wLOzLqtJl2VKyEO5Wuer
      B/fkxnSHjY0G+5uyZ7lcrVNpbNIsy0txo1Rg78Ej6WB99uqYGIXjlyfSO8+OnqCrcHqeOG8E
      C375+DmxO2WwkE2QtUKe+z+SY4FApdzc5KvkWUlEHB09QRMRr9vre2x/OebJ8Tn+fCh5nd/9
      7pSIyu9o8pjkS1XqzRatakGiNSolNg8eSAGKL54doWsqJ2cX0juVai1V7uN+m5fdGbP+OWHi
      /HL66hiByosUuWOW2N2ostmUA+9azTr52g71wvrEc3p2Rm90i2cAgMlkRKfTlwlxSLfdZZzi
      dfTcGcPRRLIemHYOQ71yoqSFKBdLZXxPXgFiAZVKmZWXiGWPfFahYDGbSs5ed7lA03Wm05nk
      risWi0RRhGHIM7ll6gRhiOMkrUAWOgGxamDp6yKfz+eYhs40xYk3XyxQiVmukkqjUszniOIY
      01yf5TXTQYl8FM2QQ6+B8XhIpyefyxAhnU6fcUp2nqLqVAo53JWfIAksJ4+hxFKAYrFYJAwj
      TCmEWqDqJuW8xTLRXi5fQBExuq5L5ue8Y7PyfClIEq4fYxGu8NCZjsdSe/VKmbkvblcBynmb
      vfuyFQjVwCmVuL8rx4M4xSqFYpGN2vosFfoekQDfnTFPfBCXZy/pTxacn7+W2nvx7AjXdXmd
      PNyFHs+PfoVQNDqj9UGfjgf8/MlLdHz8xEy0dF00VWUwlM8284ULis4w6d/wZyxDFRuf8+G6
      Yg/6PX7+7DWGkPfylxevGUxdRsOkyVWwWnnoqhzW4C/GBOhXQW8zeUIo5R0O7slWIFSTfKnI
      vZ3EmIiIx48f4y6mUji0O+3z9NUlo34bN3Euc10XXdfp9xN9jwN+9asnuPOJFA7tuUtQVabT
      ieQH6A+nGKrCdCZ7zJ8dPcZ1XS46CV7BgqNf/iWqZtBJ+F90XSP0V7fnBxBCUG7uEqVkH8VC
      cP/ePRbLJbn3Z8s4ZLkKyFs6kVhXWdPJ02rqqM0aZsK6Ua7WGE3mqXvvWq2G6wXs7Sb2joZD
      q7lBFMfUE0txtdYgiFWEoknh0JVqHUXTKRTlbcTe/gGaCm6YoJll7u8rxKHHbmF9BttoNdF0
      A5GSsNNqNnAWKywnufVQaG1sYpgGpcQ22i7U2dt2CL0lhcSy77tzVpGOHsuHxfliQa1cYOWF
      5NYWMIVatUIUC/Za6wFnpl2gYHvgbEghL43mBrphUExatxSVWrVEJGC/uS6nXLFE3YypVcqY
      iTPA7t4uqqZjpHxPtVoNL4jkMTZLbGxsIoSgmV/vn50rkLet21sB+hevOOv0OUkpgvTyxTOG
      wyFnSZtuHHL84oiZ69NJzGxCCIb9HqPJWDpw5YsVTNNEVeTDbL1axnRKsrVE1SnkbOrVEovE
      imLaOUzTJG8bKQdkQfvyMtUhI0KX7nB+5UleI8RMRqOrZP3kB5srYJqmFCIBV84f07IRsXxu
      8FczOt0B7mp9lhcIxsMBnu9LaYXddhuh6XQ6si39/PUp7cGUQdITrGqUC1e5GMuEkUG3HCzT
      pJg3pRk7DldctnsslnKyUT7nUKsUpZVcCBj0OozHE2lbqgDtdpso5aDbrBUx81U8d31LrWgG
      tmmyWS8wSzo1hWCrUbg9BShUahjE7GxvS7RarUYURezuJDRWM2k1W5SKBVq19VgbTTdxTI3Z
      bJEWoMlqPmaekmOKZtC7OEFRZVu6bZs8e3GSGn9uCI/XvYnkB8jliwSeyyrlvFEul6/yXYPE
      DKvqlPI208mUNGOsEizoJrPSrigMex3ixGqIolAulZhNJ+8qZLxjpRnkbYPpbC7xqjVbEIW0
      WrLlqNVsUC8XqdVlH4ZpWbw8Pn6Ti5GgKSEnFwMpPqtUKrFczPBS0lQd60ruOXu9Pd20MTWY
      LZbSGOcKb+WeYlbVbTqnz9EM+XyQd0x++exUCpXvXb7mfBzc3hbIyZcIe0NESsBbtVpmPO8S
      TkfUq+8tg4pK0TGYrmA0nVHIrTuNWq0msVWSYkhEHOHkizglOSY8DCPKtTq1anLLIhCKRrO1
      kZovatoOG62KHLUqBJVajVpdtioJzaZer7GVYnGqNDdYxQq1XJJXjO3k2CjIW6o4jiiUKjRS
      nF2aVaDWqLPdkmmNZotQcygmHIa5QgnRH+J7C2D9Q69WyowXA3lMEMQoNFobFJ1EMJwQGJbD
      xkZeChoUqkm1VmVrM3nOEwj1Su7JLDKArVYddalJ+cwIQblao96QZRvFChubm5QTgXdCxJj5
      EhsbG1IEcbFUYjG4xYQYgGrBQrNTkkpUAzX2Un9MrlRnPh2z0Vj36i2nA56ddpgNLiUz6Mvn
      T4k1i+fPnkrtPXn8mJxtcvQsESYRuvzq6BWKN+Gsv76dGVye0pmFdF8fS0v76ckxYSRSg7Ke
      HT1GESGvUsygv3j8An82lDK/Lk5eMAk1zl7KfT968phc3uHxk6N1gog4evIEEXicpZpBX7Mc
      d1PNoOW8mRrvg2aiRK6c+BJ5/OrJMXq44KS9vi2d9i94PVgwujxhmXA0vXh2hCJiXibrfIZL
      fnX0ClZjXg/W5T7uXXLSmTDqnMlm0JNjolikmkGPnj6l1+vw/EViTBZdHj9/wfmrV7wer6/Y
      QRhh6LeYDzCbz9FUUpes2XwBCHw/sWWJQ+auRxwF0tJu2nlMDdQUM2i9VqHb7VJNiagsFWwG
      4wW1ZGaVZmOwIlRtiolDdalaZdLvUSxXJV75nM3S9bCTpk5446UO1w/2cGUGFVdm0KS9vN6o
      0zs/Q02GagC1cpHTV68olpNRriq2qbNYLsnn1g/wuumgxgFeICRevjtnNJkTpnhFZ/MFiJQx
      US32txuE6FLodam+SdFSsHJFkhbXUrFIEEZYZiLTTXPQxYpIcygkwqFz+TyBtwJFlfIBCjmH
      5XKBbsiZc4c7G+h2gd2dxHY736KZM6lv7LCZcEBahk6hWrs9BRj2ujx+2UYJZFv/5fkZ44Uv
      mwvjkJMXR4RCk8x7ob8ijNPNoKPpgq1WncuOHHrtRSolR6PTTRzuQhezWCd2J3STZtDRmM3t
      LTrdjmTf7o+mmLrCJCXBZu66KNeYQd1Iw8KTzKCd7pBStYZjyUMxW12FIQerpG0+Yjqb43oB
      /cH6CuAtRkxnc4LQY5wIu+i222h2nvFAltPF61MmS18+BIuIdneARsQg4UF2ZyOmy4DVciaF
      pyyvM4OGLlbpjdwTOcODfp/5fI4X+NIK0BtNmE3ncnIQkMvl8BZTJvN12SqKSi5nM5kMWSV2
      DWa+xLx3fnsKcHDvPl8d7mBYspf10aMf0aqVKCVnNt3m22++oZi3qVXWl2krV6ReKVLf3JeC
      vA7vPUARETsppUoePrhPGMN2kmbkubfTALvEdn2dV2N7n4Kl0mptYiQcV4eH97Atk3pKnvGD
      +/fQlJhmK7HvtSo82GsQaHl2a+sHtYMHD2mU8+jJhB3g4YMHOKZOLnk+UDW+eviAZqPBVsL7
      aRUbPHp4j0a9RSW3Lqfdew8pmCrVmnxW+tGPvqZVLVKqJH6XqvPoq/v4scZ2Ivc3V26w26qQ
      K9akEixb29uoqsr9w4P19tbkvr49bm7ucP9wn1ajKXngDw7vsbu9Saslb5tRdEqFfGq2pOnk
      sQ01Lf8QTdNu9wwwvaaqGeLKVLdcyZaUKPDpD4bSDKCoGpHv0m53ZEuKojCdjJmnpOwpImY4
      GKTmGIeey2AwSs0XXcymTFKcLpZtM52MWCxkXrZpMBwOU7Z9CqoIGY2nqfmus8mEhSs7wkAw
      HqW3ZxoavW6XReJ3qapOHKzoD4epsTbz2eyaMYkZDYeSWRWuCo/1BwOpRhJc5RiMJrLZ0jIM
      Br0uo5SKEcE7ua8/100LbzmjPxxKMVi2bTMZDxmmVBkh9ph7MV7S2w9MRyN0TU2tkieUW1aA
      fD5PqZhyCFYUCoVSagU1TTcpl8tYKRaCXL4gB0m941WgWErjpVIslSjkZBOZbtqUSyVplgfI
      5fKUiqXUWeXqeUo/FJ1SMZ+auG06eWxTS52JrpUTCvlCgWJBjsFRNINi3kkNGrTzBcxrEvfz
      +cI1Y6JSKBYp5FPGxLAol8qpvgo7l6dcKklnJRSVUjGf2j/DtCmVSpKzCyBfKKWGoMOVaTW1
      6rNmIQKXYsrvKhSLzN2AQkoAZeB7t6sA3f6Q4SAlFkiEjKYLOu22RFotxrgrj05KzcvxaIyq
      kjoT9QYjef8KEHuMZyu5ahgwHQ0IfJfeRJ59O90+86m8EgGMpzPiKMXnEHvMV1d18CVe4xGG
      puKmzETt3oDRSA6tgJjReEY3xXEV+UvcAKm6M8BkNELTkMI4ALqDIYOUVFTigNF0Sacjj8ly
      OsLzVnJlOKDb7bGcj1klPXxxwMwNCHxZFpNhnyhw6U7lVXQ0Hl+FN6eslOPpjDjFKRiEEdVG
      i1qiQIAQAjSd1uYmVkp06XbrFg/BADsbdeoteV+OalAuOuzv70ukXLmJZejsbcr71EIhj6pb
      mCkz9kajyuZWSv0X3aGcNzjY35NItdYWim6x05Bn2P2dFrlyM3XFcWybQsqsjGZh66TORMVC
      kQAtNZT7YKtBpZ5SJ0dRKZeK7O8fSCTNdDA0UmtvFgsFhHrlOExiu1WjuSE7J9FMykWHg5Qx
      KdZa6IbBXorPYW9nE6tQk2362lXgX5os6hvboFqpdZeK+Rym5UhWIHgrd/mdx48fk7M0nr44
      WScEUx4/vyCadmjPEpl4l6+5GK9uTwF8d85gMkut/DAZDVh6QWoFgl63QxBFUkKEEAJNU9Dt
      PHpiGVwtpoxnS4KkB5arasgrP5SsOQhBp9N5U9p7nRQFK7qDMWEQkiwMFEchQRhRSzG5BmFE
      rGpUS0nlEAhNRzcsaSYKvSX90TRVTrPxiMXKS6kLJAijGEXTKeeTlRAEiqaiWw5GYivhLecM
      J/NUOY2HA1zPl3kJQbfTIQwj6awUhz7d/pAwDBEJOYVhRIRKLRl6/VbukVxSXYgYQxXoTkly
      QMZRiB9G1FMKhZULNi9PTmkmnW5GESOe0p7FNAvrDshiqch0NLw9Beh1Oihmjq4cExkAACAA
      SURBVIkUyQjtdodSsUA7uQUSAZedAQVbl7ZAi1Gbs/6SYNKWqkJ0Ox1MJ5+6BWq3O5RKRZlX
      5NLuTcgZgl4iKnEy6LOKdbzFSNpuPX96RKla4+lT2XH1+PFjGpUiz6SZaMbj5xdY4VSqCtHv
      dIgMh/k4TU5tSsUil8m+xzGPnzylUrB4cba+PfLnfY7Px7AYMFquf+i9zhszaOqYvOGV3ALF
      Pu3uiIKlSlug+WTIzFeI3QmrYF1OTx4/plErc/Q84YCMXC57E3JGLMl9cHFKz1WY9U5T5V6u
      1jhKkfts4bG5uclIMrnOCZQ89ZzCYLEui0G3R6V5iwkxjc1tSnmHXE528Ozu7WHbV4FUa1B0
      Dg92KRSKKInAtnylRSWnXzldEr1ube1QcGwcRz7o7u3tY9s5TCMR9aFaHOxvUSqVpEyiUq1J
      vVIkn89Le9GDw0M816VUlusCHe7v4Xoh5XJimdaL7G0UUe0CCWshtY0tynmHXE4+fO7s7WHb
      NradlJPKwd4OfiikUiBmoU6zYmE4BZJnViNfIq9fGROSqDZaRL5HMUkTsLmzheuF5BP9UDTj
      KklGt0nuSpvNBpfnr6kmc4KFYHt3C9eLpTIrTrmKFiwIMaUxbjSbDLuX5Iuy3A8ODrCdPHqy
      E1qOw70NypXSu9tj3mJr/wAlvMVD8Go2QegWRkq5j8lkim3baCn76+lsjmVZclm/xYTx3MNz
      51IR3MV0gmra6bymU2zbSsmDFczmSyzLlHgF7hxfqGslO96i026jahrjsZy03+500DSN4SiR
      cBJ7dHpjtMhlOF9fAbz5hEizZAUFxm/lJG2IBe1OF01VGCYqUISrOYPxkshfMHPXB12JQzrj
      hRT7BOCvFnhCQ0kW6FJgNuxh5grSllVRoN3tUSzkJJPmaDwm1h0W02Tyjcqk18YulAgS7c2n
      UzqDCXlHl4wPo/GYuScglA0Wk+kM27ZkSxQx87mLbVqS9W3ca+MJ9fYUoNzcZHj6hJcXshVo
      e2uTn/70JyySN8QoKo1Knj/96V9I+0O7WGOzYjN1I6nKV31ji9Onf8VlomwHwM5mkz/7yU9Z
      JiNFVZ1yzuQnP/tLSQGccp1wfM4vX5xLFs39ew+Yjweps+ijRw9pt9uUS3LYxeHeJhf9Oc3K
      +ipVrG+wuHzG0St5W7K9tcXP/vwnKbV1VL56eI/LdpdKIoXRcErstkoMpj6VRE5wa3MbzRvz
      7EzeKu7t7HDx+lQu7a5ZbG00ePXyxbs7x96iUK5TdTSOnp9I54Ovf/QjRLCSHaGGw0azzunL
      Z1K4y8b2Hvd3G4xmrmQKffDwEQULIiEr7+5mlT/5sz/HS0yMimrimPDnP/8rqZ5rbWufAu7t
      XpNaqjZpqinhq4rCZrOBlXKi1wyTZqNBPmU7s/IDNCW+mh0SPa/XG+hBiu1b1dho1CkU5Q/W
      NC0ajZa0FAPkSjU266TMKuB7Hoomb+2IfPxIk/MBgOVyhW0qeIFYq90EUKg22QzS65puNRuo
      KXKKA48IjTCFl7vyMTSBHwmSG6tKvUkwT8kVVjU2G3WcFF66YdFoNMg7chyOU6zQqgdy9GYc
      4EcKcUryjWHaNBrNVLn7QQhRTCyQbo8IPB9FS6tWbNCq1yimjLFtOdRbm1L1P4AgDG/XDDoY
      z4gCV/ZIxhFuIJiMB9LM4S9nKKrOIKVKQhhe1QBN84WM5y6+O5MrF8Q+XqQwGg6k8iKL2RjD
      0Bik2KP7gxGqEkqzHoBu2WipWQlXOQZpMf8iDrCcQmrfe4MJxF5KaZSYhR8xGw9TvNUC27YQ
      Ka61KAxxcrlUp9twsiD0liljErIKBZORLKfVYoqm6QzGsmd8MBiiazHLlLh/27ZSS7ospiMM
      Q2eY4iX2gphiwU7tu27aaGnSDV0CodMf9CV+4+EAx1QZzlOuoApv+ZK8zUaFcqWOl5IgUshb
      bDQa0lbHKdYwDI1aUZ5h844DKCxSsrHq1RK1WpMg+cGqNoWcQatRlw605cYGqAZVR54ddjYb
      2Plq6mxu6jqKiHGTg64a6Kog9H1pIHK5PJFQWKVcNLHTqlIo1VOSR1QK+RwbzQZRYk+s6haa
      wlX0ZAK5nINAZZkip1a9TKXaSEnaMSjkLFqNupRJVqg00HSdWkFeAba3Whh2CTU506s6unpV
      ZzWZVVd5I/dKitwLjo2iKKll2k3jGrnrBQq2QjPFNL2xvU2ARdmQJ7K8Y93eFmg5G+OGCk7O
      IWeba6fwYb+HlSth2YlKzyKm0+1RrdUwTLkSsWk7lGoG9USg3HwyJMTAcWxsy2D1Xhx8v9cl
      V6xgWeb67SIiotPp0ahVUBMhtr67YLzwKeRzOImbVgLfw8oX2azWcEyd98+0rhdRqVZp1Krr
      5wohUE2bcrlMNZHnsFpMmfsCJ+eQd6y1CtejQQ/DKWDZNoausnqvPT8UVKoV6onANiFiDMuh
      VFFoJgoLLKdjvEjFcWwc21y7VnTQ72IXyldjsianmE6nR61WRU9Uwgg9l+HUpVTMY1nr+7qV
      F1AsV2jWa+v7eRHR6fZT5S7iiFzOpqQXqCSKGQe+h3mN3LudDqVqA8vU1uQuREi7O6RVL6Mk
      ssXiKCSfu8Xq0MPBAMuxeXkiJ44MJzMsNeLlaSJZIg5ZrEK86YDL/vqBdja45KwzYtq/YJSo
      Kz8YjLBtg+OTRFVmYDxboMUer5J1IyMPNxDMhx06ibDc2XiAZjq8Pn0pX5J3fEwUBDxLqUN6
      fPyC0Pd5cXKyTvDHPD0+J5wPeNlb324N+31MO8dJipwG4ymODsevkhWWI14cvyTwVhwnEk5W
      0x4vz3ssRx06k/VlfzAYYNk2L18l+geMJnMMAk6SCSyxz8KPcCd92oP11WsxG4Fucfn6FavE
      yvtWTs+TCSzhCjeA2bAtyb37+hXtsUvv4lSqGnd8fEwcBDxLSUSaLFyEN+csWfkjWODFKqP2
      a/qz9W/m7OUxw+UtngF2D+6jiZjtlKtwHty/TxhGcrqcZnJvb4NYs9luri9nxfrmVfKzU6SU
      CIc+uHcfJU5pD3hw/5AgFGxvJWh6joOtOlhFKSy3vrVPzlBoNjekUIjDe/ewTI2KlKRyxUuI
      iGYzEf5hVbi3UyPQ8uwlwqG39++hE7GzKefpPnjwgCgM2dpMtKdq3D/cIxaCjeZ6aqNdarLd
      LKNaBerF9Rl77/A+qoiuGZN7hFEs89JsDneaCD3HdnPdBl9ubFN2dKr1plSv9f79e6hKLGf9
      GXn2t2oolnwFVWtnj1LeSQ2U+07ush/g4b19ghh2En1XzDK7rRJaoS5dQbV3eIhjmrd4BlAU
      RByTT4lVURRAUcmlWBXg6lYPK1HwSVE1bFMn9X4kRUEIyKc43a5YqdhWGi+BZlipUY5CxOTy
      eanuvWXZKEp6fLlt22hKWh1SBce2EQKEFDV59e/zKWZVhat/L8tJwbZtVEWRDseKor6X5J/G
      S5BPifhU3r6bcrkevB2TlB2zENhOTjJb2tZV/9Ki2pQ3cjcTclc0A1NXUyM+PyR3BVBVLTVp
      HwS6YUvRsapuYmjK7SlAHHo8PT6RQxCA5XTIq4tu6oVnl2fHDMdTesnL34Sg0xuSMxVpeQx9
      l+cvX9FOyQibj9qcdUZ0ezKvl8fPmU/H9JPRoHHIk2cv6Pc60hYoikIm82Xq/cfBYsRKzbNa
      yofPi06XesFgnriqR0QBR89f0k6JwlwtppycXdDuyHZ7dzpAGHncZNkRIbjsDSjamnR3bxR4
      PDs+SZXTctrn1WWPbsqYnL96wXgypZfInCOOePLsOeNBT4oGDdwpy9iQSpUAHB8/ZzEdybdw
      ipjecISmCKKE4kTh9XKf9k55PZjLYywEj58cESwGUklKEcf0RxMUkWan+htgMpmQz1/N+r7v
      vyuNF4YhQRBclQ0UAj8MMY2rmWo+n7+LrozDgFjV3x3E3tGE4OLygnyhRPlN3P/7773Py/M8
      VFXFMIyrW0LC+J2n9f13wiBA1b/LMb6uvfdpYeDT7nSpNZrkbIvFYvHGNKuwmg3pz0M2mg0M
      XV1rr315geXkqVTKKB/gJYRguVy+kaHA98N35Q/ff2c+7jP1oNWooWvv8xJcXlzg5IuUy6UP
      8gqCgDiOsSzrg3KKwgBU/d0sfxM5eYsJvcmKVrOOaeg3k7uIOb+4oFiqUHpj0/9O7h7tTi9V
      7sQhfqy+ixK+Sf+II15fXH56BRgMBnJtTCCKIsIwvBJ2AovF4p3SfAqa7/uoqoqeEhrxqXm5
      rott26nL9se0J4RgtVqlyvBT9z0MQ+I4lut33gKvT93ecrnEcdITgv467X1yM6hpmqmBXWEY
      4vt+Ki2KotTnH0tTVRVVVVMH9lPziuMYx3FQUwLYP7Y9IcRnkZPv+8RxnFpw9lPz+lLlfiMF
      CL0l570JB7tbDHttBjMPWw3R7DyT8ZztreYHy6BnyPCl4kYKoFs5TO3qUFooFln4EQomwWqK
      v1rx+vUZERrlgvNuq5NEFEXEcXwtLe35x9KiKEII8Vl4xXH87rd9ivbEm4vnPpecPueYfOr2
      PoXcb6QAvjuj3e5gOHkWww6BaqFHC4x8lYMDnfl0RBRf3cmqaVrq3vst8zTah975GFoYhtee
      AT41L1VVr8prpCzFH9Ne/EaOn6PvcRyjKMpn4XUb7X0Kud9IAUynyG//9t8Frm4ESaKScj9v
      hgw/BNz6FUkZMnzJyBQgw51GpgAZ7jQyBchwp5EpQIY7jUwBMtxp3MgMKoQgCK6CsuIoIhJX
      UYyKZhCFAYZhoGnpxVgzZPiScSMFiHyXk9cdHj24x2I2Zrz0cWdjBBHtzpL797bY3t5BVa/i
      zdO8c0KID9LSnn8s7YfM64fc9+/j9SX2/UYKoGoGqojw/ADLsvBGMzTNQNEc7h/kGQ/7CM1i
      d7PxrmNpjN//b9qPua7Df13a2+efk9cPue8/ZDn9Tdu7kQLEcUQ+n8cPQpQopJAvUHQMNCuP
      pggajQaalXsXhZm2HRJCoChKKu26dz6W9qF+3BavNJf8x7QXx/Fn63v0pgzL55LTlyj3mwXD
      mTZb764Yckje2GMYcoGjDBl+CMisQBnuNDIFyHCnkSlAhjuNTAEy3GlkCpDhTiNTgAx3GjdO
      ij8+7/Lo/iHnpy8ZuyGm8FFMk+FgyeHhNq1Eib4MGX4IuHFSfPFNeb5I0SnYoKg5RORRzht0
      Li8IhcZGvfzFJGBnSfHfT8uS4v8aSfGj0QjDyVMt5pisYkyxQi9t0GhelfAzCrksKf4TtJcl
      xd+8vc+aFP/tt9+++zt5ic51VbgyZPjSkR2CM9xpZAqQ4U4jU4AMdxqZAmS408gUIMOdRqYA
      Ge40buYHWE55evyaR99+w7j9mkWookVLVOuqPPrOdotKRb68LEOGLx03UoDBcMrDwzqDSQBx
      TLfTYWd7h8ifE/krzs9fE6FRKea+GK9j5gn+flrmCb6hAtSrRZ6+PGf3sAiOTbO1SeTNMfI1
      9isai+kIAZkn+BO0l3mCb97e5/ME58v8+MdvboAp5KisX06ebX8y/GCRHYIz3GlkCpDhTiNT
      gAx3GpkCZLjTyBQgw51GpgAZ7jRuVhs09Hh5esm9e4csxn3GboStBmhOidlkSrNRu/Zm7gwZ
      vmTcSAF67R6NikFv6uMOh0zcgGq5TDh/Tbe/wl3O2Nm/T87SvxivY+YJ/n5a5gm+oQLkcyYv
      zi7YOqygALEAbzFBz1d59NBgOOwzm80p5uqZJ/hv2F7mCb55e5/NE1yotfitWuvqj/IjDhL0
      WiMriZLhh4nsEJzhTiNTgAx3GpkCZLjTyBQgw51GpgAZ7jQyBchwp3HDi7JjptM55XKJ+WzC
      KhDkLQ3VcPA9F8dxrrW7ZsjwJeNGX+2oc8l4MSfUcziqSrd7jqmpxLHHZcfl4KDFzs4+mnrl
      XEnzzsVxfO0Fxte987G0tw6ez8HrQ5cyf2zfv4/2qfv+ucbkU7f3Kb6nG2+B4igmCAI0EVFv
      biGEQDNLPLq/yWwy5rLbB0BRlJs2eWv43H34lPwURfkiZPil41PJ6EYrQHVjG7NQwbINVAxa
      BZ1KzkA1LFTlyhOsGRaqqqIoyrWXF3+Ilvb8Y2lvP6IfIq+3q9fn6vuHLpv+lLy+VLmnKsDl
      6QtOe3P+3u/8FuobZoXCegl0y/ku+lPTnFRmGTJ86UhVk8uLS9rHz3hx3v3c/cmQ4bMiVQGq
      1QJCL3G40/rc/cmQ4bMiVQE0q4AWe4jP3ZsMGT4zUhVgcHFOb9znpz/75efuT4YMnxWph+Af
      /87fp3Xva5r16ufuT4YMnxXSCjB6/YJ/+a//FYGwMU0TuPIEj8ZjAKLQZzSZspxPWfkB0+mU
      MAw+b68zZPhEkFaAKFawLZPHP/8Ldrb/CQYw7FwyWy6IjQKjs2eYxRpDd04Ura48wftNtnf3
      0VXli/EEv//f2+SVeYJvRvtS25MUwCkW0BUDo2C9e6Yq4AfhlSdY02i321QLzpUn+EGFwWBA
      uztgb6t5rYfuQ567T037kDf1c/fjY975ofb9c7f3IZpYjRHueP25U0FR1j95SQFWszG/OnrK
      Rmvv3bNKaxuzUMWyDNTiQzb8EE0RqLqJqkC90UTVzQ965z7k4bzu+cfSPtSPL53X32Y5fc6+
      hz//X/D/5L9fe27+3n+B8hv/6Yc9wflqk9/85hHjqb/WYD7/nec356y/pmlaauczZPjSIZ8B
      whDTzrGZuyqBkiHD32akrgB/73ezMicZ7gayjLAMdxqZAmS408gUIMOdRqYAGe40bpQRNht0
      eHF2wYNvfovRxTGx7uDNRiimTr+35P6DXTZbWeh0hh8ebqQA7srnYLfJchVhmSYX/SG1agUR
      hzSrgu7lBWGsstWsfjGluLPy6N9P+9tcHj0WKeETIv648uiNzU1Oz9o0WwFxLkdrw8FSAox8
      A1OD1WKKmS9lF2V/gvay8ug3b+9DcleVlFxhRf248uiqZnB4+CY0IpejmKA7TpYTnOGHiewQ
      nOFOI1OADHcamQJkuNPIFCDDnUamABnuNDIFyHCncSMzqDcfc/TyNY++/Q1M4fHkxRk5XaBa
      NpPRkp3dDWrVrIJEhh8G4vEZInCBGyrAcDzn0b0mo2nA7PIp00VAcXubOFxAHHBx/ppIaNTK
      +S/G65h5gr+fdlc9we6/+G+IL/8CuKknuF7m6fE5u4dFave/Ij8cE/tLrHydg4rKYjZG09TM
      E/wJ2ss8wTdv72M9we8n099IAQynyG/8xtfv/t7ZXvf8lsrlmzSTIcMXh+wQnOFOI1OADHca
      mQJkuNPIFCDDnUamABnuNDIFyHCnceOLsvv9Ic1mg+V8ghsoWGqEauVZLRcUinlMw7ztvmbI
      8MlxIwUYtC/wAo/+vILp+5yddynlHaLwNRdtl73dGjt79zA05Z1nNIm3Xrs02nXPP5b21jv4
      uXi9Lf3+Kdp7W7L8c/b9c/H6nHJPey7E1Tvqe6QbKYCuqUyHC/SSjxIEhGFI4LlodplvvqrR
      7ffp9L4rj/6hu1u/hMrBXzKvz1kdWlVVhBA/2OrQb++eTqN98Pl7pBspQLm5hVNpoGsaIt/k
      79SaV/cHaxoKUGu2UFX9HYPrmL//35t0+GNp39ePL5nX5+z7TfrxJbcnFj3Cp/9i/XlxA2Xr
      H6W2BW9k+96TGymAoihYb65LIqUU+nXamyHDbSKenOP9/n+39kzb+R24VgFkZF9uhjuNTAEy
      3GncaAuUIcNtI3j+fyMmp2vP9If/Nqi3G2mcKUCGLwLhL/83wuP/Z+2ZWr0HzX/jVvlmW6AM
      dxrZCnDHIVYTlv/iv157pjhV+If//NfUo8+LGynAtN/m+PUF97/5u4TTLqftPrYqUAyNXm/J
      w4d7bG5s3HZfM9wCROgRvfzXa8+Uwib8w19Thz4zbqQAKy9gb7uJ60VYqsbe3h7z6ZQ4Dtls
      qnTbFwSxynar9sUkYGdJ8d9Pu67fcH0f/ia8Vs/+L4K//F/Xnuv3/ynRvX8PLSV0IYrlcubr
      fU8PJfm+pHj1PV43UoDm1hZn523qhQDXDRjPVtTyBnq+hakKVosZZqGSJcV/gvY+d1K8UFXk
      z0j53vbin/+PhGd/uvbc/N3/HK389bV9VxcdOP2jdU71e1Ki+rt3VLmc+Vp7quyUVRTl0yfF
      K6rO/t4uAPlcjkaCbtv2TZrJ8LcIUfcJ0cvfX3smvv73ofz1NW98mcgOwRm+eMz/h38TEa7W
      H/5n/+cnaTtTgDuCxf/0HxMPj9eeGf/J/wyq9cl5uf/HP0espu/+Vktb8Pf/y49uT4QrSCrA
      J0KmAHcFoSd/RCkHz0+B6PRPEMvBd2zqD26Fz6dA5gjLcKeRKUCGO41MATLcadzMETYb8fTl
      a7769scE0z7LSMWd9FBNm/HYZXd3g3qtdtt9zfCZETz+31n9y/927Znx7X8A/+C/+jX16NPj
      Rgowmix4dL/FaBawVamy6PYxnDJRuEQj5PLinAiNermQeYL/hu3dlidYIS15PCJWrvcEx1EA
      kbf+TuQTRVGq5zaOr0qWJ91TQlzvdRaxuLa9t55g2d0FcRR/Rk9ws8rRi9fsHRYZDSYMxnOq
      OQ07X6dabbKcjTF0PfMEf4L2bssTrKSogKpq8AFPcHoyuuxNfb897U2euFh7h+vbU5Xv9QSn
      QdXUz+cJ1q08v/Htj67+yOWoNtfppVLpJs1kyPDFITsEZ7jTyBQgw51GpgAZ7jQyBchwp/HJ
      Y4FWq+/iTYQQ707cb810b+s8vk9bLpdr7wDX0t4/wV9H830fVVXxPO/Webmue2Vae2Ph+BCv
      m7QnhGC1Wr3r26fqu3747yJaQwSCt7XRgkgnjgV8/c+u3ntLswpEyyWRtUX49T9DvLHpKCgE
      jW8JlkuM1u8SU1hrLzJbeMsl2sP/EPzlO5qSqxEul0TO/rv23tQJJKz+GH+5xNj6PWJzY629
      WKuyWi7RfvQfQRSu01yPiBxhou9KeZtwuSQsfUX0jtfVO2HpIf5yib77TxGlH139LvGJMZ1O
      3/1/HMfv/j8IArFYLFJpyXc+RLsJL9d1hed5n4XXbDYTURR9Ml5RFInZbPZZ+u55nnBd97Pw
      +nXK/UPt3doW6PL1KUdPX5Di+uD4+VNOzs4lSugveXr0hE5/LNEm/TZHT5+yWMnOnvPTlzx7
      /jKFV8zzoyNOz9sSxV9Mefr0iN5oIdH6nQueHD3DC+UWT1++4MXLVylupYinjx9zftmVKO5k
      wNGzI4ZTT6J1Ls548uRZii1ecPLiGS9fvZZ/VeTx9MkTLrtDiTYbdjl6+pTp0pdoF2evePrs
      OFVOx8+e8ursQqIEqwVPj47oDqYSbdS75MnRU5Z+ckyu5H6WKvcJT58e0R+nyL19JXc/uk7u
      px8l98FUDqVun5/x5Oj57Z0BfD9ACTx6o0mCEhOFsJxOmC/XOxYFPqpuMeh08MP1T2Ll+piG
      SrvdlYQQBBGx5zKczBKUiChSmI+HLN31j8/3PAzHondxSZjwUPorH4OYTn8o8QrDCH+5YDJL
      DmBAFOtMhn1cL1jv+2KFU3Ron51LH5/nh+hRQHcoK30YxrjzKbOFu/Y8jgJQDEa9Ll6w/vF5
      Sw/bMWifdyReQRCCv6I/Tn7MMWEIi+lYGpMw8NBMk367TZD4MD3Xx9IVOp1+Qk4hUaQwGw9Z
      rtYV0V95GI5N91yWu+f5GES0r5X7PF3u0ffI/fRCkoXvB2ihf3sKoKgGTqGIN0kqgMCyLYqF
      AsPuYJ0Sx5i6RqHgMJ4kBx001UInZP1ngqqZ5ApFlqNRghLj5K549TvrtDiM0GKVQsFknlhV
      YqFi2DnEaikJTjdsCoUi08EgQRHk8ybFQoHe5frHHAUReFAo6MhzkYZVKBJMkx+lwLRsioUC
      o14/QYqxbYNCIcegP1/nFQqUWMcyhCSnt2OyGieVTWA7b8dkfVURUYyhahQKNpPZeu/jWEHT
      bdTIZ12C4ju5t9fbi8IILVau5O4l3hIqhp1HuEtJAa6Xe0y+kC730I/AU9LlrujYheLtKYBj
      G4RxiCrdHKOiqhDGEXY+t0bRTJs4ioiiGMcx1mi5okMUhwgUKTbEMjXCOESzktlNGiAI44hc
      cZ2Xmcu942UZ62LI5S2iOARVI+mgNwyFMA4xHCdB0RFxRBhHFMrrNOdNjFQUC8nqkHNMwjhE
      kcIYFDRNIYwjrNx63xXNRERXcTf5wvpvzpVyRHFILJDkZFv61ZiYKWOiXMnJKazz0u3vxsS2
      1/uYK7wZE0VNfEjXy93K57+Tu77eww/KXb9O7sZ7cl/nlSsXiOKQKI4xEm+9lfutKcBkukBE
      gt2dzQQlZvX/t3O2PYoiQQB+FHRUVFQEFZiZ3cv9/5+0ty/zjjqiIAo0fR9mNrfduJfNbSa5
      ZKyvFbqap6jq6u4KhwIpmnjuWNEUh+QF9MBh0FMdG69iKiHxP1zWHLtLMqSQBAv930QleV4i
      RZupo7ZrZNsYISrs2YJuS3Xs5nlHJSThVVADlKZHpJAsZlo/CDlFWSFFl8m4r84vWlNVFd7H
      a/RPbxMnSCG5DH1NI8myHClg5jmKpiozSlFhtm3sgfpBxMsNlZDMP17Vgm2727/4xD/hk2OJ
      FCbudKS+Vfrik97Ipd9RZx+vX3wSXIeaT37OfR+/cB/Nfbot9akfuesBkO5/hbulvm+0phIS
      748PtQD4zv3NAsAZ9dgXBd9u7zWNgdksqZqSp6ValnT6Yw5ZQr5fs8vU2tH1pyT7PXefv9U2
      jHa/zUEIbu8fNU2bRnUEsyRaqyXG0HXZ7xN2Tw9khTqi541IswM3X29qJZDVbVJIyf1jpGm6
      iHxPs52z0jZ4zpXPLkmIPn2plSWuMyA95ny90TegDS5aEtGAh0hd9s32gPyQUImEOFEXdzec
      kaQJj399Qd+aju0uWVFyc6dvTk2MRoE0BE8rtYzo2hOyLOGwXZIc1Nm7VQir9wAAAmVJREFU
      C4ck23P35ZvGqQ2v3Jcad9t74b59vCcrT3A/HLj5elsrgaxOk0JyknuZpxjtnFWscp9e++yS
      HdGnzye490mPb7gHiNY7LEou+gNNU3EsDdLNiuFQ1eVpTH/iEkUbrI4as8v7Jzx3yEEYtUk/
      bzPMMqNbs1VS0iVeRthDNSun6yVOMCNap3RMdcSnpzWTQRvZ6tQy0TYtENkOa6A3AOZgDlk+
      PDIaqktxfHdH+KfPMs5rWfkx2jA0JS2rr2kk+6PksHtmqNkqi5S25RA9LRlY6kq5un9gHk7Z
      Heol0Oo5oSPzEz4R5KLF7rnuk8PuGXvqES239C7U2UcPEe6kz5GWxqlEvHIfatyTVcQ0mBOt
      93SME9ytFrJd/83Odl8gsph+jfuRhmkTneC+uX3lvilOcI8ZmtXbBYDvz+iOHYxaz3aTqWMz
      84Na/3rbsumaBmE4p9ROHLwgoNlsMx7U/2Iwn7sMHY9GzZaJM7FYhCFloeYAa+JiiAZhMEVo
      veiLYEGr08dq1fHMPIeJN0cKPb+2GY86hFeX5NrJjO0HiLQiXIxqmS0I5lzYY1q1/vUGnjvG
      nfsIzZbZshj0WoSXAYWWRad+AKWBN+nVbC0WHtZkesInBlNnyNwPapw6gzEXRpMw9BCVOuIs
      8DHMDqOeXmCYOONX7pqP+45HU0AYOHXu/oJWd4Bl/oz7gqrG/eIf7tpx7Cj4zt3+CffJ216E
      /Sj6RdivPPNfdfpF2Fva0i9kfnc8/SLsd8f7N51+EfaWtv6v3M+9QGd513IOgLO8azkHwFne
      tZwD4CzvWs4BcJZ3LX8DtnY+FSIQI8YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='119' name='Gap-sce uns-sce1' width='192'>
      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
      xB8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GurobiRun-sce' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='InitialGap-sce' width='192'>
      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
      hf0iZJAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='OF-sce mipstart1' width='192'>
      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
      w6nzoYja/w8CoC6Yj5wxkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      I9/z4P8HGZ5jya5cpgUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time1Incumbent-sce' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9SYweSbLn94s94tvX3Bcmyaruru7X3e/NBo1G0kAQBAECJA0gSJBuuugm
      AboNJOigsy66CtBB0FyFuWjBQDMajGb6zVumX/fr111FJslcSCYzv31fYncdkmRVhAdZVawk
      u6oy/pciwuozt3R3czc3NzNXhBCCHDluKdTftwA5cvw+kStAjluNXAFuEZ6dPOLT45O3/08i
      YjyZJT49fvwYATx5+Dsenz0HYDnuM5q5AMymUyaTMXHKmI7cKf/qLx/w4vlziQYwHk+YTqc8
      f/7sXf+kbwz999Zyjg+O6XRCaJT4k1/8cwxN4dfHV/zgfhvdLNE7fUB99w52uY62XjJdLvj4
      Z3+DvYbNYh2gAJPJmEJV4//7Z/8UJfARxQY7G1V+96vfsnfvY5T4IZFqsBr2qO98RCGacNmZ
      ES8LXF0+ZxlGqJ6PZcLC3KKqzPn05ClbFYsXnQGL4RMC3+HoZ3+bHx42P0if5DvALUKpXGY2
      m6IoCqpu8fOf/4RaY5OiKSjWmggRc3TnAEVRUVBQgP6Lp2zsHgBQqVSYTqYoKJhOCUeHp8+v
      uPfRPVSF618oCpt7B5hqxMqPKKkhwioQBgHT6QQUBUVRuHv3LlaxwsH2JnuH96kUTLYPDjjc
      20P44QfrE+WbeoGEECiKcmO0V+K8ifb75vdtautDyN696tDe2kT9hvyunp+hOHW2WrVvVd9+
      4x1gsVikuRKGUSYtjiLil8ZgmhaG11rvuu7rf7/CarXKbiuOCKP4rfzeRvs6soe+ix9mt/VK
      Ps/zCILgq8ku4rfK/mrA39RWluyr9TqTJuKI6Ev6PQgCPM+TaJvbWywzZc/up1fyrVYr4jh+
      /X17/4hWrZQte+Sz8rLH5BU/IcTrf6dl/zrjGPguwRfG8eZNIBHjh9lbWBQGRG/YcHzff4e2
      oteT8uvwezNN4Kcm8HtDHOG/HKQ0giDgJi9n4ih8rWxpvFM/iRg/yJb9bXinMX4Xfm+Zg2nc
      qAJEocfl5VVm56zmU7qDIVnzfzToMZktZEK45p//4o950RlIpNl0SuivWXqpP1QIxpMJi+VS
      +o0QMePpNJMWugvma59FapUB6F6c84s/+XO8UBb+s9/8K37zIMOzEnn8i1/8MRdXPYm0mE/x
      fZelm1K2l7Ivl4vMfvrTP/kFp88upO+xN+ef/Ys/pjuYSDR3OaPT62d7YYZ9RtO59F1EAePZ
      MrOfVosZruuydOXJ95e//FMePHkq8wvWjBdeJr9hr8Mf/4t/ziKQBXx6/Bv+5a8fyPziiPF0
      lsnPX89ZuD6L1VqidZ+f8os//Vf40edt3ZwCiJhnT47pTpbompYghf6a3/7uM8IY1JQ5tpiN
      efjoBEWVRRGKyvbWNqVSQaJ1ri54djmgYKUcWXHI0/NzFitX+o23WnB+dk7WpjEedjl/doFh
      WEkZhMB0iuztbKGlRBRCUG9u0GpUZdlR2NnaolQqSrRe55JnL3o4lpH6UcSzp+fMFmvSZqsQ
      gu3NLcqVityWqrGzvUOxYCe+x6HHX/3Vp3gRaKmOXy2mPDh+kmkfr+YTzs/PEYom0QbdS56+
      6GKbSdmFELTbm9RrsnyLyZDzp09RNVOi6brJ7v4+ppaUQwhBsd5mp1WTfuOu5pyfnxMJWfbx
      oMvTZy8wjWRb1+NYZm97M9EXN6cAikprc5PdrTazlN2lGzY7e3uUTKRVtFiqsre/R+DJGvvg
      wTGu77O90ZJolVKJJw//iv48abeiGRSVJX/22yfSb+xCiasXz7m86sj8KhVOnzym2x8mvruz
      Ps8vu+jFOgUzOSGenT1hNJmytb0r8Xv48JilF7Cz2ZZo5VKJJ8e/ozdN7TaqTlH1+OXvHhOn
      lPTk8UMG8zUH25tJgoj57MEjwjhio1lPstNMtvf3aBZUFl5yV3aKZfb294iCVP8BxVKZi+dP
      M/upXC5z+uhTuuPkGJ+fPGIwXbC7sy3/plrh6dkZV51ukuBNefK8Q6gWqDnJhezy+RmjQZ/m
      9r7EzymUuLx49mb5nhzTHY4T35eTLhdXXcxyC9v4fNrfqAnk+z6PHx1j2U6KInCXU04v+ph6
      UmujMGDYu2K+lm3vWr1OwTaZLlITRUTM50vu/OBnbNeSbXnLGZ5W5V//o08kfqNBj4ODOxzd
      uZPiJ+gPp3x07x77O8kJppkO1WqVyFtJdnS5UqVcLjObJjv7lexFx2Q6T23TImI2W3D08U/Y
      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
    </thumbnail>
    <thumbnail height='192' name='TotalCost-sce' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='TotalCost-sce unsSce' width='192'>
      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
      nwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TotalCost-sce unsSce (2)' width='192'>
      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
      JhJAyGv/D+YCNhSaC+6zAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TotalCost-sce unsSce (3)' width='192'>
      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
      xGQMTOCbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TotalTime-sce' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='TotalTime-unsSce1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cnt sln-sce' width='192'>
      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
      CSM7wdNfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='test 1 mip start' width='192'>
      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
      HRe8W7vP5PEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='totalTime-sce mipstart1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd48l15mfn4o3576dewI5Q1IURRvYdcIC9hrG7j/7DRb7LfwN/IUWsCGs
      YVGytdKKlCVRYS2G6ZxvjpWj/+jpnlt9O9ye6h718tYDEOC8fe5bp86v3pNPlRCGYUhCwpwi
      /qkzkJDwpyQJgIS5JgmAhLsTBnz1+99y1OjenMx3GGlmxLa1tUUIbH39z+wcnAJgDNr0NRuA
      8VhDG43ww2lfv/nt7+mdHmP609caDkeMtTGnJ0cEd+jUy7MnTUh4TejRbLZRcnl+9vNNBHfM
      0JHJyA61pVX++OWXrH/4MevVNKcnBpan82d/8Z8oKTYjw0MAms0m9bU0//h//jei7xHmq3xv
      JcP/+ulv+eij7yMoHpYnEOp9UuU13luQ+PrrbURLx2l0GAwGLOYUfLXAoHVEZXmdzT/8hkp9
      CWVzj0IqZDAyKdaW+Xd/9um1t5IEQMLdCQXKtRKnx8f4pBBDgdXlBQQxZNw+QE6pDCz4i/Vl
      dne+whccPB8O9rZ49uJjACrVCs3TExzPJyWISIHN1l6P50/XCHwfP3RwPKiUFwCX4+aIjZU8
      nYFNqgS9XpeyUsPHYXFlDT8IefbsKaGaJ5+WcQNYShW5rTEQklmghHfF0eEha+vrCIIQy0+v
      dUxHD/jg+UbsPL2TMYBhGDdG4ng8nsmPY1kEN/xd0zRmiWffdXC9KzqSr/E8D9M0r/37hCcs
      y7kxxWz3FmJZ9j34Acuy7sWPbVn3oplrWZyX9PrGxtTDb5omnufd6mdS++ri2tTDP2t+fNfB
      9d88RQ/aBQqCgDAMCW4ZlczaCIVBcKMoM/sJQ8JbKqFZfd3XvQXBTaH9L9vPTbXsn0T7ibQP
      2gIY2oiDgwMGo9mi8yY8x8B0wnvIsMdwaCBL8T11uwNSKeUe/PRIpdTYfobdLnIqFduPMRwQ
      SPHrxjCw0QwvtmaurWO696P9YGhGtH/QAMgXS7iWyXg0iuXHNsYcHjdod2+edruNwLPZ3z+i
      3e3g32WubIqQ44N9Oq0WlndzTXmbn+bpMb1uh5F+c9flNvqdFu1uj14/Xlnroz6Ndod2pxfL
      j2fr7B+exNbMNkYcnTRpd+Pl51z7TrfNZOP2wGMAgYViiacfviTOsEcb9PEFGUsfcX3P/XYc
      Q0O3PITAwXRu73dej0evNyKTFukP9Bh+Qvq9PplMml5/EMMP9Hs90tkMg168B2XY7yOl0miD
      wa0zKDdhDPrYgYRjasQpaW0wwBcULC2e9rY+Rrd98KPaP2gANE4amJ7D8e5BrMLMV2qUchlS
      ohSrEARRRBSgVqvh+3FqbgFFkSjU6ghuHHlBVVXUTJ50zC6ZoqoIkkohm47lR5IVQgSqxUIs
      zURJhiBgsVKJFQCiJAMhC+XSjRMgt/oRJfBsPERE8U11/KABIIoBY8snl47Xv/UdC0HJUCwW
      YrUkoihRrdUZDwfEcoRAsVzFNca3DqZv85PJFVAEH9uNE9qgpNKUcgpj4+bZpNuQZIV6tchg
      pMX0I1Gv1xn0+7GKWpJl6rUag8EwVn7CECq1OrVKMTJx8aABsLi8QjEj0hvG6SZAtlRDdEac
      dvtIMfwo2SI52WegmaSUOIM8iXqtQLPRJZ2LU+MKLC0v0Go0kWIOXpdXlum2WghSnBKChaVl
      tEEPL4xXR2TKdURXQ/f9WFONxdoinjHECsJY2qeLFQppiUajhSS9oxYAwLLdyAXf2o9lI8nx
      ZyYcx0YQ4/sJfJcAMVY3AYAwxPNvniqcFdv1kMR7KGvbQZbFeI0kZ2sJkhx/lsy2LSQ5XmAD
      uI41pf2Db4UQBCgWS7H9iKJArliM/aBIooiayaLGLFBRlBAkhXzMPjeCgCCKFAq5eH4AQRAo
      FIux/YgC5O/BjySKZAuFWDX3WX5EcoX42ouiiJqNav9OWoB+px3bz1gzMQb9WAMq4GxK1rMY
      mzev4N6GORqgpmWa7XjTjqHnEIQirWbcMgpxHJ9uqxXTD+imw6jbjd26DUc69miIG9PPWD/T
      Pt4oCcbDMbgWmvUmRw/cAggsV6qklldiN6dPn64xMATiNqhrz57C8YBKLl6fu7i0wdg9ZnW1
      EsuPpOaoVsqsrK3F8gMSi7UqpdXVmH5gbbFOkK/Erh3fe/mE04ZF3CW+p09WGZpi7Id1/flT
      jo8HlLNvcvSgLUCnecLIcWgen8SqTfRhl6Nmn36vHWsqzLN0tneP0fUBVqxZl4CdrU1sS2cQ
      awEr5HB/F8e1aXX7MfxA4+QQ3XVpnsZrAfqdBl3NpNNoxNLM1vrsHLQZjnqxNNMHHY5aA/q9
      TkztNbb3zrSfnHF70ADwXA9BlHDteN0Nz3UJgcDzYokS+B6+HyAQxlwHCHAdD0kScO14nTLX
      cRFFEceJ11Hw3HM/ccvaA0HAc5xYZe053tnBFN+L9+C63mvt3Vj58T3/teYh3ruaBlXTaSRJ
      RBvHm1OWFRVVkXHGGnHkFSSZdFol9Bx0O84DJ5DJZpBVkUEv3j6nTCaDJMuMh/HGEql0BkmS
      0GLuu1JTKRRZwhhr8RaeFIW0KuNqGnFWJiRVJaXI2JoWaywhSBLpVApcG8N+R2MASVZZrtVJ
      p+LNlCiqQrVWpJhKxcqwLMuUygvUy0X8WFOqEsVymWIxQ78XR16BTL5AqVggnYq30KOmMtQW
      S7HLWpJVFpdrZFLpWLWjmlIoVRYpqalY4zZFUaguFMmnUvHWgBSZUrlGvVwgmFgDetAWoFQu
      8fk//JA/7BzE8qNmCux//Sv+8Re/i9UMCnKKcXuXzz77GWasTWyAMeJHP/6Mzjjeyms+K/HD
      //4PnLTibRorlfP85H/8kFeHx/HyUyzx23/8Mb/5ajNWWUtqjvbBP/PZj7+I1ZKksgV2//h/
      +dnnv4+pfZpxe5cfXdL+wdcBnn/8AQMn/mJIfWUDWxrFngUqVxdZfWJTzMSbmyhUKyxUllha
      irfGIckZnj1fpbqwEMsPSLz30XMCtRzTD2y8eJ+MFn9xrlJb5emHMnE3aC+uPMGR42tfqi6y
      9sSmmHnj6cHXAdrdEaNOAzNWnxtarQ6eNqSnGbH8dBpNZCm89Y0GtzFsNUmXsmx+ux9vsOjq
      WI7Iwc5OrJoSPPoDk/bJIfYNp91mod3pY/TbaGa81q3ZbIGp0465r6jVPtO+fx/ai0FE+wdv
      AZ6tbaDWF8iI8WLt5cv3GJsClWwmlp+nH7yk2RyxuFSN5aey8T5Oo8lH7y/G8iOrRdbXl6kv
      1mOulcg8fbJOoV5HjVnWz588hVyRfMzDPh9+7wXtjsNCPhvLz4sX76HZIuWY2j/74CXN5pjF
      pTdrNw+8DtBAc33G3d7Znoi3RBt0OG6P8EwdP8ZeF9fU2Nk/QRYD9FjTlz5721uoWZVeZxzj
      wQ05PthDkBV63Xi7JpsnxziBwLDbi3XovN9u0jdsjOGAMIYfa9Rj96iL4Ji4MQJS63c46Yzw
      DC2m9uPX2nsR7R80AEzLoVTMcBJzccaxLEqlIqcnp7GWw33XJpsv0m01Ym4/DhDlLNa4yzjm
      QpgfSoiBTbcfb/rSdn2yaYlmzMG0admUSzlOT5qxunauZVIqlzk5Pol3kGVC+zhdRN91yOVL
      dJpNnIlB8IMGwPqTJ9iWxdp6vGX+6vIaku+wtLEWa1k9XaxRSp8dZCnF2gqhsLJcJhRzrKzE
      2QohsvFkBccJWFtfjuEHNp5sYFs2a+vxtkKsbmzg2TYr62uxHo7C4ipq6LL4ZC3WILi2cq79
      eqxBcLpYo5AWKS7UKb6rrRCCAK7n49zyqo4ZPOF5HrYdb1AG4HsetmPf+jaH2wj9ANexcS6/
      w+/OjkI8z8WKuVp+XtZW7DIScD0P246vmX8P93V/+Xmtve0QvKu3QjiWwd7+EZoe70BM4Lts
      be1ianrMmZKA7W+3sG0r9kzJ4eYmVuiha/GEGXRPaHU1dD3eDIepDzg8aqFr8cracyx2dw8w
      ND1WFygMfV692sHWtFhdoMB32N7axdTvSXvHxHHfeLq3N8MZhnHlC46CIEC8ZRBkmiaZzM0j
      /HfpJwgCXNcldcMprTAIQLz90MjteQo5c3Wzp8dWRvflx7ZtZFlGuuEk20Pm596mQT3Poxjj
      EEWc354jCAL5fD72q/c8z8NxHLLZeNN359zHvX1X/RiGgaqqyPdw2u9t8pO8Hj1hrkkCIGGu
      SQIgYa5JAiBhrkkCIGGuSQIgYa5JAiBhrkkCIGGuSQIgYa5JAiBhrkkCIGGuSQIgYa5JAiBh
      rplpC17gOWztHbKxXGP74JhSLs9QtylmJexA5uV7Tx86nwkJD8JMASDKKoVcFkVNUSqUCcKA
      pWKaQSiSlgKC4Oy/WT54fBVxfjuJ7/v4ftyXaL/xcx95uq97+y77uQ/N3jY/MwWA71p0O20c
      28KwPRarRXqaTTkDVpBGFEVEUXzrPd1xfjuJJElIkhT7PMC5r/vI033d23fZz32U9dvmZ6Zf
      SEqaT37wacRWq9/5WgkJj45kEJww1yQBkDDXJAGQMNckAZAw1yQBkDDXJAGQMNckAZAw1yQB
      kDDXJAGQMNckAZAw1yQBkDDXJAGQMNckAZAw1yQBkDDXzLaBOgxxPR9ZFnEcD0WR8LwASYQA
      EUWO8xH7hIQ/HbMdifRdNrf3WCplOekNUWUV13VRUxJ+KPHRy/cBiPOxmfv4UE0Yhvfq554+
      npP4mcHPfel2V2YKAEGSyWfTOJ5PsZBF0z3y6RSOKKDy5gaC4O2+4nR+pDIu53mIeyIs7v1M
      cl/39l33E9fX2/qY8VC8Sxj45Gp1RMtibTnPQLPIqSIOMqIoIgjCjd95uonzY3FxOfdzHwFw
      33lK/NzsJ66vt83PjEciUzx99hyAYiEPwEI1DUC8j9cnJPxpSWaBEuaaJAAS5pokABLmmiQA
      EuaaJAAS5pokABLmmiQAEuaaJAAS5pokABLmmiQAEuaaJAAS5pokABLmmiQAEuaaJAAS5po7
      fVPGsXQOTzssL5TpjkxKaRErVFhaqDxU/hISHpQrA6Bx8C07hzqf/vmn5FNvkmiDHoNhH88L
      KKgCLU1ExSColpKP5F3DY/wo3WPz8+g+kuf7Hnu7e3z659HvggVBiBCGiHh0Rh65jIgRKslH
      8m7gMX6U7rH5eXQfyTN0h5WNJUQx+iAtrD5hYfXJ2+UwIeERcuUg2LYsMtksYvyKNCHhUXNF
      APgEQcDh3iFucD+vvUhIeKxMdYHG3S6llWf82cIaaSmZJU34bjP1hI9bDb7e3qbZbOPd04uP
      EhIeK1MtwOL7H/JfXsqIgjA1CE5I+K4xFQCebfDr3/0zni/yb//iP5BVkvd+Jnx3meoCpQsV
      Kln46ndfYzjxFygSEh4zV4xyA2w3xb/59z9ATsbACd9xrnjEQ/AtjnsahZTy7nOUkPAOuSIA
      JGRFJisG9E333ecoIeEdMjUI7p8c8/TTP+OZ61HIJi1AwnebqRbA1gb88otf8cf/9zWWH//9
      7wkJj5mpFmDpxff4q5cCgecRJusACd9xploAQRTRBh1+9+WXtPrjP0WeEhLeGVdOdO5vbdHu
      dvnDH/74rvOTkPBOufI8wOLKMoZc4F9/8mHEPuo2OOrqFNMS3YFBLiPihgrf++D9d5LZhIT7
      5soAEASB451tPvr4I9QJu6FpmLpG4Oeol7LoCGRef0wuORJ5NY/xCOJj8/OojkR6tsHB8Skh
      Ipd3Q9fXNjCDBov1Cr2RyVJaxArV5EjkDTzGI4iPzc+jOhLpmDpj3cb3faRLD5Ikp3j+/CkA
      uXwRgOLb5DYh4ZEwFQDZcp2//M9/SeD7ICabgRK+21zbZoj38A3YhITHTlLFJ8w1SQAkzDVJ
      ACTMNUkAJMw1SQAkzDVJACTMNUkAJMw1SQAkzDVJACTMNUkAJMw1SQAkzDVJACTMNUkAJMw1
      dzpBEHgOX3zxG9afLNHrGWSzEm6g8P2PXjxU/hISHpQ7BUDz+ADbcdDtkIVyDgORHEFyJPIG
      HuMRxMfm51EdibyJlacvKNdXEYWA7tBkNS1ikRyJvInHeATxsfl5VEcibyOTzQKwmskDkL/z
      JRMSHg/JIDhhrkkCIGGuSQIgYa5JAiBhrkkCIGGuSQIgYa5JAiBhrkkCIGGuSQIgYa5JAiBh
      rkkCIGGuSQIgYa5JAiBhrkkCIGGuudN2aN+1OTxpsbJYpTs0KGYkrEBhoVJ4qPwlJDwodwsA
      P0AWPXYPm+QVgRNLQAlDqqVcciLsGh7jCazH5udfzImwcb/JSVunXkrRGdlkMyJG8pG8G3mM
      J7Aem59/MSfCaivPqK3c+RoJCY+WZBCcMNckAZAw1yQBkDDXJAGQMNckAZAw1yQBkDDXJAGQ
      8J0iCAJ+8Ytf0Gq1ZkqfBEDCdwpBEFhZWcEwjJnSJwGQ8CgIw5Bf//rXMz+41+F5Hv/0T/+E
      oigzpY+/lp2QcE9Uq1VM0yT7+v2zb4OiKPzd3/3dzOmTAEiIhed5/PKXv+QHP/gBxWLxrf34
      vs8XX3zB3/zN37y1D3frM7zNH0Vs6b/6bwhy6trf3FsXyHVdTk9PIzZd1/nZz342824/Xdf5
      0Y9+RK/Xi9gty+LHP/4xjUZjJj9BEPDTn/6U3d3diD0MQ37zm9/M7CcMQ371q1/xi1/8Yupv
      33zzDdvb2zP5Afj666/5/PPPp+xHR0f84Q9/mNnP4eEhP/nJT6bKtNfr8cUXXxAEwUx+er0e
      f//3f4+maRG7ZVn8/Oc/x7btmfwIgkCtVpvyEwQBn3/+OYPBYCY/sizzt3/7t5RKpan8fPbZ
      ZzSbzVt9BO1XeN/8MPIfgXeRn5///Odsbm5GrztT7mZAEAQymUzEJkkSmUwG27ZnatbS6TSL
      i4uoqhqxq6rK0tIS6XR65rwsLy+Ty+Wm/lav1xkOhywvL8/kK5/Ps7i4OGWv1WocHx/P5OP8
      uldRKBTu5KdSqVCtVqd2vKbTaURRxPO8qfK7CkVReO+996Z0EUWRfD6PaZqkUtfXnOeMx2O+
      /PJL/vqv/3rqb/V6nX6/T7lcvtGHd/AF7ub/vPi3kKmQ/o//Fbi79tdx3TMhhGEYxvL8Gsdx
      sCwLOKs5zwUyTfMiMCbtk5ynOd8bfj6AOU8fhiGu614Ie5sfANu2LwS8Lj/XEQQBruuSSqVw
      HCfyQJ37siyLVCp14fe2PE3mZzK967oIgnCxlfc2P47joCjK1HUn8xzHz+UymqWsJ7mrH9u2
      kQML0Rm9MYoy5JfvrH1adMEaEoZwkaSwhiCKF9e6HNT31gKoqnqRySAIEEUR33NRUmkyqag9
      8D1s1yedTnGez2KxSOB7WI5HJpNGmEgfBj6m7ZDJZKL2MMA0bTLZM7sgCOTzeSBEluWz9K8f
      jvNCm7RPxr5pmqQzGURBwPM8HOfsepZpkkpnEMWz9GEYIooiqiKjpDJIohC5N8s0kNU0svSm
      d1ksFrEtE0lJXdjP0zu2hSApKLI0ZUeUURU54sd1bEIkVFWOpPdcBz8USKnKJQ0cXB/SKTXi
      x/dcHC8knVYjZRr4HoqautDmwh74WLZ7oc25n5u0kWSFbPaN/UyDENO0LjQwDANVrSBJ61iW
      STqTvUJ7d/qZuKT9WX6WCMNVDNMiO6P2DzINKr6OuO3tLV692rzSvrO9hetF+6u7u9sc7u+g
      WV4k/f7uDo3DXbqaG7Ef7u3QOd3ldBDtr54e7tM5PeCwa1ykFwSBXvOI0+ND9ptn/VJBEBAE
      Aa3f4ODomL3j6OKJq3XYPjhl5+D4Ir0oimD1+Wb3lO3dvei9OWO+3T2K2AHwTL7d3mdreyea
      PnB5tbU9bQ9DNjc32bxijLG5ucmr7a2pMt3c3OTV1hX2rS1ebW5xme3tLV5tbsL5g/A6/c72
      Fjs7WzivtTm37+1sc7S/w9iKnrq6SZve6S4nr7U516BxtE/79IDDrh7x02sd8eq4h2770evu
      bnN6uENPj/o/2N2hc7JLYxjV/uRgj+7pAUc9M3LdbuOQxskh+60h8Eb7B10HyOfzZNMqp81O
      xF7I50mlUrTbnUvpCyiKSr8btefyeQQ5xbjXjtizuTyhmMIYRO2ZXI5QVLHHXfzgTS2vprOI
      soJrDC8EBlDUNKos49s6pvNmcCnKKmlVJPQs9EnhRYVcSkQIPMaG88YuyOTTCmLoM9StCbtE
      PqMiCSGD8eQ8t0Aum0EWoTccR8sil0WVRLr94aUyypGSJdq96OCykM+RVmRand6UPZNSaLa7
      l+xn2jRalzXIk1JTtNvRMs3l88iKSr9ztTajy9rkCwRXaJPO5kFUsce9iDapdJai7NPrXL5u
      AfEK/7l8nlBKofcva58nFFWsUYdg0n8miygpuPowUvE+aACMNAPH8xgMooU/1HRs12U46kfs
      g5GG6bho46joveEYw3YwjdEl+wjNcrCt6AxEfzjCsG0828D139yspo2wbBvPsTDsNw+0pY+x
      HQvPdRgY7oXdtzRcx8LzPJqjiZrG0XEcG8fzOR2Yb+yeif3a3uhNPNC+g+U4OJ5Psztxz2GA
      aZ/Z25ceLMN2cTyPdjvaKummjeN5dC89KJppndl7UT9j/cze613W4Fyb3iX7mTajUTTAzrXR
      tau1sS5rMxiiWQ7OJW0Gw+GFNpOVkDYeUVD9Ke3759rrs2r/xr83EQDj8QjTtvEcE2OiknvQ
      dYBquYTtuJQq1ai9UsayHIqlSsReq5YxTZtCMTprUK9V0A2LfKF0yV5F001y+ej8c61aZTTW
      yeTypOTJvngFLxyjZnIUM29WCjP5MnlHQE5lWCymCIOzApIyRXK5AFFJs1SbGPClChTyDoKk
      srQ48ZlAJUshlwNJYbE+cW+SSjGfJxTE6GyQIFEq5AlCgYVLs0SlQh4/CKnVozNQ5WIBzw+o
      LtQv2Yu4nk+lthCxV0pFHNejXKlF7NVKCdt2KZWj2tQqZcwrtFmoljHuQZvqhDZpRcR8XQ8V
      ShU0TWd1NXpfC9UKhjntf6FWRb9G+7FmkMkVUKQ3g+ViqYKPRiqTo5B+89g/aAvQ63Vptlq4
      3uU563N7tD/Z7/WutPde2x3Xjdr7/Svtw0GfVruNabtMTnHp2pBWu41m2BG7bYxotdsMxlZk
      YOzbGu12m87QIDJX5uq0222afS1q9yzanQ7N7jDS/OK7tDttmp1+1B76dDodmu1OpDsA0Ol2
      aLZa+H50nNS9xe5dKuvu67L2Lq8bdK/WoHubBpft/au16V+jzWj4WhvLiWhgjIdowx6ue+mZ
      6F993ev8DwcDWu02lu1E7Pr4tfZmVPsHbQHqCzVSpkfoRTO5tLCAmrIIguhNLdUXkJQMQRAV
      a2WxjiCqBJdmbFcX64ShOGVfqtdxPJBEIITzaYJKdYGR4Z7168M3f8iVapSHFumMhB/AecWh
      5GtUijqpjBx9QDMVKsUhqUwazw9IKWczOKQKVEtFlNSZ/QIlQ61cQlZS0cpAVKhVSoiSeiZ8
      5s0U3UKlQijKOJceiIVqBS+UcC8JX69VsTymXg2yWKui2wH+JQ0Wz7XxL2tTQ0nlprRZri8g
      KumL1vGclXodQZjWZmWxTnCFNov1OrYLoiREKo9ydYGxI0xpv7y4gCCphJcW+FYXFwhDiYDw
      Uvo6rs/ZrB0X0lOtLTA2PVJKVPsHbQFa7Q6d00PsIHqZRqvNqNdAs4Ipu6N16I6j0XvSbCG4
      Q057+pQ9jcleI9pvbLRapEWHnePumxIAet02Quizc9iMzCVrww6OH7JzcMLE7CXuuMvIFdjZ
      P7iY7gTA6NO1BXZ2dyPTndhjuoY/bXdNOmPrzP56uhOAwKUzGLOzu4uiROuidq/H7lX2bo+D
      gz1EKWpvdbqcHB0QClLE3ux0aZ4c4HHJ3u7QbRxiB1F7o9VG6zUYm1FtTlttXK1LZ3Rp1qXZ
      QnRHnHS1KXtGMNm9pE2z1SIlOOwedZmczu/32vQ0h54W1f602QZ7yGk/uknupNEihc5+Y3Qp
      fZOMaLNz3J2Unm6njYjPzmEruo4QPjCnjcataYbD4cX/j/qdULPcqTTmqBv2NftGP6PRKAyC
      4Owf1ig87enTiRw9PO0Op+0TuK4b6vrr3/peeNpsXZnurvd2Xfo/lZ9Go/GmvCbodlqh7foz
      +7HG3bB3hTa+0Q+bA+tGP7quh657pvfQcEL9Cu2NUTcc6M7M+QmtYXjav077UcT0oC1A4/iI
      fq/H4fHp7YmBMAzoDka0m9H0/XaDo9MWp43Z/BCGHDZ7WKN2ZBbIHA/Y2j2i0zzF8WdYAA9D
      jk5OSYcm7clWKbD59ptNBp0mQ9O9/vcTjHpNwhBOWhOzMWHA3vYWg36PVnd4/Y8nCKwhuitw
      dGn7xPHBHv1+n+PGbAdBgsBHM4wpP63TE9rtDscns2vW6I7ot6P7q4bdFrtHTZrNk5n8EIb0
      2g1al7TvnWt/Orufw2Yfc9jGm9DYGPdfa38S0f5BA8ANQmoLC3jubBurfNeh2WpTLkdnIEzb
      JVeukZZm3LUR+pw2muQLJeSJrottW2SKJYpZdWoR7jo6zQYGGWr5if3lvkMmm6FQKF4s2t3G
      qN+lr9nUaxP3FgZIappqpYJh6Nf/eAJTH9Npd6ktRGeHAkGiVqviWLPtp3dti067PTU75JzP
      JAWzBXbgezSaran9PqZpkylVyaszvqUvDOg1G1PaW7ZLoVIjdUftC4VSpDtrW/aF9pPjswcN
      gI31daxxD1GZbX+3rKZZWayhG2bEvrq+geQZ2P6M2RVlnq2vMNaNyBCpvLBMQRUYGS4peQZh
      BIGX7z9lPNaiAaMUWFoo0RuOqWZnO3ixvPYU0bew7YkHS5RZW6nTarVv3TB2Tq6yTDkrYFrR
      SmVjbZVRr0M6V7rml1FS6Sz1ahnDjJb1+sYGrjEgFG/fCAcgySrry/UpzZbXN0iHNoYz44Mr
      Srx4/wm6Oa296Og4vnTNDy/7kXm6vjylfaW+TEGBkeFFtH/wE2GhlKFavHnz2S0H4LEAAAiI
      SURBVCQnBzt8tbkzZbdcgdV65YpfXM24e8Kvf/91pBkEGGkWT9dX4IoNVVfR6w/Y//b3dPRo
      TT8cDHny/NmsbrCMMdtbm5y0owtPvq1TWVqPtFQ34ll8s7XH4dFR1B64KLkK+fRsAQnw6tUr
      9g8Ppy+BSr2Sv+IXV9M53efLr6a3W2h2wMZy7YpfXM3OYZuvN3en7JYnslKfrYKAM+1/9ftv
      pqaWR7rN0/VlJmdGHjwAPMeMrLrexsbzD3iyPL11WMRjqM1+XC5Xf8KnL9cRLz2hmZREqzuA
      cLaaKZUp8Mkn3yetRIuqUMhyetJixvoNUVH55JNPyGej23olNcOo22S2Dhkginzy8fcpXz58
      IirYenSLx218/+OPqZSnK5XQs9FM54pfXE194wUfbkxvGZeFgN5otq4dwHKtxMbywpRdDD2G
      unnFL64mX3/Kv3q5Nr1lXBVp9aJjrQcNgPGoT6c/mnkA49omjXZ3aurP1MccNzs0Zx0EBy4n
      J6eIkhKpoT3HYnv/GGPUwXRnGwQ3Ww0sN4wGQODxzbfbKIFGczjb+KbXbjE2bFITuzIJQxpH
      u5iuwMnp7Qc+AMaDHv3xGOXStt5B95S+5nByMtvZAsvUaPUGqJfeqKyPhzS7g5k1812L00YL
      +dIZXNvUOTxt0WrOdviIwOe000aRo35Mfcxxq0OzMeMg2Hc5fq39ZKPq2iY7Byfogzam+47G
      AIVihZfvPWNjbW2m9Eoqg+jqHDai+1kyuQLf++AFGxsbs11YVMhnZfb2DyPNoKym+cH3P6Ja
      XyWXmuHWBYFCNku3eUjfmFzAkvn0009QcwusVmfr3hWLRbqtJoPJTW+CwMrTD1ldyLG+Ottr
      twvFIv12l34/2pUqL6zx/sYi6+vrM/lJZ/LYgw7NYXQePVco8cGL99iY0Y+kpEmJLntH0Qc9
      lcnx8Ycv76CZRCqAo+Y12q/P6EdSKGQldvei2iupDD/4+CMWFlfJqm+0f9gzwYIwtWflNhaW
      1ihfMQArlqvc5cRpuVgBpYAsXeoC5Yqs5Wb3VKuWsbwwOgvEWddlY2O2wAbI5IssLdaplqOD
      VEGUWF6d7WEDQM7ydL1OsXqpby0ILCzOdsrtnJWnz5Ez01/3qVSnuyE3UakukSlPD1ILpQp3
      +XbQysYqWWv6+Ozdta/y7HkpunjJmQaZS3uHHt1rUTRdo9M6Rb9DH/QqRpqOPurRHWi3J76B
      4XCMjMXecfv2xDdgGxpeELB3cHR74pvwLTTL5/Bwf2qQd1c0XadxcoTlxPtCi6Zr9DpNxpNb
      wN+C0fBsDSi+9hrasEtvePv441G9FcJ1HRYWFikLMrnM7edaryVwKVVqpHIlauXZZzOmCEPy
      5TKhnmJj6W614mUEJUOpWKCyMD1YvAuWJ7C0UCJbKE/VcHfy49gsLS6CkiGtzjjFeAW+51Ct
      1clXBAq5GOd2A598pYparMbT3ncpVRZI5X2qpekz4Zd5VC2AoqgMBv3bE96GqGCMZ1tZvRFB
      wNS0mWd6biRw0K3ZFpduIq0I9Aazz6xc60dNTb19422QZJXRcLY3P9yIKGGOR7enuzVDCvod
      tH9UAQCvD0lLb18jnWNZNtI9fMPKtS1CUZ55vv86As/FD5ialr0zYYDjeEhifOls27kXP9Y9
      aebb1r34sa0zP7OU9KMLgFIhj2nHrykXqkW0mH1SgGqthqmNI+cE3oZ0rogQONHzAG+DlCKb
      EqLbrd+SXC4zdU7gbaiW8uhWvH47QK5SxXLia1+rlhgb1kwt9+MaA9gWajpFqM62DH8dgXf2
      Gg3BAWGmeuBqwjAgEBVkSbx4a8NbesJ2A9Ip5eJtDm+LYViks5nIWx7eBssykVMZspl479vx
      nLNXjbhBTM18DytMocYYjwAEnkNaVRAcYSbtH1ULsLe3R6s7pNOeccHrGk4O99k7aWNqXZwY
      NaWrddje3sMxxxwPZlvwuhLPYmdnD9M02T+Zbbfmdezt76PrJgcH+/H87O0zHmscH01vhbgL
      +3t7HLf6DPvx7qvXPMYed+i0Z1zwuoajg312TzqYWhdvhrfkPaoW4Nnz9/DDEDPmG4JX1p9Q
      80Nsy0CJMVOi5Bf48MM8BC5CKkZRyWk++OAFCHCHXSFX8uLFC0JBwIjZvXvv/fcJwzD225if
      PnuOdw+aVRfXyHsepjn7loerWNt4St0PsU1jplmyR9UCKKpK62iXZnd8e+IbkBQVrddg76hF
      jB4QgiASOAZfb+4gxAgkEJCEkK/++DVhnAwBqiLx6quvsO6w5+dqPwqHu6/ojeIFkqyq9BoH
      HLfizd6Jsowx6t+P9t0GezO2tI8qAADcUOLJWry5cgDD9nn/+UbMxw0Mw+DZ+y+YZff0TXi2
      SW3lCdnU7Ls1r8R3SRVqM81x30YopVldqt6e8BYsT+D5RvwvqLuucy/a67bH+89m0/5RBYCh
      jTANne29eP1SxzIwTYNXmzvEmXQJPIeRbnCwvRnZQHVnwoD+aEz39JD+OF5XoT8YoA27nMas
      ccejAYY+Zv8o3njLNMaYpsHmTrwxiedYDMc6O/vxVsody8CyTF5tzab9owqAbL6IrKgzn0a6
      DjWdRZEVUoow9VaCuyDKKhlVpZRT0Wc92HEVgkgxnyWby6Gb8boclXIJJZ3DMuNt8SgUyyhK
      Ct+Nl59MtoAiK4izb+i+EllNk02lCO9Be1lWUC+9deI67u3t0HEYjUYXH1cIw4AwFBDfos89
      Ho/J5/Nn+8DDkOD1i2zvyvnLcbPZbCw/EL23IAgQRPGtumVTfl6/2zKOnzAI4D78hCFhyFtp
      dvZyXBVZls/88HaLhZP5uYtmj2oWCM4GnnEXS187ir/qep9+4K2D6KH8CPflRxDuRTNBiLNq
      E3E0s2aPqguUkPCuSQIgYa5JAiBhrvn/giV5xOSc5i8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
